{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Welcome to the Geometry Dash Programming Discord server's online iteration of documentation for Geometry Dash. Here you can find all sorts of information, documents, and resources for interacting with the game and its servers. We aim to make <code>gd.docs</code> the most comprehensive open source of information for the game, created by many people who have interacted with the game and wish to share knowledge with others.</p> <p>The provided documentation is available in the repository. For all issues regarding information found here, please consult us by creating an issue.</p>"},{"location":"#projects","title":"Projects","text":""},{"location":"#geometry-dash-wrappers","title":"Geometry Dash Wrappers","text":"<p>A few people and teams have gone out of their way to create proper wrappers and APIs around the Geometry Dash servers and its client. All of the known and endorsed projects will find their way here, as a listing of resources people can use for their own projects.</p>"},{"location":"#python","title":"Python","text":"<ul> <li>gd.py by nekit</li> </ul>"},{"location":"#js","title":"JS","text":"<ul> <li>gd.js by 101arrowz</li> </ul>"},{"location":"#java","title":"Java","text":"<ul> <li>jdash by Alex1304</li> </ul>"},{"location":"#geometry-dash-projects","title":"Geometry Dash Projects","text":"<p>These are projects that generally interface over the Geometry Dash servers and client, and overall have built up their own recognition and traction along the community and developers alike.</p>"},{"location":"#node","title":"Node","text":"<ul> <li>GDBrowser by Colon</li> </ul>"},{"location":"#c","title":"C++","text":"<ul> <li>GDCrypto by cos8o</li> </ul>"},{"location":"#outside-remarks","title":"Outside Remarks","text":"<p>With this documentation, the Geometry Dash Programming staff team would love to see your interesting ideas with this project, and kinds of things you create with the information provided. Make sure to hit us up on our discord, and show us of such!</p>"},{"location":"code_of_conduct/","title":"Code of Conduct","text":""},{"location":"code_of_conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"code_of_conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the overall   community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of   any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email address,   without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"code_of_conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"code_of_conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official email address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"code_of_conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement to conduct@gd-programming.org.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"code_of_conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"code_of_conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"code_of_conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"code_of_conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"code_of_conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"code_of_conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://contributor-covenant.org/version/2/1/code_of_conduct.</p> <p>Community Impact Guidelines were inspired by Mozilla's Code of Conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://contributor-covenant.org/faq. Translations are available at https://contributor-covenant.org/translations.</p>"},{"location":"client/gamesave/","title":"Client Gamesave Resource","text":""},{"location":"client/gamesave/#ccgamemanagerdat","title":"CCGameManager.dat","text":"<p>Your CCGameManager.dat File contains a lot of information regarding your account. it is encrypted using Xor with a key of 11 / 0xB, url-Safe Base64 and Gzip and is in the XML format</p>"},{"location":"client/gamesave/#gamesave-key-structure","title":"Gamesave Key structure","text":"Key Type description bgVolume Float any value between 0 - 1 sfxVolume Float any value between 0 - 1 playerUDID UDID The UDID of the user playerName String The In-game Name of the player playerUserID Integer The userID of the player playerFrame Icon The ID of the player Cube playerShip Icon The ID of the player Ship playerBall Icon The ID of the player Ball playerBird Icon The ID of the player UFO playerDart Icon The ID of the player Wave playerRobot Icon The ID of the player Robot playerSpider Icon The ID of the player Spider playerColor Icon The ID of the player Color playerColor2 Icon The ID of the player Color2 playerStreak Icon The ID of the player Trail playerDeathEffect Icon The ID of the player Death Effect playerIconType Icon The Index of the player's IconType playerGlow Bool if Glow is enabled or not secretNumber Integer the answer to <code>cod3breaker</code> in the vault of secrets hasRP Bool If the player is a moderator valueKeeper Dictionary Dictionary filled with GV values you have enabled unlockValueKeeper Dictionary Dictionary of Unlockable GV values customObjectDict Dictionary Dictionary of object data of custom objects saved reportedAchievements Dictionary contains a dictonary of all reported achievements on your account showSongMarkers Bool if showSongMarkers is enabled showProgressBar Bool if showProgressBar is enabled clickedGarage Bool if Garage has been clicked clickedEditor Bool if Editor has been clicked clickedPractice Bool if Practice mode button has been clicked showedEditorGuide Bool if EditorGuide has been clicked showedLowDetailDialog Bool if low detail mode has been has been clicked bootups integer The ammount of times you have opened Geometry Dash hasRatedGame Bool if you have rated the game binaryVersion integer The Games Binary Version resolution integer The games resolution? texQuality integer how high the text quality is timeOffset integer music offset in milliseconds"},{"location":"client/gamesave/#glm","title":"GLM","text":"Key Type description GLM_01 Level All Official Levels you have progress on are stored here GLM_02 level Uploaded levels - before the account System GLM_03 Level online levels played GLM_04 rating Shows what levels you have rated. was removed after 1.9 GLM_06 AccountIDs The AccountIDs of all creators you follow GLM_07 levelID Levels played in last session GLM_08 filters Search Filters States GLM_09 filters Search Filters for Online Levels GLM_10 Level Completed dailies GLM_11 Integer Current Daily ID GLM_12 likes Something Related to likes GLM_13 levelID All levels you submitted a rating on GLM_14 reportedLevels A dictionary of all levels you have reported GLM_15 levelID all Demon levels you have submitted a rating for GLM_16 Level All the levels found in the Gauntlets that you have progress on are stored in here GLM_17 integer Current Weekly ID GLM_18 Folder The Folder Names for saved levels GLM_19 Folder The Folder names for Local Levels"},{"location":"client/gamesave/#gs","title":"GS","text":"Key Type GS_value Player Stats GS_completed Completed Levels GS_3 Completed levels with coins <code>{levelID}_{number of coins aquired from level}</code> GS_4 Completed levels with coins <code>{levelID}_{number of coins aquired from level}</code> GS_5 Completed Mappacks + rewarded stars <code>&lt;k&gt;pack_{MappackID}&lt;/k&gt;&lt;s&gt;{Stars rewarded}&lt;/s&gt;</code> GS_6 all Purchased Icons/Colours in the shops <code>&lt;k&gt;{ListingID}&lt;/k&gt;&lt;s&gt;{Price}&lt;/s&gt;</code> GS_7 level progress <code>&lt;k&gt;{levelID}&lt;/k&gt;&lt;s&gt;{percentage}&lt;/s&gt;</code> GS_8 Unused GS_9 How many stars downloaded levels give <code>&lt;k&gt;{levelID}&lt;/k&gt;&lt;s&gt;{rewardedStars}&lt;/s&gt;</code> GS_10 Offical level progress <code>&lt;k&gt;{ID}&lt;/k&gt;&lt;s&gt;{percentage}&lt;/s&gt;</code> GS_11 All rewards gained from Daily Chests GS_12 Contains Quests GS_14 Daily/Challenges rewards GS_15 Contains Upcoming Quests GS_16 Daily/Weekly level progress <code>&lt;k&gt;{Daily/WeeklyID}&lt;/k&gt;&lt;s&gt;{percentage}&lt;/s&gt;</code> GS_17 Daily/Weekly Stars <code>&lt;k&gt;{Daily/WeeklyID}&lt;/k&gt;&lt;s&gt;{Stars}&lt;/s&gt;</code> GS_18 Gauntlet Level Progress <code>&lt;k&gt;{levelID}&lt;/k&gt;&lt;s&gt;{percentage}&lt;/s&gt;</code> GS_19 All the Rewards from unlocked chests in the treasure room GS_20 Demon Keys GS_21 All rewards for Completed Gauntlets + rewards for Demon quest/social medias GS_22 Rewards from Geometry Dash world GS_23 Gauntlet Level Progress <code>&lt;k&gt;{levelID}&lt;/k&gt;&lt;s&gt;{percentage}&lt;/s&gt;</code> GS_24 Daily/Weekly Percentage GS_25 All the rewards from completed weekly Demons"},{"location":"client/gamesave/#gja","title":"GJA","text":"Key Value GJA_001 Username GJA_002 Password (in plaintext) GJA_003 AccountID"},{"location":"client/gamesave/#gdl22-gja","title":"GDL22 GJA","text":"Key Value GJA_004 SessionID"},{"location":"client/gamesave/#llm","title":"LLM","text":"Key Value LLM_01 Local Levels LLM_02 Hardcoded to <code>binaryVersion</code>"},{"location":"client/gamesave/#mdlm","title":"MDLM","text":"Key Value MDLM_001 Dictionary of SongInfoObject MDLM_002 Song Priority of a song"},{"location":"client/gamesave/#kbm","title":"KBM","text":"Key Value KBM_001 Keybindings KBM_002 Keybindings"},{"location":"client/level/","title":"Client Level Resource","text":""},{"location":"client/level/#level","title":"Level","text":"<p>A level is a playable object in Geometry Dash, namely coming with data that explains on what it is, and the string that the client interprets, known as a level string. It is stored in XML format, and each level entry is a dictionary, containing key/value pairs denoting the level's properties.</p>"},{"location":"client/level/#level-data","title":"Level Data","text":"<p>Level Structure</p> Key Name/Value Type Description k1 Level ID integer the id of the level k2 Level Name string the name of the level k3 Description string the level description, encoded in base64 k4 Inner Level String inner level string the inner level string, or the playable level k5 Creator userName the name of the level creator k6 UserID integer The UserID of the level Creator k7 level difficulty integer the difficulty the level has k8 Official Song ID Audio Track the official Song ID (if used) k9 Rating integer The rating a level has k10 RatingSum integer the sum of all the ratings a level has k11 Downloads integer the amount of times the level's been downloaded k12 setCompletes integer level completions for that particular level k13 isEditable Bool used to stop people editing online and Official levels k14 Verified bool whether the level is verified or not k15 Uploaded bool whether the level is uploaded to the server or not k16 Level Version integer the version of the level k17 Game Version integer The Games Version k18 Attempts integer the number of attempts that are made to this level k19 Normal Mode Percentage integer the max percentage that has been achieved in normal mode in this level k20 Practice Mode Percentage integer the max percentage that has been achieved in practice mode in this level k21 levelType Integer The Level Type (1 = Official, 2 = Local, 3 = Saved, 4 = Online) k22 Like Rating integer the level's like rating (<code>likes - dislikes</code>) k23 Length Length the level's length k24 Dislikes integer how many dislikes a level has (unused) k25 isDemon Bool if the level is demon or not k26 Stars integer the stars the level is worth k27 FeatureScore integer A featured levels Feature Score k33 Auto Bool If the level is auto k34 Replay Data Gziped String Contains a Gzipped String which contains replay data for levels k35 isPlayable? Bool if the level is downloaded (honestly not much is known about this) k36 Jumps integer total Jumps on a level k37 required coins Integer coins required to unlock an official level k38 isUnlocked Bool is Official level Unlocked k39 level Size integer <code>this-&gt;levelSize = std::floor(this-&gt;levelString.length() * 0.152);</code> k40 Build Version integer the games build version k41 Password integer the password  set for the level k42 Original integer The ID the of the original level (if the level was copied) k43 Two-Player Mode Bool If the level is 2 player mode k45 Custom Song ID integer the custom Song ID (if used) k46 Level Revision integer the revision of the level k47 hasBeenModified Bool if the level has been modified from outside the GD editor k48 Object Count integer the object count of the level k50 Binary Version integer hardcoded to binary Version k51 capacity001 integer BatchNodes k52 capacity002 integer BatchNodes k53 capacity003 integer BatchNodes k54 capacity004 integer BatchNodes k60 AccountID integer the Creators AccountID k61 First Coin Acquired bool whether the first coin is acquired during verification k62 Second Coin Acquired bool whether the second coin is acquired during verification k63 Third Coin Acquired bool whether the third coin is acquired during verification k64 Total Coins Integer How many Coins the level has k65 areCoinsVerified Bool denotes if the coins are verified or not k66 Requested Stars integer the requested stars during publication of the level k67 Capacity String String Contains batch information about levels k68 triggeredAntiCheat Bool if you trigger the anticheat when beating demons k69 High Object Count Bool If a level has a high object count k71 Mana Orb Percentage integer the percentage up until the orb reward has been granted k72 hasLowDetailMode Bool If a level has LDM k73 toggleLDM Bool If a LDM is Enabled k74 timelyID integer the timelyID for a level k75 isEpic Bool if a level has been awarded an epic rating k76 demon type integer Demon Type Enum k77 isGauntlet Bool is the level in a gauntlet k78 isAltGame Bool Levels that were completed on the free games k79 Unlisted bool whether the level is to be marked as unlisted or not during publication k80 Seconds Spent Editing integer the number of seconds spent editing the level k81 Seconds spent Editing (copies) integer the number of seconds spent editing the level (Previous copies) k82 isLevelFavourited Bool if you put the level in your favourites k83 levelOrder integer ordering for levels k84 Level Folder integer the folder in which the level belongs (0 represents no folder) k85 Clicks integer Clicks done on the best attempt k86 Player Time integer the amount of time on a players best attempt k87 level Seed LevelScoreSeed Contains info to verify the integrity of levelScores k88 Level Progress String Contains a list of high score differences seperated by a <code>,</code> k89 vfDChk Bool used to check for level completion k90 Leaderboard percentage integer Contains the percentage for level Leaderboards <p>Last Editor State Key/Value Pairs The last editor state key/value pairs contain a few values that indicate the last state of the editor before exiting the editor on that level.</p> Key Name/Value Type Description kI1 Editor Camera X Position float the X position of the editor camera kI2 Editor Camera Y Position float the Y position of the editor camera kI3 Editor Camera Zoom float the zoom level of the editor camera kI4 Build Tab Page integer the displayed page within the build tab kI5 Build Tab integer the selected build tab kI6 Build Tab Pages dictionary the last browsed pages of each build tab kI7 Editor Layer float the last selected index of a layer <p>Note that the build tab pages do not depend on the user's button row/column settings. That means, if the settings are changed, the build tab pages will not reflect the correct changes. For example:</p> <p>The build tab page is 5, and the button settings are 6x2 (default), meaning the currently shown elements range from <code>5 * 6 * 2</code> = 60 to <code>6 * 6 * 2 - 1</code> = 71 (zero-indexed). If the user changes the button settings to 12x3, the tab page will remain as 5, showing elements ranging from <code>5 * 12 * 3</code> = 180 to <code>6 * 12 * 3 - 1</code> = 215 (zero-indexed).</p>"},{"location":"client/level/#gdl22","title":"GDL22","text":"<p>Current Unknown Values</p> Key Type Info k91 string k92 integer k93 Bool unlimited Objects? k94 Bool Platformer?"},{"location":"client/gamesave/GLM/","title":"GLM","text":"<p>GLM (Global Levels Manager) are various Dictionaries that contain every bit of information you need to know about online levels</p>"},{"location":"client/gamesave/GLM/#glm_01","title":"GLM_01","text":"<p>GLM_01 is used to store all progress the player has made on official levels</p> Key description kCEK 4 level data"},{"location":"client/gamesave/GLM/#glm_02","title":"GLM_02","text":"<p>GLM_02 was used before the account system to keep track of who owned Specific levels, currently unused</p> Key description k_{Num} what place the level is placed in your level list kCEK 4 level data"},{"location":"client/gamesave/GLM/#glm_03","title":"GLM_03","text":"<p>GLM_03 is used to store progress the player has done on all online levels</p> Key description kCEK 4 level data"},{"location":"client/gamesave/GLM/#glm_04","title":"GLM_04","text":"<p>GLM_04 contains all the difficulty ratings you have given levels, currently unused</p> key value <code>{levelID}</code> <code>{diffID}</code>"},{"location":"client/gamesave/GLM/#glm_06","title":"GLM_06","text":"<p>GLM_06 contains all of the creators you follow in game</p> key value description AccountID 1 Doing this would place the creators levels in the followed tab"},{"location":"client/gamesave/GLM/#glm_07","title":"GLM_07","text":"<p>GLM_07 contains the levels you played in the last session</p> Key description levelID accompanied with a 1"},{"location":"client/gamesave/GLM/#glm_08","title":"GLM_08","text":"<p>GLM_08 are the states of search filters</p> Key Value Diff0 NA Diff1 Auto Diff2 Easy Diff3 Normal Diff4 Hard Diff5 Harder Diff6 Insane Diff7 Demon Len0 Tiny Len1 Short Len2 Medium Len3 Long Len4 XL demon_filter Demon ID uncompleted_filter bool completed_filter bool featured_filter bool song_filter official SongID original_filter bool twoP_filter bool enable_songFilter bool customsong_filter songID nostar_filter bool coin_filter bool follow_filter bool friend_filter bool epic_filter bool star_filter bool"},{"location":"client/gamesave/GLM/#glm_09","title":"GLM_09","text":"<p>GLM_09 shows all search filters available</p> Key Value Diff0 NA Diff1 Auto Diff2 Easy Diff3 Normal Diff4 Hard Diff5 Harder Diff6 Insane Diff7 Demon Len0 Tiny Len1 Short Len2 Medium Len3 Long Len4 XL demon_filter Demon ID uncompleted_filter bool completed_filter bool featured_filter bool song_filter official SongID original_filter bool twoP_filter bool enable_songFilter bool customsong_filter songID nostar_filter bool coin_filter bool follow_filter bool friend_filter bool epic_filter bool star_filter bool"},{"location":"client/gamesave/GLM/#glm_10","title":"GLM_10","text":"<p>GLM_10 contains every daily level you have ever had progress on</p> Key Description {timelyID} A dictionary which contains the Encoder key for levels kCEK 4 The Encoder key which contains level data"},{"location":"client/gamesave/GLM/#glm_11","title":"GLM_11","text":"<p>GLM_11 is the current Daily ID</p>"},{"location":"client/gamesave/GLM/#glm_12","title":"GLM_12","text":"<p>GLM_12 contains likes given to a level</p> key Description <code>like_{LikeType}_{LevelID}_{like/dislike}_{ID}</code> needs investigating more"},{"location":"client/gamesave/GLM/#glm_13","title":"GLM_13","text":"<p>GLM_13 Contains all the levelIDs for levels you have submitted a rating for</p>"},{"location":"client/gamesave/GLM/#glm_14","title":"GLM_14","text":"<p>GLM_14 Contains all the levelIDs of levels you have reported</p>"},{"location":"client/gamesave/GLM/#glm_15","title":"GLM_15","text":"<p>GLM_15 Contains all the levelIDs of Demons you have rated</p>"},{"location":"client/gamesave/GLM/#glm_16","title":"GLM_16","text":"<p>GLM_16 contains every Gauntlet level you have ever had progress on</p> Key Description {timelyID} A dictionary which contains the Encoder key for levels kCEK 4 The Encoder key which contains level data"},{"location":"client/gamesave/GLM/#glm_17","title":"GLM_17","text":"<p>GLM_17 is the current WeeklyID</p>"},{"location":"client/gamesave/GLM/#glm_18","title":"GLM_18","text":"<p>GLM_18 is a dictionary of the Saved Levels folder for online levels</p> Key Value <code>{folder ID}</code> <code>{Folder Name}</code>"},{"location":"client/gamesave/GLM/#glm_19","title":"GLM_19","text":"<p>GLM_19 is a dictionary of the folders for local levels</p> Key Value <code>{folder ID}</code> <code>{Folder Name}</code>"},{"location":"client/gamesave/GS_Value/","title":"GS Value","text":"<p>GS values contain Information regarding certain aspects of the game</p>"},{"location":"client/gamesave/GS_Value/#gs-value-structure","title":"GS Value structure","text":"key value 1 Jumps 2 Attempts 3 Total Completed Official Levels 4 Total Completed Online Levels 5 Completed Demons 6 Total Stars 7 Total Completed MapPacks 8 Secret Coins Collected 9 Destroyed Players on the menu 10 Total Liked/Disliked levels 11 Total Rated Levels 12 User coins collected 13 Total Diamonds 14 current orbs 15 Completed Daily Levels 16 Fire Shards 17 Ice Shards 18 Poison Shards 19 Shadow Shards 20 Lava Shards 21 Bonus Shards 22 Total Orbs Collected unique_{LevelID}_{Coins Collected} The Coins Collected on the Official Levels"},{"location":"client/gamesave/GS_Value/#gs_completed","title":"GS_completed","text":"<p>all completed levels</p> Key Value <code>n_{levelID}</code> beaten in normal Mode <code>c_{levelID}</code> Completed level <code>d_{levelID}</code> completed daily <code>g_{levelID}</code> completed gauntlet <code>star_{levelID}</code> Collected Stars <code>dstar_{levelID}</code> Collected Stars for daily <code>gstar_{levelID}</code> Collected Stars for gauntlet <code>demon_{levelID}</code> Collected Demon <code>ddemon_{levelID}</code> Collected Demon for weekly <code>gdemon_{levelID}</code> Collected Demon for gauntlet"},{"location":"client/gamesave/GS_Value/#gs_3","title":"GS_3","text":"<p>GS_3 contains info about all levels you have collected unverified coins for</p> Structure <code>{levelID}_{coins collected}</code>"},{"location":"client/gamesave/GS_Value/#gs_4","title":"GS_4","text":"<p>GS_4 contains info about all levels you have collected verified coins for</p> Structure <code>{levelID}_{coins collected}</code>"},{"location":"client/gamesave/GS_Value/#gs_5","title":"GS_5","text":"<p>GS_5 contains info about all the MapPacks you have beaten</p> Structure <code>&lt;k&gt;pack_{packID}&lt;/k&gt;&lt;s&gt;{stars Rewarded}&lt;/s&gt;</code>"},{"location":"client/gamesave/GS_Value/#gs_6","title":"GS_6","text":"<p>GS_6 contains all the Purchased Icons on your account</p> Structure <code>&lt;k&gt;{ListingID}&lt;/k&gt;&lt;s&gt;{Price}&lt;/s&gt;</code>"},{"location":"client/gamesave/GS_Value/#gs_7","title":"GS_7","text":"<p>GS_7 is the Highscore attempt of levels</p> Structure <code>&lt;k&gt;{levelID}&lt;/k&gt;&lt;s&gt;{percentage}&lt;/s&gt;</code>"},{"location":"client/gamesave/GS_Value/#gs_8","title":"GS_8","text":"<p>Unused</p>"},{"location":"client/gamesave/GS_Value/#gs_9","title":"GS_9","text":"<p>GS_9 provides info about how many stars downloaded levels give to you</p> Structure <code>&lt;k&gt;{levelID}&lt;/k&gt;&lt;s&gt;{rewardedStars}&lt;/s&gt;</code>"},{"location":"client/gamesave/GS_Value/#gs_10","title":"GS_10","text":"<p>GS_10 Contains the high score of All Official Levels you have played</p> Structure <code>&lt;k&gt;{ID}&lt;/k&gt;&lt;s&gt;{percentage}&lt;/s&gt;</code>"},{"location":"client/gamesave/GS_Value/#gs_11","title":"GS_11","text":"<p>GS_11 Contains the reward data for the Timely Chests you have opened</p> key Description <code>&lt;k&gt;{ChestType}_{ChestID}&lt;/k&gt;</code> reward Object <code>k_{number}</code> RewardItems -&gt; the number corresponds to how many RewardItems the player will recieve <code>kCEK</code> The encoder keys"},{"location":"client/gamesave/GS_Value/#chest-types","title":"Chest Types","text":"ID type 1 4 hour chest 2 24 hour chest"},{"location":"client/gamesave/GS_Value/#gs_12","title":"GS_12","text":"<p>GS_12 Contains the currently active Quests</p>"},{"location":"client/gamesave/GS_Value/#gs_14","title":"GS_14","text":"<p>The Diamond Rewards Collected from Challenges and Daily levels</p> structure type Description <code>{TypeID}{challenge/dailyID}</code> int The Number of Diamonds Earned"},{"location":"client/gamesave/GS_Value/#typeids","title":"TypeID's","text":"Types Description c Challenges/quests d daily levels"},{"location":"client/gamesave/GS_Value/#gs_15","title":"GS_15","text":"<p>GS_15 Contains the upcoming Quests</p>"},{"location":"client/gamesave/GS_Value/#gs_16","title":"GS_16","text":"<p>GS_16 contains the High Scores for daily and weekly demons</p> Structure <code>&lt;k&gt;{TimelyID}&lt;/k&gt;&lt;s&gt;{percentage}&lt;/s&gt;</code>"},{"location":"client/gamesave/GS_Value/#gs_17","title":"GS_17","text":"<p>GS_17 contains the Stars rewarded for daily and weekly demons</p> Structure <code>&lt;k&gt;{TimelyID}&lt;/k&gt;&lt;s&gt;{Stars}&lt;/s&gt;</code>"},{"location":"client/gamesave/GS_Value/#gs_18","title":"GS_18","text":"<p>GS_18 contains the High Scores for Gauntlet Levels</p> Structure <code>&lt;k&gt;{levelID}&lt;/k&gt;&lt;s&gt;{percentage}&lt;/s&gt;</code>"},{"location":"client/gamesave/GS_Value/#gs_19","title":"GS_19","text":"<p>GS_19 Contains the reward data for the Treasure room chests you have opened</p> key Description <code>&lt;k&gt;{ChestID}&lt;/k&gt;</code> reward Object <code>k_{number}</code> RewardItems -&gt; the number corresponds to how many RewardItems the player will recieve <code>kCEK</code> The encoder keys"},{"location":"client/gamesave/GS_Value/#gs_20","title":"GS_20","text":"<p>GS_20 seems to be the total amount of Demon Keys you have had over your accounts lifespan</p>"},{"location":"client/gamesave/GS_Value/#gs_21","title":"GS_21","text":"<p>GS_21 Contains the reward data for the gauntlets you have completed</p> key Description <code>g_{GauntletID}</code> the gauntlet number <code>000{ChestID}</code> ChestIDs for Reward Chests <code>k_{number}</code> RewardItems -&gt; the number corresponds to how many RewardItems the player will recieve <code>kCEK</code> The encoder keys"},{"location":"client/gamesave/GS_Value/#chest-ids","title":"Chest IDs","text":"ID how to get 0001 Beat the Challenge 0002 Release the Demon Guardian 0003 Chamber of Time Chest 0004 Treasure Room 50 key Chest 0005 Treasure Room 100 Key Chest 0006 Treasure Room 200 Key Chest 0007 YouTube Chest 0008 Twitter Chest 0009 Facebook Chest"},{"location":"client/gamesave/GS_Value/#gs_22","title":"GS_22","text":"<p>GS_22 Contains reward data for all of the ad chests from Geometry Dash world</p> Key Value <code>{unix Timestamp}</code> orbs"},{"location":"client/gamesave/GS_Value/#gs_23","title":"GS_23","text":"<p>GS_23 contains the High Scores for daily and weekly demons</p> Structure <code>&lt;k&gt;{TimelyID}&lt;/k&gt;&lt;s&gt;{percentage}&lt;/s&gt;</code>"},{"location":"client/gamesave/GS_Value/#gs_24","title":"GS_24","text":"<p>GS_24 contains the High Scores for Gauntlet Levels</p> Structure <code>&lt;k&gt;{levelID}&lt;/k&gt;&lt;s&gt;{percentage}&lt;/s&gt;</code>"},{"location":"client/gamesave/GS_Value/#gs_25","title":"GS_25","text":"<p>GS_25 Contains the reward data for every weekly demon you have completed</p> key Description <code>d100{number}</code> The Timely ID of the weekly Demon you have beaten <code>k_{number}</code> RewardItems -&gt; the number corresponds to how many RewardItems the player will recieve <code>kCEK</code> The encoder keys"},{"location":"client/gamesave/achievement/","title":"Achievements","text":"<p>Geometry Dash has 266 achievements that you can aquire, 2 of them are exclusive to the Steam version of the game. You can find out how to get all the achievements here.</p> <p>keep in mind that adding the achievements into your save data manually will only show them as completed in game but won't give you the reward for the completion</p>"},{"location":"client/gamesave/achievement/#achievement-key-structure","title":"Achievement key structure","text":"<p>Inside CCGameManager.dat, every achievement you have progress on can be found in the <code>&lt;k&gt;reportedAchievements&lt;/k&gt;</code> Dictionary. they are all organised like this  <pre><code>&lt;k&gt;geometry.ach.[internal achievement name]&lt;/k&gt;&lt;i&gt;[percentage complete]&lt;/i&gt;&lt;k&gt;geometry.ach.[internal achievement name]&lt;/k&gt;&lt;i&gt;[percentage complete]&lt;/i&gt;\n</code></pre></p>"},{"location":"client/gamesave/achievement/#internal-names","title":"Internal Names","text":"Internal name How it's acquired geometry.ach.level01b Beat Stereo Madness in normal Mode geometry.ach.level01a Beat Stereo Madness in practice Mode geometry.ach.level02b Beat Back On Track in normal Mode geometry.ach.level02a Beat Back On Track in practice Mode geometry.ach.level03b Beat Polargeist in normal Mode geometry.ach.level03a Beat Polargeist in practice Mode geometry.ach.level04b Beat Dry Out in normal Mode geometry.ach.level04a Beat Dry Out in practice Mode geometry.ach.level05b Beat Base after Base in normal Mode geometry.ach.level05a Beat Base After Base in practice Mode geometry.ach.level06b Beat Cant Let Go in normal Mode geometry.ach.level06a Beat Cant Let Go in practice Mode geometry.ach.level07b Beat Jumper in normal Mode geometry.ach.level07a Beat Jumper in practice Mode geometry.ach.level08b Beat Time Machine in normal Mode geometry.ach.level08a Beat Time Machine in practice Mode geometry.ach.level09b Beat Cycles in normal Mode geometry.ach.level09a Beat Cycles in practice Mode geometry.ach.level10b Beat Xstep in normal Mode geometry.ach.level10a Beat Xstep in practice Mode geometry.ach.level11b Beat Clutterfunk in normal Mode geometry.ach.level11a Beat Clutterfunk in practice Mode geometry.ach.level12b Beat Theory Of Everything  in normal Mode geometry.ach.level12a Beat Theory Of Everything in practice Mode geometry.ach.level13b Beat Electroman Adventures in normal Mode geometry.ach.level13a Beat Electroman Adventures in practice Mode geometry.ach.level14b Beat Clubstep in normal Mode geometry.ach.level14a Beat Clubstep in practice Mode geometry.ach.level15b Beat Electrodynamix in normal Mode geometry.ach.level15a Beat Electrodynamix in practice Mode geometry.ach.level16b Beat Hexagon Force in normal Mode geometry.ach.level16a Beat Hexagon Forece in practice Mode geometry.ach.level17b Beat Blast Processing in normal Mode geometry.ach.level17a Beat Blast Processing in practice Mode geometry.ach.level18b Beat Theory Of Everything 2 in normal Mode geometry.ach.level18a Beat Theory Of Everything 2 in practice Mode geometry.ach.level19b Beat Geometrical Dominator in normal Mode geometry.ach.level19a Beat Geometrical Dominator in practice Mode geometry.ach.level20b Beat Deadlocked in normal Mode geometry.ach.level20a Beat Deadlocked in practice Mode geometry.ach.level21b Beat Fingerdash in normal Mode geometry.ach.level21a Beat Fingerdash in practice Mode geometry.ach.steam01 Beat Stereo Madness, Back On Track and Polargeist in normal mode (steam exlusive) geometry.ach.steam02 Beat Clubstep in normal mode (steam exlusive) geometry.ach.demoncoin01 Beat Clubstep in with all coins geometry.ach.demoncoin02 Beat Theory Of Everything 2 in with all coins geometry.ach.demoncoin03 Beat Deadlocked in with all coins geometry.ach.mappacks01 Complete 1 Map Pack geometry.ach.mappacks02 Complete 5 Map Packs geometry.ach.mappacks03 Complete 10 Map Packs geometry.ach.mappacks04 Complete 15 Map Packs geometry.ach.mappacks05 Complete 20 Map Packs geometry.ach.mappacks06 Complete 25 Map Packs geometry.ach.mappacks07 Complete 30 Map Packs geometry.ach.mappacks08 Complete 35 Map Packs geometry.ach.mappacks09 Complete 40 Map Packs geometry.ach.mappacks10 Complete 45 Map Packs geometry.ach.custom01 Complete 1 User Created Level in Normal Mode geometry.ach.custom02 Complete 10 User Created Level in Normal Mode geometry.ach.custom03 Complete 50 User Created Level in Normal Mode geometry.ach.custom04 Complete 100 User Created Level in Normal Mode geometry.ach.custom05 Complete 200 User Created Level in Normal Mode geometry.ach.custom06 Complete 300 User Created Level in Normal Mode geometry.ach.custom07 Complete 500 User Created Level in Normal Mode geometry.ach.custom08 Complete 1,000 User Created Level in Normal Mode geometry.ach.stars01 Collect 100 stars geometry.ach.stars02 Collect 200 stars geometry.ach.stars03 Collect 300 stars geometry.ach.stars04 Collect 400 stars geometry.ach.stars05 Collect 500 stars geometry.ach.stars06 Collect 600 stars geometry.ach.stars07 Collect 700 stars geometry.ach.stars08 Collect 800 stars geometry.ach.stars09 Collect 900 stars geometry.ach.stars10 Collect 1,000 stars geometry.ach.stars11 Collect 1,500 stars geometry.ach.stars12 Collect 2,000 stars geometry.ach.stars13 Collect 2,500 stars geometry.ach.stars14 Collect 3,000 stars geometry.ach.stars15 Collect 3,500 stars geometry.ach.stars16 Collect 4,000 stars geometry.ach.stars17 Collect 4,500 stars geometry.ach.stars18 Collect 5,000 stars geometry.ach.stars19 Collect 5,500 stars geometry.ach.stars20 Collect 6,000 stars geometry.ach.stars21 Collect 6,500 stars geometry.ach.stars22 Collect 7,000 stars geometry.ach.stars23 Collect 7,500 stars geometry.ach.stars24 Collect 8,000 stars geometry.ach.stars25 Collect 9,000 stars geometry.ach.stars26 Collect 10,000 stars geometry.ach.demon01 Beat 1 Demon geometry.ach.demon02 Beat 2 Demons geometry.ach.demon03 Beat 3 Demons geometry.ach.demon04 Beat 4 Demons geometry.ach.demon05 Beat 5 Demons geometry.ach.demon06 Beat 10 Demons geometry.ach.demon07 Beat 15 Demons geometry.ach.demon08 Beat 20 Demons geometry.ach.demon09 Beat 30 Demons geometry.ach.demon10 Beat 40 Demons geometry.ach.demon11 Beat 50 Demons geometry.ach.demon12 Beat 60 Demons geometry.ach.coins01 Collect 5 Secret Coins geometry.ach.coins02 Collect 10 Secret Coins geometry.ach.coins03 Collect 15 Secret Coins geometry.ach.coins04 Collect 20 Secret Coins geometry.ach.coins05 Collect 25 Secret Coins geometry.ach.coins06 Collect 30 Secret Coins geometry.ach.coins07 Collect 35 Secret Coins geometry.ach.coins08 Collect 40 Secret Coins geometry.ach.coins09 Collect 45 Secret Coins geometry.ach.coins10 Collect 50 Secret Coins geometry.ach.coins11 Collect 55 Secret Coins geometry.ach.coins12 Collect 60 Secret Coins geometry.ach.coins13 Collect 65 Secret Coins geometry.ach.coins14 Collect 70 Secret Coins geometry.ach.coins15 Collect 75 Secret Coins geometry.ach.coins16 Collect 80 Secret Coins geometry.ach.coins17 Collect 85 Secret Coins geometry.ach.coins18 Collect 90 Secret Coins geometry.ach.coins19 Collect 95 Secret Coins geometry.ach.coins20 Collect 100 Secret Coins geometry.ach.coins21 Collect 105 Secret Coins geometry.ach.coins22 Collect 110 Secret Coins geometry.ach.coins23 Collect 115 Secret Coins geometry.ach.coins24 Collect 120 Secret Coins geometry.ach.coins25 Collect 130 Secret Coins geometry.ach.usercoins01 Collect 1 user Coin geometry.ach.usercoins02 Collect 10 user Coins geometry.ach.usercoins03 Collect 20 user Coins geometry.ach.usercoins04 Collect 30 user Coins geometry.ach.usercoins05 Collect 40 user Coins geometry.ach.usercoins06 Collect 50 user Coins geometry.ach.usercoins07 Collect 60 user Coins geometry.ach.usercoins08 Collect 70 user Coins geometry.ach.usercoins09 Collect 80 user Coins geometry.ach.usercoins10 Collect 90 user Coins geometry.ach.usercoins11 Collect 100 user Coins geometry.ach.usercoins12 Collect 110 user Coins geometry.ach.usercoins13 Collect 120 user Coins geometry.ach.usercoins14 Collect 130 user Coins geometry.ach.usercoins15 Collect 140 user Coins geometry.ach.usercoins16 Collect 150 user Coins geometry.ach.usercoins17 Collect 160 user Coins geometry.ach.usercoins18 Collect 170 user Coins geometry.ach.usercoins19 Collect 180 user Coins geometry.ach.usercoins20 Collect 190 user Coins geometry.ach.usercoins21 Collect 200 user Coins geometry.ach.usercoins22 Collect 225 user Coins geometry.ach.usercoins23 Collect 250 user Coins geometry.ach.usercoins24 Collect 300 user Coins geometry.ach.usercoins25 Collect 350 user Coins geometry.ach.usercoins26 Collect 425 user Coins geometry.ach.usercoins27 Collect 500 user Coins geometry.ach.usercoins28 Collect 600 user Coins geometry.ach.usercoins29 Collect 700 user Coins geometry.ach.usercoins30 Collect 800 user Coins geometry.ach.usercoins31 Collect 900 user Coins geometry.ach.usercoins32 Collect 1,000 user Coins geometry.ach.diamonds01 Collect 100 Diamonds geometry.ach.diamonds02 Collect 250 Diamonds geometry.ach.diamonds03 Collect 500 Diamonds geometry.ach.diamonds04 Collect 1,000 Diamonds geometry.ach.diamonds05 Collect 1,500 Diamonds geometry.ach.diamonds06 Collect 2,000 Diamonds geometry.ach.diamonds07 Collect 2,500 Diamonds geometry.ach.diamonds08 Collect 3,000 Diamonds geometry.ach.diamonds09 Collect 4,000 Diamonds geometry.ach.diamonds10 Collect 5,000 Diamonds geometry.ach.shardFire01 Collect 5 Fire Shards geometry.ach.shardFire02 Collect 15 Fire Shards geometry.ach.shardFire03 Collect 35 Fire Shards geometry.ach.shardFire04 Collect 65 Fire Shards geometry.ach.shardFire05 Collect 100 Fire Shards geometry.ach.shardIce01 Collect 5 Ice Shards geometry.ach.shardIce02 Collect 15 Ice Shards geometry.ach.shardIce03 Collect 35 Ice Shards geometry.ach.shardIce04 Collect 65 Ice Shards geometry.ach.shardIce05 Collect 100 Ice Shards geometry.ach.shardPoison01 Collect 5 Poison Shards geometry.ach.shardPoison02 Collect 15 Poison Shards geometry.ach.shardPoison03 Collect 35 Poison Shards geometry.ach.shardPoison04 Collect 65 Poison Shards geometry.ach.shardPoison05 Collect 100 Poison Shards geometry.ach.shardShadow01 Collect 5 Shadow Shards geometry.ach.shardShadow02 Collect 15 Shadow Shards geometry.ach.shardShadow03 Collect 35 Shadow Shards geometry.ach.shardShadow04 Collect 65 Shadow Shards geometry.ach.shardShadow05 Collect 100 Shadow Shards geometry.ach.shardLava01 Collect 5 Lava Shards geometry.ach.shardLava02 Collect 15 Lava Shards geometry.ach.shardLava03 Collect 35 Lava Shards geometry.ach.shardLava04 Collect 65 Lava Shards geometry.ach.shardLava05 Collect 100 Lava Shards geometry.ach.shardBonus01 Collect 5 of each Shard geometry.ach.shardBonus02 Collect 15 of each Shard geometry.ach.shardBonusa03 Collect 35 of each Shard geometry.ach.shardBonus04 Collect 65 of each Shard geometry.ach.shardBonus05 Collect 100 of each Shard geometry.ach.followCreator follow 1 Creator geometry.ach.followCreator2 follow 10 Creators geometry.ach.friends01 Befriend 1 user geometry.ach.friends02 Befriend 10 users geometry.ach.youtube subscribe to RobTop on YouTube geometry.ach.youtube Follow  RobTop on Twitter geometry.ach.youtube Like RobTop on Facebook geometry.ach.attempt01 Do 100 Attempts geometry.ach.attempt02 Do 500 Attempts geometry.ach.attempt03 Do 2,000 Attempts geometry.ach.attempt04 Do 10,000 Attempts geometry.ach.attempt05 Do 20,000 Attempts geometry.ach.jump01 Jump 1,000 Times geometry.ach.jump02 Jump 10,000 Times geometry.ach.jump03 Jump 20,000 Times geometry.ach.jump04 Jump 50,000 Times geometry.ach.jump05 Jump 100,000 Times geometry.ach.submit Submit an online level geometry.ach.rate Click the supporter icon when it's locked geometry.ach.rateDiff Rate the stars of an online level geometry.ach.rateDiff02 Rate the stars of 100 online levels geometry.ach.rateDiff02b Rate the stars of 500 online levels geometry.ach.rateDiff03 Rate the stars of 1,000 online levels geometry.ach.rateDiff04 Rate the stars of 2,000 online levels geometry.ach.like Like or dislike an online level geometry.ach.like02 Like or dislike 100 online levels geometry.ach.like02b Like or dislike 500 online levels geometry.ach.like03 Like or dislike 1,000 online levels geometry.ach.like04 Like or dislike 2,000 online levels geometry.ach.moreGames Click the \"More Games\" button geometry.ach.special01 Die at over 95% on a main level geometry.ach.creator01 Get 100 likes on your level geometry.ach.creator02 Get a star rate on your level geometry.ach.creator03 Get 50 likes on your level geometry.ach.secret01 Destroy an icon on the main menu geometry.ach.secret02 Destroy 50 icons on the main menu geometry.ach.secret02b Destroy 100 icons on the main menu geometry.ach.secret03 Destroy 200 icons on the main menu geometry.ach.secret03b Destroy 500 icons on the main menu geometry.ach.secret04 Found the hidden gold coin by scrolling through the level page 3 times geometry.ach.secret05 Type 'lenny' into the 2.0 Vault geometry.ach.secret06 Type 'sparky' into the 2.0 Vault geometry.ach.secret07 Type 'spooky' into the 2.0 Vault geometry.ach.secret08 Type 'blockbite' into the 2.0 Vault geometry.ach.secret09 Type 'robotop' into the 2.0 Vault geometry.ach.secret10 Type 'ahead' into the 2.0 Vault geometry.ach.secret11 Destroy the 55th cube on the main menu geometry.ach.secret12 Destroy the 50th cube on the main menu geometry.ach.secret13 Type 'mule' into the 2.0 Vault geometry.ach.secret14 Type 'neverending' into the 2.0 Vault geometry.ach.secret15 Type 'gandalfpotter' into the 2.0 Vault geometry.ach.secret16 Consecutively type '8', '16', '30', '32', '46' and '84' into the 2.0 Vault geometry.ach.secret17 Type your username into the 2.0 Vault geometry.ach.v2.secret01 Type 'brainpower' into the Vault of Secrets geometry.ach.v2.secret02 Type 'cod3breaker' and the solution to the puzzle into the Vault of Secrets geometry.ach.v2.secret03 Solve the 'glubfub' puzzle geometry.ach.v2.secret04 Type 'octocube' into the Vault of Secrets geometry.ach.v2.secret05 Type your star count into the Vault of Secrets geometry.ach.v2.secret06 Type 'seven' into the Vault of Secrets geometry.ach.v2.secret07 Type 'gimmiethecolor' into the Vault of Secrets geometry.ach.v2.secret08 Type 'thechickenisonfire' into the Vault of Secrets geometry.ach.v3.secret01 Type 'darkness' into the Chamber of Time geometry.ach.v3.secret02 Type 'silence' into the Chamber of Time geometry.ach.v3.secret03 Type 'river' into the Chamber of Time geometry.ach.v3.secret04 Type 'hunger' into the Chamber of Time geometry.ach.v3.secret05 Type 'volcano' into the Chamber of Time"},{"location":"client/gamesave/achievement/#gd-meltdown-achievements","title":"GD Meltdown Achievements","text":"Internal name How it's acquired geometry.ach.mdlevel01b Beat The Seven Seas in normal mode geometry.ach.mdlevel02b Beat Viking Arena in normal mode geometry.ach.mdlevel03b Beat Airborne Robots in normal mode geometry.ach.mdcoin01 Collect all 3 coins on The Seven Seas geometry.ach.mdcoin02 Collect all 3 coins on Viking Arena geometry.ach.mdcoin03 Collect all 3 coins on Airborne Robots geometry.ach.mdrate Click the icon with ID 71 when it's locked (positioned as 11th)"},{"location":"client/gamesave/achievement/#gd-world-achievements","title":"GD World Achievements","text":"Internal name How it's acquired geometry.ach.world.level001b Beat Payload in normal mode geometry.ach.world.level002b Beat Beast Mode in normal mode geometry.ach.world.level003b Beat Machina in normal mode geometry.ach.world.level004b Beat Years in normal mode geometry.ach.world.level005b Beat Frontlines in normal mode geometry.ach.world.level006b Beat Space Pirates in normal mode geometry.ach.world.level007b Beat Striker in normal mode geometry.ach.world.level008b Beat Embers in normal mode geometry.ach.world.level009b Beat Round 1 in normal mode geometry.ach.world.level010b Beat Monster Dance Off in normal mode"},{"location":"client/gamesave/achievement/#gd-subzero-achievements","title":"GD Subzero Achievements","text":"Internal name How it's acquired geometry.ach.subzero.level001 Beat Press Start in normal mode geometry.ach.subzero.level002 Beat Nock Em in normal mode geometry.ach.subzero.level003 Beat Power Trip in normal mode geometry.ach.subzero.coins001 Collect all 3 coins on Press Start geometry.ach.subzero.coins002 Collect all 3 coins on Nock Em geometry.ach.subzero.coins003 Collect all 3 coins on Power Trip"},{"location":"client/gamesave/gv/","title":"Game Variables","text":"<p>Game Variables (gvs) are found inside of the ValueKeeper Dictionary and each gv value corresponds with a specific ingame setting</p>"},{"location":"client/gamesave/gv/#gv-structure","title":"GV Structure","text":"Key Value gv_0001 Follow PLayer (editor) gv_0002 play Music (editor) gv_0003 Swipe (editor) gv_0004 Free Move (editor) gv_0005 Delete filter (editor) gv_0006 Delete custom objectID (editor) gv_0007 Toggle rotate (editor) gv_0008 Toggle snap (editor) gv_0009 Ignore Damage (editor) gv_0010 flip2PlayerControls gv_0011 alwaysLimitControls gv_0012 showedCommentingRules gv_0013 increaseMaxUndoRedo gv_0014 disableExplosionShake gv_0015 flipPauseButton gv_0016 showedSongTOS gv_0018 noSongLimit gv_0019 songsInMemory gv_0022 higherAudioQuality gv_0023 smoothFix gv_0024 showCursor In-Game gv_0025 Windowed Mode gv_0026 autoRetry gv_0027 autoCheckpoints gv_0028 disableThumbstick gv_0029 showedOptionsText gv_0030 vsyncEnabled gv_0031 callGLFinish -&gt; seems to be unused gv_0032 forceTimerEnabled -&gt; seems to be unused gv_0033 ChangeSongPath gv_0034 GameCenterEnabled gv_0036 PreviewMode (editor) gv_0037 showGround (editor) gv_0038 showGrid (editor) gv_0039 gridOnTop (editor) gv_0040 showPercentage gv_0041 showObjectInfo (editor) gv_0042 increaseMaxLevels gv_0043 effectLinesEnabled (editor) gv_0044 drawTriggerBoxes (editor) gv_0045 debugDraw (editor) gv_0046 hideUIOnTest (editor) gv_0047 showedProfileText gv_0048 viewedOwnProfile gv_0049 buttonsPerRow (editor) gv_0050 buttonRows (editor) gv_0051 showedNGMessage (editor) gv_0052 fastPracticeReset gv_0053 Free Games Popup gv_0055 checkIfServerOnline.php gv_0056 disableObjectAlert gv_0057 editorHoldToSwipe gv_0058 durationLines (editor) gv_0059 swipeCycleMode gv_0060 defaultMiniIcon gv_0061 switchSpiderTeleportColor gv_0062 switchDashFireColor gv_0063 showedUnverifiedCoinsMessage gv_0064 selectFilter (editor) gv_0065 enableMoveOptimization gv_0066 highCapacityMode gv_0067 highStartPosAccuracy gv_0068 quickCheckpointMode gv_0069 commentMode gv_0070 showedUnlistedLevelMessage gv_0072 disableGravityEffect gv_0073 newCompletedFilter gv_0074 showRestartButton gv_0075 disableComments gv_0076 disableAccountComments gv_0077 featuredLevelsOnly gv_0078 hideBackground (editor) gv_0079 hideGridOnPlay (editor) gv_0081 disableShakeEffects gv_0082 disableHighObjectAlert gv_0083 disableSongAlert gv_0084 manualOrder gv_0088 smallCommentsMode gv_0089 extendedInfoMode gv_0090 autoloadComments gv_0091 myLevels folder number gv_0092 onlineLevels folder number gv_0093 increaseLocalLevelsPerPage gv_0094 moreCommentsMode gv_0095 flippyUselessMode (Just Dont) gv_0096 switchWaveTrailColor gv_0097 enableLinkControls (editor) gv_0098 levelLeaderboardType gv_0099 showLeaderboardPercent gv_0100 practiceDeathEffect gv_0101 forceSmoothFix gv_0102 smoothFixInEditor"},{"location":"client/gamesave/gv/#2019-leak-gvs","title":"2019 Leak GV's","text":"Key Value gv_0103 Layer Locking gv_0104 Record Order gv_0105 StartPos Playback gv_0106 Show Meltdown Promo gv_0108 Auto Low Detail gv_0109 Level Info Label gv_0110 Fast Editor Preview gv_0113 Flip Platformer Controls gv_0115 Show FPS gv_0116 Use Custom FPS gv_0117 Preview Particle gv_0118 Preview Animation gv_0119 Dont Save Level Data"},{"location":"client/gamesave/gv/#unlocked-game-variables","title":"Unlocked Game Variables","text":"<p>Unlocked Game Variables (ugv) are used to check if ingame events have been completed</p>"},{"location":"client/gamesave/gv/#ugv-structure","title":"UGV Structure","text":"Key Value ugv_1 Unlocked the challenge ugv_2 Gubflub hint ugv_3 Gubflub hint 2 ugv_4 The Challenge completed ugv_5 Treasure Room unlocked ugv_6 Chamber of Time unlocked ugv_7 Chamber of Time Discovered ugv_8 shown Master Emblem ugv_9 GateKeeper Dialog ugv_10 Scratch Dialog ugv_11 Secret Shop unlocked ugv_12 Spoken to Demon Guardian ugv_13 Demon Freed ugv_14 Has Demon Key 1 ugv_15 Has Demon Key 2 ugv_16 Has Demon Key 3 ugv_17 Shop Keeper first dialog (500 orbs) ugv_18 online levels unlocked in GDW ugv_19 Demon Discovered in Demon Room ugv_20 Community shop unlocked ugv_21 PotBor dialog ugv_22 YouTube Chest unlocked ugv_23 FaceBook Chest unlocked ugv_24 Twitter Chest unlocked"},{"location":"client/gamesave/gv/#2019-leak-ugvs","title":"2019 Leak UGV's","text":"Key Value ugv_25 FireBird GateKeeper ugv_26 Twitch Chest Unlocked ugv_27 Discord Chest Unlocked"},{"location":"client/gamesave/gv/#undiscoveredunknown-gvs","title":"Undiscovered/unknown GV's","text":"GV_ID Existance Proven notes 0017 False 0020 False 0021 False 0035 False 0054 False 0071 False 0080 False 0085 False 0086 False 0087 False 0112 True Used in <code>EditorUI</code> (2019 Leak) 0114 True Used in <code>PlayerObject</code> (2019 Leak) 0120 True Shown in RobTop's 2020 Twitch Streams"},{"location":"client/gamesave/kCEK/","title":"kCEK Encoder Keys","text":"Key Name/Value description 4 GJGameLevel Contains Keys for levels you played in the past 6 SongInfoObject Contains Keys for songs downloaded 7 GJChallengeItem Contains Keys that the game uses to show quests when offline 8 GJRewardItem object that holds <code>GJRewardObject</code> 9 GJRewardObject contains data for Rewards"},{"location":"client/gamesave/kCEK/#kcek-8-and-9-structure","title":"kCEK 8 and 9 Structure","text":"<p><code>GJRewardItem</code> is a dictionary which contains <code>GJRewardObject</code> </p> key encoder Key use/description 1 8 Depends on the GS_Value it is inside of 2 8 Depends on the GS_Value it is inside of 3 8 GJRewardObject 1 9 item type 2 9 customItemID 3 9 reward amount 4 9 itemUnlockValue -&gt; presumedly contains data that unlocks an item in the garage?"},{"location":"client/gamesave/kCEK/#itemids","title":"ItemIDs","text":"key value 1 Fire Shard 2 Ice Shard 3 Poison Shard 4 Shadow Shard 5 Lava Shard 6 Demon Key 7 Orbs 8 Diamonds 9 Custom Object (shares the same ID for Demon guardian key, icons and colours)"},{"location":"client/gamesave/kCEK/#gjrewarditem-gs-keys","title":"GJRewardItem GS Keys","text":""},{"location":"client/gamesave/kCEK/#gs_11","title":"GS_11","text":"key value 1 ChestID 2 ChestType"},{"location":"client/gamesave/kCEK/#chest-types","title":"Chest Types","text":"ID type 1 4 hour chest 2 24 hour chest"},{"location":"client/gamesave/quests/","title":"Client Quest Resources","text":""},{"location":"client/gamesave/quests/#quests","title":"Quests","text":"<p>After you click on the quest button when playing Geometry Dash, information about the quest is saved into your CCGameManager files so you can complete the quests offline.</p>"},{"location":"client/gamesave/quests/#quest-key-structure","title":"Quest Key structure","text":"Key Name/Value type Description 1 Quest Type quest This is used to diffrenciate the type of quest needs to be completed: 1 = Orbs, 2 = Coins, 3 = Stars 2 Progress integer How many of the required stats have been gained since you started the quest 3 Goal integer How many of the required stats you need to gain to complete the quest 4 Reward integer How many diamonds earned upon completion of the quest 5 time left integer How much time is left until new quests appear 6 isActive Bool Set to True if the challenge is active 7 Quest Name String The quest name 8 Position Quest Position where abouts on screen the quest should be: 1 = top, 2 = middle, 3 = bottom"},{"location":"client/gamesave/valueKeeper/","title":"ValueKeeper","text":"<p>Value Keeper is a giant Dictionary found in CCGameManager.dat that contains the states of unlockables and game values</p>"},{"location":"client/gamesave/valueKeeper/#valuekeeper-stucture","title":"ValueKeeper Stucture","text":"prefix Description gv_{ID} enabled Game Variables i_{ID} The playerCubes you have unlocked ship_{ID} The PlayerShips you have unlocked ball_{ID} The PlayerBalls you have unlocked bird_{ID} The PlayerBirdss you have unlocked dart_{ID} The PlayerDarts you have unlocked robot_{ID} The PlayerRobots you have unlocked special_{ID} The PlayerStreaks you have unlocked c0_{ID} The Colour1's you have unlocked c1_{ID} The Colour2's you have unlocked death_{ID} Unlocked Death Effects"},{"location":"client/level-components/capacity-string/","title":"Capacity String","text":"<p>The Capacity String (commonly known as the <code>extra string</code>) is a long string split up into 54 components each having an Integer assigned to them. The role of the Capacity String is to save the cost of memory re-allocation when rendering levels</p>"},{"location":"client/level-components/capacity-string/#example","title":"Example","text":"<p>Below is the Capacity String for the level <code>Bloodlust</code> by Knobbelboy</p> <pre><code>0_2044_1248_57_0_70_1988_963_0_0_4526_6982_465_0_623_995_0_0_0_0_0_0_53_0_0_0_0_0_0_0_0_0_35_105_38_0_0_0_0_0_0_0_0_0_294_1173_38_0_0_0_0_0_0_0_0\n</code></pre>"},{"location":"client/level-components/capacity-string/#structure","title":"Structure","text":"<p>Each component of the Capacity String are tied to their own <code>CCSpriteBatchNode</code> field based on the properties of certain objects.</p> <p>There are <code>5</code> different types of batchNodes. <code>4</code> of which the Capacity string uses</p> <p>Note: BatchID 4 isn't used in the Capacity String</p> BatchID Type Description 1 BatchNodePlayer 2 BatchNodeText All text GameObjects 3 EffectBatchNode All animated GameObjects 4 DefaultBatchNode All GameObjects that don't fit into other BatchNodes, usually objects that only render in the editor exclusively 5 BatchNode Most GameObjects <p>Each of these BatchNodeTypes are then divided into sub-categories based on certain properties the object has</p> <p>Note: Index refers to order that the BatchNode can be found on the capacity string The names for each BatchNode were provided by RobTop himself</p> Index BatchNode Properties zOrder 0 BatchNodeAddTop2 Blending, zLayer T2 16 1 BatchNode zLayer T1 10 2 BatchNodeAdd Blending, zLayer T1 9 3 BatchNodePlayer unknown -&gt; something about the player 3 4 BatchNodeAddPlayer unknown -&gt; something about the player 2 5 BatchNodeAddMid Blending, zLayer B1 (zLayer = 4) 1 6 BatchNodeBottom zLayer B1 -1 7 BatchNodeAddBottom Blending, zLayer B1 -2 8 EffectBatchNode Animated, zLayer B1 -6 9 EffectBatchNodeAdd Blending, Animated, zLayer B1 -7 10 BatchNodeBottom2 zLayer B2 -8 11 BatchNodeAddBottom2 Blending, zLayer B2 -9 12 BatchNodeAddGlow Blending, Glow, zLayer T1 9 13 BatchNodeAddBottomGlow Blending, Glow, zLayer B1 -2 14 BatchNodeAddBottom2Glow Blending, Glow, zLayer B2 -9 15 BatchNodeBottomGlow2 Glow, zLayer B1 -22 16 BatchNodeAddBottom4 Blending, zLayer B4 -23 17 BatchNodeAddBottom4Glow Blending, Glow, zLayer B4 -23 18 BatchNodeBottom3 zLayer B3 -15 19 BatchNodeAddBottom3 Blending, zLayer B3 -16 20 BatchNodeAddBottom3Glow Blending, Glow, zLayer B3 -16 21 BatchNodeTop2 zLayer T2 17 22 BatchNodeAddGlowTop2 Blending, Glow, zLayer T2 16 23 BatchNodeTop3 zLayer T3 25 24 BatchNodeAddTop3 Blending, zLayer T3 24 25 BatchNodeAddGlowTop3 Blending, Glow zLayer T3 24 26 BatchNodeAddTop4 Blending, zLayer T4 26 27 EffectBatchNodeTop3 Animated, zLayer T3 19 28 EffectBatchNodeAddTop3 Animated, Blending, zLayer T3 18 29 EffectBatchNodeTop2 Animated, zLayer T2 12 30 EffectBatchNodeAddTop2 Animated, Blending, zLayer T2 11 31 EffectBatchNodeTop1 Animated, zLayer T1 5 32 EffectBatchNodeAddTop1 Animated, Blending, zLayer T1 4 33 EffectBatchNodeBot2 Animated, zLayer B2 -13 34 EffectBatchNodeAddBot2 Animated, Blending, zLayer B2 -14 35 EffectBatchNodeBot3 Animated, zLayer B3 -20 36 EffectBatchNodeAddBot3 Animated, Blending, zLayer B3 -21 37 EffectBatchNodeBot4 Animated, zLayer B4 -27 38 EffectBatchNodeAddBot4 Animated, Blending, zLayer B4 -28 39 BatchNodeTextTop3 Text, zLayer T3 21 40 BatchNodeTextAddTop3 Text, Blending, zLayer T3 22 41 BatchNodeTextTop2 Text, zLayer T2 13 42 BatchNodeTextAddTop2 Text, Blending, zLayer T2 14 43 BatchNodeTextTop1 Text, zLayer T1 6 44 BatchNodeTextAddTop1 Text, Blending, zLayer T1 7 45 BatchNodeText Text, zLayer B1 -5 46 BatchNodeAddText Text, Blending, zLayer B1 -4 47 BatchNodeTextBot2 Text, zLayer B2 -12 48 BatchNodeAddTextBot2 Text, Blending, zLayer B2 -11 49 BatchNodeTextBot3 Text, zLayer B3 -19 50 BatchNodeAddTextBot3 Text, Blending, zLayer B3 -18 51 BatchNodeTextBot4 Text, zLayer B4 -26 52 BatchNodeAddTextBot5 Text, Blending, zLayer B4 -25 53 EffectBatchNodeAddTop4 Animated, Blending, zLayer T4 20"},{"location":"client/level-components/capacity-string/#legacy-string","title":"Legacy String","text":"<p>There are other types of Capacity Strings from older versions of the game. The total number of Nodes is used to identify them</p> Update Node count 1.9 4 2.0 16 <p>The capacity string in 2.0 is quite easy to understand as it only contains the first 16 batch nodes in 2.1's capacity string. 1.9 is quite different with certain indexes containing multiple batch nodes.</p> <p>Below is a table for 1.9's Capacity String. Refer to the Structure section for the properties of the batchNodes</p> Index BatchNode(s) 0 BatchNode 1 BatchNodeAdd BatchNodeAddGlow 2 BatchNodeBottom BatchNodeBottom2 3 BatchNodeAddBottom BatchNodeAddBottom2 BatchNodeAddBottomGlow BatchNodeAddBottom2Glow"},{"location":"client/level-components/capacity-string/#high-capacity-mode","title":"High Capacity Mode","text":"<p>In the game options, there is a option the player can toggle called <code>High Capacity Mode</code>. when enabled, the Capacity for each BatchNode is set to a hardcoded value. There are 3 capacity sizes</p> size Batch Type 999 BatchNode 200 EffectBatchNode 100 BatchNodeText <p>If enabled, the Capacity string is disregarded and these values are used instead.</p>"},{"location":"client/level-components/capacity-string/#capacity-string-generation","title":"Capacity String Generation","text":"<p>The Capacity String is only generated during verification of the level. When playing the level, the game stores the the highest number of GameObjects that the Batch is responsible for inside its textureAtlas as the capacity. After the level is verified, the following function is called</p> <p>```cpp // This is only a re-creation of the function used and is not an accurate decompilation // we have refactored the code to make it easier to understand</p> <p>int capacity = BatchNode-&gt;getAtlasCapacity();</p> <p>if(capacity &lt;= 29)     return 0;</p> <p>// Increasing the capacity by a small amount to ensure there is enough memory int newCapacity = capacity * 1.1f; </p> <p>// returning the new capacity with a  limit of 9999 return std::min(newCapacty, 9999);  ```</p> <p>After the capacity is calculated, it adds the value to the capacity string. Once the entire string is finished, it is then stored in <code>GJGameLevel-&gt;CapacityString_</code> where it will then be sent to the servers during the upload</p>"},{"location":"client/level-components/color-string/","title":"Client Color String Resource","text":""},{"location":"client/level-components/color-string/#color-string","title":"Color String","text":"<p>The color string contains the information for the initial state of the colors being used in the level. Its raw representation is formatted as follows:</p> <p><code>{color}|{color}|...</code>, where <code>color</code> is formatted as:</p> <p><code>{property_key}_{property_value}_{property_key}_{property_value}_...</code>.</p>"},{"location":"client/level-components/color-string/#color-properties","title":"Color Properties","text":"<p>The color entries have the following properties:</p> Key Name Type Description 1 FromColourRed Integer the Red component of the color 2 FromColourGreen Integer the Green component of the color 3 FromColourBlue Integer the Blue component of the color 4 PlayerColor Player Color the Player Color that the color is copying 5 Blending Bool the Blending property of the color 6 ColourChannelIndex Integer the Color Channel ID of the color 7 FromOpacity Float the Opacity property of the color 8 ToggleOpacity Bool toggled if opacity and be changed 9 InheritedColourChannelIndex Integer the Color Channel ID of the copied color 10 HSV HSV the HSV of the copied color 11 ToColourRed Integer the Red component that the colour changes to 12 ToColourGreen Integer the Green component that the colour changes to 13 ToColourBlue Integer the blue component that the colour changes to 14 DeltaTime Float delta used in colour change 15 ToOpacity Float opacity that fromOpacity should change too 16 Duration Float duration for From-&gt;To 17 CopyOpacity Bool the Copy Opacity property of the color <p>Undiscovered properties</p> Key Type Proven Existence Common Value 18 bool(?) yes 0"},{"location":"client/level-components/guideline-string/","title":"Client Guideline String Resource","text":""},{"location":"client/level-components/guideline-string/#guideline-string","title":"Guideline String","text":"<p>The guideline string is the linearized string format of the guidelines of a level. It is contained within the inner level string. It is formatted as follows:</p> <p><code>{guideline}~{guideline}~{guideline}~...</code>, where <code>guideline</code> is formatted as:</p> <p><code>{timestamp}~{color_value}</code>, with <code>timestamp</code> being in seconds and both values being floats.</p> <p>E.g.:</p> <p><code>0.5~0.8~0.7~0.9~1~1</code> represents the following guidelines:</p> <ul> <li>Guideline (<code>0.5~0.8</code>)</li> <li>Timestamp: 0.5</li> <li>Color value: 0.8 (orange)</li> <li>Guideline (<code>0.7~0.9</code>)</li> <li>Timestamp: 0.7</li> <li>Color value: 0.9 (yellow)</li> <li>Guideline (<code>1~1</code>)</li> <li>Timestamp: 1</li> <li>Color value: 1 (green)</li> </ul>"},{"location":"client/level-components/guideline-string/#color-values","title":"Color Values","text":"<p>The valid supported color values are the following:</p> Value Color 0.8 orange 0.9 yellow 1.0 green <p>Unexpected Behavior Information</p> <ul> <li>A color value of 0 will result in an orange guideline.</li> <li>Color values less than 0.8 will result in a transparent guideline.</li> <li>Color values above 0.8 that do not match the yellow or the green guideline color values will result in an orange guideline.</li> </ul>"},{"location":"client/level-components/guideline-string/#trivia","title":"Trivia","text":"<ul> <li>A number of guidelines with color value 0.7 were found in Blast Processing, which are all transparent.</li> </ul>"},{"location":"client/level-components/inner-level-string/","title":"Client Inner Level String Resource","text":""},{"location":"client/level-components/inner-level-string/#inner-level-string","title":"Inner Level String","text":"<p>The inner level string consists of information about the starting state of the level and the objects it contains. It is encoded in base64. Its raw representation is formatted as follows:</p> <p><code>{level_start};{object_string}</code>, where</p> <ul> <li><code>level_start</code> is the level start object,</li> <li><code>object_string</code> is the object string.</li> </ul> <p>Theoretically, the inner level string in its entirety is the object string, however the level start object is treated specially, unlike every other object, and doesn't even have an ID.</p>"},{"location":"client/level-components/inner-level-string/#level-start-object","title":"Level Start Object","text":"<p>The level start object is still an object and formated exactly like a normal level object, but has the following properties instead:</p> Key Name Type Description kA1 AudioTrack Integer The audio track which the level uses kA2 Gamemode Gamemode the gamemode the player starts with kA3 Mini Mode bool determines whether the player starts off as mini Mode kA4 Speed Speed the speed of the level at the starts kA6 Background Texture ID integer the ID of the background texture that is being used in the level(enumerated in the same order as appears) kA7 Ground Texture ID integer the ID of the ground texture that is being used in the level(enumerated in the same order as appears) kA8 Dual Mode bool determines whether the player starts off in dual Mode kA9 Level/Start Pos Object bool determines whether this object represents a Level Start or a Start Pos object (true for the latter) kA10 2-Player Mode bool determines whether 2-Player Mode is toggled on for this level kA11 Flip Gravity bool determines whether the player starts off in flipped Gravity kA13 Song Offset float the song offset in seconds from which the level begins kA14 Guidelines Guideline String the editor song guidelines of the level kA15 Fade In bool determines whether the song will fade in as soon as the level starts kA16 Fade Out bool determines whether the song will fade in as soon as the level ends kA17 Ground Line integer the ID of the ground line that is being used in the level kA18 Font integer the ID of the font that is being used in the level kA22 Platformer Mode Bool If platformer Mode is toggled on or off (currently only available in the December 2019 2.2 leaks) kS38 Colors Color String the color channels that are being used in this level kS39 Color Page integer the color page which was last displayed in the color channel display window <p>Pre-2.0 Keys</p> <p>The following keys were valid prior to 2.0 and are deprecated, since they are included in the new <code>kS38</code> key. They all represented a color channel that is now indexed through the respective color channel ID.</p> Key Name Color Channel ID kS29 BG Color 1000 kS30 Ground Color 1001 kS31 Line Color 1002 kS32 Object Color 1004 kS33 Color 1 1 kS34 Color 2 2 kS35 Color 3 3 kS36 Color 4 4 kS37 3DL Color 1003 <p>Pre-1.9 Keys</p> <p>The following keys were valid prior to 1.9 and were deprecated as of 1.9, since they were included in the keys <code>kS29</code>-<code>kS33</code>. Each color, instead of using one key, used 3 keys to represent Red, Green, and Blue values, respectively. In 1.7 and 1.8, the game used a fourth key to determine if a color channel used a player color, and which player color it would use.</p> Key(s) Name Key in 1.9 kS1-kS3 BG Color kS29 kS4-kS6 Ground Color kS30 kS7-kS9 Line Color kS31 kS10-kS12 Object Color kS32 kS13-kS15 Obj-2 Color kS33 kS16 BG Player Color kS29 kS17 Ground Player Color kS30 kS18 Line Player Color kS31 kS19 Object Player Color kS32 kS20 Obj-2 Player Color kS33 <p>Keys <code>kS16</code>-<code>kS20</code> used to determine the player color that was being used and their values were interpreted according to the following table:</p> Value Color 0 Neither 1 Player Color 1 2 Player Color 2"},{"location":"client/level-components/inner-level-string/#start-pos-object","title":"Start Pos Object","text":"<p>The Start Pos object has the same special properties the level start object has, with a few not working. <code>kA9</code> must be set to <code>1</code> in the case that the object is indeed a Start Pos.</p> <p>Specifically, the only functional properties in a Start Pos object are the ones involving gameplay state, thus excluding visual-related ones (BG/ground textures, font, colors, etc.)</p> <p>Confirmed properties that do not work in the Start Pos:</p> Key kA6 kA7 kA10 kA13 kA14 kA15 kA16 kA18 kS*"},{"location":"client/level-components/level-colors/","title":"Level Colors","text":"<p>This document goes in depth on how colors, copy colors and player color work as base colors or in color/pulse triggers.</p>"},{"location":"client/level-components/level-colors/#color-classes","title":"Color classes","text":"<p>There are 3 color classes (not to be confused with the GD's classes). Every aspect in GD levels that use colors only take one of the classes. All of the properties that do not belong to the color class being used is ignored.</p>"},{"location":"client/level-components/level-colors/#basecolor","title":"BaseColor","text":"<p>This class contains a static color along with opacity and blending.</p> <p>These are the properties that are important for a BaseColor:</p> Name Type Description Red integer The red component of the BaseColor. Goes from <code>0</code> to <code>255</code> Green integer The green component of the BaseColor. Goes from <code>0</code> to <code>255</code> Blue integer The blue component of the BaseColor. Goes from <code>0</code> to <code>255</code> Opacity float The alpha component of the BaseColor. Goes from <code>0</code> to <code>1</code> Blending bool The blending property of the BaseColor <p>Note: Blending causes the color to add its color properties by basically using the OpenGL blend mode <code>glBlendFunc(GL_SRC_ALPHA, GL_ONE)</code></p>"},{"location":"client/level-components/level-colors/#playercolor","title":"PlayerColor","text":"<p>This class contains a static color refering to one of the player's icon color along with opacity and blending.</p> <p>These are the properties that are important for a PlayerColor:</p> Name Type Description Player Color integer This determines which of the player's color is getting used. The actual values are not documented here yet. Opacity float The alpha component of the PlayerColor. Goes from <code>0</code> to <code>1</code> Blending bool The blending property of the PlayerColor"},{"location":"client/level-components/level-colors/#copycolor","title":"CopyColor","text":"<p>This class contains a dynamic color copied from another color channel. This color changes according to the current color of the channel that is being copied.</p> Name Type Description Copy Channel ID integer The color channel ID that the CopyColor is copying the color from Copy Opacity bool This determines whenever CopyColor should also copy the opacity belonging to the color channel in <code>Copy Color ID</code> Opacity float The alpha component of the Copy Color. If <code>Copy Opacity</code> is true. This property is ignored. Blending bool The blending property of the CopyColor since it cannot be copied Copy HSV HSV The HSV property that changes the color's tint depending on the value"},{"location":"client/level-components/level-colors/#determining-which-class-is-used","title":"Determining which class is used","text":"<p>Here is a simple JavaScript function that determines what color class the color object has:</p> <pre><code>function getColorClass(color) {\nif (color.copy_channel_id != 0)\nreturn COPY_COLOR;\n\nif (color.player_color != PLAYER_COLOR_NONE)\nreturn PLAYER_COLOR;\n\nreturn BASE_COLOR;\n}\n</code></pre>"},{"location":"client/level-components/level-colors/#color-channel-ids","title":"Color Channel ID's","text":"<p>Here are all of the different color id's:</p> Interval Name Description <code>1 - 999</code> Custom colors These are the colors that are avalible for the creator to use <code>1000</code> BG This is the color of the background <code>1001</code> G1 This is the primary color of the ground <code>1002</code> LINE This is the color of the ground line <code>1003</code> 3DL This is the color of the 3D line objects <code>1004</code> OBJ This is the OBJ color <code>1005</code> P1 This is the static color channel refering to the primary color of the player's icon <code>1006</code> P2 This is the static color channel refering to the secondary color of the player's icon <code>1007</code> LBG This is the static color channel that is a lighter version of <code>BG</code> <code>1009</code> G2 This is the secondary color of the ground <code>1010</code> BLACK This is the static color channel which is always <code>r: 0, g: 0, b: 0</code>. Used in saws that are black by default"},{"location":"client/level-components/level-colors/#undiscovered-color-channel-ids","title":"Undiscovered color channel IDs","text":"<p><code>WHITE</code>: Static color that is always <code>r: 255, g: 255, b: 255</code> <code>LIGHTER</code>: A lighter version of the primary color in objects. Used in the white small blocks found in <code>build tab 2 on page 6</code>.</p>"},{"location":"client/level-components/level-colors/#19-color-channel-ids","title":"1.9 color channel ID's","text":"<p>GD's 1.9 version used a different ID scheme to identify color channels. In 2.0+, these IDs are still present, but only used in the legacy <code>1.9 Color Channel ID</code> property of 1.9 objects. They are as follows: | 1.9 Channel ID | Name | Corresponding 2.0+ ID | |:----|:---------|:-----------------------------| | <code>1</code> | P1    | <code>1005</code> | <code>2</code> | P2    | <code>1006</code> | <code>3</code> | COL 1 | <code>1</code> | <code>4</code> | COL 2 | <code>2</code> | <code>5</code> | LBG   | <code>1007</code> | <code>6</code> | COL 3 | <code>3</code> | <code>7</code> | COL 4 | <code>4</code> | <code>8</code> | 3DL   | <code>1003</code></p>"},{"location":"client/level-components/level-colors/#light-background-lbg-calculation","title":"Light Background (LBG) calculation","text":"<p>The LBG takes the HSV of background. Subtracts <code>20</code> from its saturation, then interpolates from <code>P1</code> to the last HSV by a factor of the last HSV's value devided by <code>100</code>.</p> <p>Here is a JavaScript example: <pre><code>function lightBG(bg, p1) {\nlet hsv = RGBtoHSV(bg);\nhsv.s -= 20;\n\nreturn blendColor( p1, HSVtoRGB(hsv), hsv.v / 100 );\n}\n</code></pre></p>"},{"location":"client/level-components/level-object/","title":"Client Level Object Resource","text":""},{"location":"client/level-components/level-object/#level-object","title":"Level Object","text":"<p>A level object is an object within a Geometry Dash level, containing data about its behavior.</p>"},{"location":"client/level-components/level-object/#object-string","title":"Object String","text":"<p>The object string is contained within the inner level string. It is formatted as follows:</p> <p><code>{object};{object};{object};...</code>, where <code>object</code> is formatted as:</p> <p><code>{propertyKey},{propertyValue},{propertyKey},{propertyValue},...</code>.</p> <p>E.g.:</p> <p><code>1,1,2,15,3,15,21,3,24,7;1,1,2,15,3,15,20,5,25,-1;</code> represents the following objects:</p> <ul> <li>Standard Block</li> <li>ID: 1 (<code>1,1</code>)</li> <li>X: 15 (<code>2,15</code>)</li> <li>Y: 15 (<code>3,15</code>)</li> <li>Main Color ID: 3 (<code>21,3</code>)</li> <li>Z Layer: 7 (<code>24,7</code>)</li> <li>Standard Block</li> <li>ID: 1 (<code>1,1</code>)</li> <li>X: 15 (<code>2,15</code>)</li> <li>Y: 15 (<code>3,15</code>)</li> <li>Editor Layer 1: 5 (<code>20,5</code>)</li> <li>Z Order: -1 (B3) (<code>25,-1</code>)</li> </ul> <p>Notice that every single objects contains at least 3 properties, <code>1</code>, <code>2</code>, <code>3</code>, which represent the object ID, X position and Y position respectively. Even in the case that the objects' X and Y positions are 0, the keys are not omitted. </p> <p>Property keys reflect the keys found in the following table, whereas property values are formatted as follows</p> Type Formatting integer decimal numerical value string (e.g. <code>421</code>) bool <code>1</code> if true, <code>0</code> if false float decimal numerical value string, using <code>.</code> as the decimal point separator (e.g. <code>12.41</code>) any enumeration same as integer integer array all values are separated by <code>.</code> (e.g. <code>1.42.51.23</code> for <code>{ 1, 42, 51, 23 }</code>) HSV <code>{h}a{s}a{v}a{s_checked}a{v_checked}</code>, where each name reflects the respective HSV property string raw string without quotation marks (e.g. <code>ExampleString</code>)"},{"location":"client/level-components/level-object/#level-object-data","title":"Level Object Data","text":"<p>Level Object Structure</p> Key Name/Value Type Description 1 Object ID integer the ID of the object 2 X Position float the X position of the object 3 Y Position float the Y position of the object 4 Flipped Horizontally bool whether the object is horizontally flipped 5 Flipped Vertically bool whether the object is vertically flipped 6 Rotation float the rotation of the objects in degrees, CW is positive, top is 0 7 Red integer the Red component of the color in a trigger 8 Green integer the Green component of the color in a trigger 9 Blue integer the Blue component of the color in a trigger 10 Duration float the duration of an effect in a trigger 11 Touch Triggered bool the Touch Triggered property of a trigger 12 Secret Coin ID integer the ID of a Secret Coin 13 Special Object Checked bool the checked property of some special objects (gamemode, speed, dual portals, etc.) 14 Tint Ground bool the Tint Ground property of the BG Color trigger 15 Player Color 1 bool the Player Color 1 property of any Color trigger 16 Player Color 2 bool the Player Color 2 property of any Color trigger 17 Blending bool the Blending property of any Color trigger 19 1.9 Color Channel ID integer the legacy Color Channel ID property used in 1.9 levels. If set to a valid value, both the Main and Secondary Color Channel ID properties will be ignored. 20 Editor Layer 1 integer the Editor Layer 1 property of the object 21 Main Color Channel ID integer the Main Color Channel ID property of the object 22 Secondary Color Channel ID integer the Secondary Color Channel ID property of the object 23 Target Color ID integer the Target Color ID property in an interactive object 24 Z Layer integer the Z Layer of the object 25 Z Order integer the Z Order of the object 28 Offset X integer the Offset X property of the Move trigger 29 Offset Y integer the Offset Y property of the Move trigger 30 Easing Easing the Easing type of the effect of a trigger 31 Text string the text of the text object in base64 32 Scaling float the scaling of the object 33 Single Group ID integer a group ID given to the object 34 Group Parent bool the Group Parent property of the object 35 Opacity float the opacity value of a trigger 41 Main Color HSV Enabled bool whether the HSV mode is enabled for the Main Color of the object 42 Secondary Color HSV Enabled bool whether the HSV mode is enabled for the Secondary Color of the object 43 Main Color HSV HSV the HSV adjustment values of the Main Color of the object 44 Secondary Color HSV HSV the HSV adjustment values of the Secondary Color of the object 45 Fade In float the Fade In property of the Pulse trigger 46 Hold float the Hold property of the Pulse trigger 47 Fade Out float the Fade Out property of the Pulse trigger 48 Pulse Mode Pulse Mode the Pulse Mode property of the Pulse trigger 49 Copied Color HSV HSV the HSV adjustment values of the Copied Color property of a trigger 50 Copied Color ID integer the Copied Color Channel ID in a trigger 51 Target Group ID integer the Target Group ID in a trigger 52 Pulse Target Type Pulse Target Type the Target Type property of the Pulse trigger 54 Yellow Teleportation Portal Y Offset float the Y offset of the yellow from the blue teleportation portal 55 Teleport Portal Ease bool The Smooth Ease property within Teleport Portals 56 Activate Group bool the Activate Group property of the trigger 57 Group IDs integer array the group IDs of the object 58 Lock To Player X bool the Lock To Player X property of the Move trigger 59 Lock To Player Y bool the Lock To Player Y property of the Move trigger 60 Copy Opacity bool the Copy Opacity property of a trigger 61 Editor Layer 2 integer the Editor Layer 2 of an object 62 Spawn Triggered bool the Spawn Triggered property of a trigger 63 Spawn Delay float the Spawn Delay property of the Spawn trigger 64 Don't Fade bool the Don't Fade property of the object 65 Main Only bool the Main Only property of the Pulse trigger 66 Detail Only bool the Detail Only property of the Pulse trigger 67 Don't Enter bool the Don't Enter property of the object 68 Degrees integer the Degrees property of the Rotate trigger 69 Times 360 integer the Times 360 property of the Rotate trigger 70 Lock Object Rotation bool the Lock Object Rotation property of the Rotate trigger 71 Secondary Group ID integer the Secondary (Follow, Target Pos, Center) Group ID property of some triggers 72 X Mod float the X Mod property of the Follow trigger 73 Y Mod float the Y Mod property of the Follow trigger 75 Strength float the Strength property of the Shake trigger 76 Animation ID integer the Animation ID property of the Animate trigger 77 Count integer the Count property of the Pickup trigger or the Pickup Item 78 Subtract Count bool the Subtract Count property of the Pickup trigger or the Pickup Item 79 Pickup Mode Pickup Item Mode the Pickup Mode property of the Pickup Item 80 Item/Block ID integer the Item/Block ID property of an object 81 Hold Mode bool the Hold Mode property of the Touch trigger 82 Toggle Mode Touch Toggle Mode the Toggle Mode property of the Touch trigger 84 Interval float the Interval property of the Shake trigger 85 Easing Rate float the Easing Rate property of a trigger 86 Exclusive bool the Exclusive property of a Pulse trigger 87 Multi-Trigger bool the Multi-Trigger property of a trigger 88 Comparison Instant Count Comparison the Comparison property of the Instant Count trigger 89 Dual Mode bool the Dual Mode property of the Touch trigger 90 Speed float the Speed property of the Follow Player Y trigger 91 Follow Delay float the Follow Delay property of the Follow Player Y trigger 92 Y Offset float the Y Offset property of the Follow Player Y trigger 93 Trigger On Exit bool the Trigger On Exit property of the Collision trigger 94 Dynamic Block bool the Dynamic Block property of the Collision block 95 Block B ID integer the Block B ID property of the Collision trigger 96 Disable Glow bool the Disable Glow property of the object 97 Custom Rotation Speed float the Custom Rotation Speed property of the rotating object in degrees per second 98 Disable Rotation bool the Disable Rotation property of the rotating object 99 Multi Activate (Orbs) bool the Multi Activate property of Orbs 100 Enable Use Target bool the Enable Use Target property of the Move trigger 101 Target Pos Coordinates Target Pos Coordinates the Target Pos Coordinates property of the Move trigger 102 Editor Disable bool the Editor Disable property of the Spawn trigger 103 High Detail bool the High Detail property of the object 104 Multi Activate (Triggers) bool The Multi Activate Property of Triggers 105 Max Speed float the Max Speed property of the Follow Player Y trigger 106 Randomize Start bool the Randomize Start property of the animated object 107 Animation Speed float the Animation Speed property of the animated object 108 Linked Group ID integer the Linked Group ID property of the object <p>Undiscovered Existing Features</p> <p>The following features are discovered in current local save files, however their purpose is undisclosed.</p> Key Type Info 36 bool suspected to be handling whether an object's X position is locked and unaffected by a Move trigger 74 bool(?) only found in the Follow Player Y trigger <p>Potentially Discarded Features</p> <p>The following key ranges are potentially discarded features, whose appearance in earlier versions of the game is unknown and untested.</p> Key Start Key End 18 26 27 37 40 53 83"},{"location":"client/topics/vault_codes/","title":"Vault Codes","text":"<p>In Geometry Dash there are three different vaults you can access: The Vault, Vault of Secrets and Chamber of Time.</p> <p>Each vault has a number of codes that you can enter to unlock icons and colors.</p>"},{"location":"client/topics/vault_codes/#encoding","title":"Encoding","text":"<p>The Vault: Codes are in plain text (not encoded).</p> <p>Vault of Secrets and Chamber of Time: <code>ask2fpcaqCQ2</code> is added to the code, then robtop encoding is applied.</p>"},{"location":"client/topics/vault_codes/#the-vault","title":"The Vault","text":"code reward <code>spooky</code> cube <code>lenny</code> cube <code>{name}</code>* cube <code>mule</code> ship <code>blockbite</code> UFO <code>neverending</code> UFO <code>ahead</code> wave <code>8</code>, <code>16</code>, <code>30</code>, <code>32</code>, <code>46</code>, <code>84</code>** wave <code>robotop</code> robot <code>gandalfpotter</code> trail <code>sparky</code> coin <p>* <code>name</code> is the in-game name of the player.</p> <p>** Consecutively enter one code at a time.</p>"},{"location":"client/topics/vault_codes/#vault-of-secrets","title":"Vault of Secrets","text":"code reward <code>{stars}</code>* cube <code>cod3breaker</code>** cube <code>brainpower</code> cube <code>octocube</code> cube <code>seven</code> cube <code>thechickenisonfire</code> secondary color <code>gimmethecolor</code> primary color <code>glubflub</code> coin <p>* <code>stars</code> is the in-game count of stars the player has.</p> <p>** You will be given a sequence of numbers. You need to find difference between each overlapping pair of numbers, combining the results into the final code. For example, for sequence <code>1, 2, 4, 8, 16, 32</code> the differences are <code>1, 2, 4, 8, 16</code>, therefore the final code is <code>124816</code>.</p>"},{"location":"client/topics/vault_codes/#chamber-of-time","title":"Chamber of Time","text":"code reward <code>silence</code> cube <code>hunger</code> cube <code>darkness</code> cube <code>volcano</code> wave <code>river</code> secondary color"},{"location":"encoding/aes/","title":"AES","text":""},{"location":"encoding/base64/","title":"Base64","text":"<p>Base64 encoding is widely used amongst different endpoints in Geometry Dash.</p> <p>It is used to encode fields like level data, level descriptions, comments, etc.</p> <p>GD uses URL-safe Base64 encoding, which uses <code>[A-Z]</code> and <code>[a-z]</code> letters along with <code>_</code> and <code>-</code> as special characters.</p>"},{"location":"encoding/base64/#code","title":"Code","text":"<pre><code># taken from gd.py\n\nfrom base64 import b64decode as standard_decode_base64\nfrom base64 import b64encode as standard_encode_base64\nfrom base64 import urlsafe_b64decode as standard_decode_base64_url_safe\nfrom base64 import urlsafe_b64encode as standard_encode_base64_url_safe\n\n# encoding\n\nDEFAULT_ENCODING = \"utf-8\"\nDEFAULT_ERRORS = \"strict\"\n\n# padding\n\nBASE64_PAD = 4\nBASE64_INVALID_TO_PAD = 1\nBASE64_PADDING = b\"=\"\n\n# last\n\nLAST = ~0\n\n\ndef enforce_valid_base64(data: bytes) -&gt; bytes:\n    required = len(data) % BASE64_PAD\n\n    if required:\n        if required == BASE64_INVALID_TO_PAD:\n            data = data[:LAST]\n\n        else:\n            data += BASE64_PADDING * (BASE64_PAD - required)\n\n    return data\n\n\ndef decode_base64(data: bytes) -&gt; bytes:\n    return standard_decode_base64(enforce_valid_base64(data))\n\n\ndef encode_base64(data: bytes) -&gt; bytes:\n    return standard_encode_base64(data)\n\n\ndef decode_base64_url_safe(data: bytes) -&gt; bytes:\n    return standard_decode_base64_url_safe(enforce_valid_base64(data))\n\n\ndef encode_base64_url_safe(data: bytes) -&gt; bytes:\n    return standard_encode_base64_url_safe(data)\n\n\ndef decode_base64_string(\n    string: str, encoding: str = DEFAULT_ENCODING, errors: str = DEFAULT_ERRORS\n) -&gt; str:\n    return decode_base64(string.encode(encoding, errors)).decode(encoding, errors)\n\n\ndef encode_base64_string(\n    string: str, encoding: str = DEFAULT_ENCODING, errors: str = DEFAULT_ERRORS\n) -&gt; str:\n    return encode_base64(string.encode(encoding, errors)).decode(encoding, errors)\n\n\ndef decode_base64_string_url_safe(\n    string: str, encoding: str = DEFAULT_ENCODING, errors: str = DEFAULT_ERRORS\n) -&gt; str:\n    return decode_base64_url_safe(string.encode(encoding, errors)).decode(encoding, errors)\n\n\ndef encode_base64_string_url_safe(\n    string: str, encoding: str = DEFAULT_ENCODING, errors: str = DEFAULT_ERRORS\n) -&gt; str:\n    return encode_base64_url_safe(string.encode(encoding, errors)).decode(encoding, errors)\n</code></pre>"},{"location":"encoding/checks/","title":"Checks","text":"<p>Check is a common parameter in requests, which is intended to \"improve security\". It is often sent in request as <code>chk</code>.</p> <p>Check is generated like so:</p> <ol> <li>Take an arbitrary amount of values.</li> <li>Combine them and add salt if there is one.</li> <li>Apply SHA-1 hashing to combined values and get its hexadecimal digest.</li> <li>Apply XOR Cipher to the digest with the desired key.</li> <li>Base64 encode the result.</li> </ol>"},{"location":"encoding/checks/#code","title":"Code","text":"<p>The generator can be implemented like this:</p> <pre><code>from hashlib import sha1 as standard_sha1\nfrom typing import Iterable\n\nEMPTY = str()\n\nconcat = EMPTY.join\n\nDEFAULT_ENCODING = \"utf-8\"\nDEFAULT_ERRORS = \"strict\"\n\n\ndef sha1_string(\n    string: str, salt: str = EMPTY, encoding: str = DEFAULT_ENCODING, errors: str = DEFAULT_ERRORS\n) -&gt; str:\n    return standard_sha1((data + salt).encode(encoding, errors)).hexdigest()\n\n\ndef generate_check(\n    values: Iterable[str],\n    key: str,\n    salt: str = EMPTY,\n    encoding: str = DEFAULT_ENCODING,\n    errors: str = DEFAULT_ERRORS,\n) -&gt; str:\n    string = concat(values)\n\n    hashed = sha1_string(string, encoding, errors)\n\n    xored = cyclic_xor_string(hashed, key, encoding, errors)\n\n    encoded = encode_base64_string_url_safe(xored, encoding, errors)\n\n    return encoded\n</code></pre> <p>XOR keys can be found here.</p> <p>Here is a summary of Check values and explanations on their generation:</p>"},{"location":"encoding/checks/#get-level","title":"Get Level","text":"name description <code>levelID</code> ID of the level to download. <code>inc</code> Unknown functionality. Set to <code>1</code>. <code>rs</code> Random String. <code>accountID</code> Account ID of the user downloading the level. <code>udid</code> UDID of the user. <code>uuid</code> UUID of the user."},{"location":"encoding/checks/#upload-level","title":"Upload Level","text":"name description <code>seed2</code> See generating upload seed for more information."},{"location":"encoding/checks/#post-comment","title":"Post Comment","text":"name description <code>userName</code> Name of the user commenting. <code>comment</code> The content of the comment. <code>levelID</code> The ID of the level containing the comment (<code>0</code> for user comments). <code>percent</code> The percentage on the level (<code>0</code> for user comments). <code>cType</code> The comment type (<code>0</code> for level comments, <code>1</code> for user comments)."},{"location":"encoding/checks/#get-quests","title":"Get Quests","text":"name description <code>chk</code> To generate: random string of length <code>5</code> + [encoded random integer][robtop]."},{"location":"encoding/checks/#get-chests","title":"Get Chests","text":"name description <code>chk</code> To generate: random string of length <code>5</code> + [encoded random integer][robtop]."},{"location":"encoding/checks/#like-item","title":"Like Item","text":"name description <code>special</code> Special value. <code>0</code> for levels, <code>levelID</code> for level comments, <code>commentID</code> for user comments. <code>itemID</code> ID of the level comment, level or user comment. <code>like</code> Whether to like the item. <code>rs</code> Random String. <code>accountID</code> Account ID of the user (dis)liking an item. <code>udid</code> UDID of the user. <code>uuid</code> UUID of the user."},{"location":"encoding/checks/#update-profile","title":"Update Profile","text":"name description <code>accountID</code> The account ID of the user updating. <code>userCoins</code> The user coins count. <code>demons</code> The demons beaten count. <code>stars</code> The stars count. <code>coins</code> The secret coins count. <code>iconType</code> The icon type. <code>icon</code> ID of the icon. <code>diamonds</code> The diamonds count. <code>accIcon</code> ID of the cube selected. <code>accShip</code> ID of the ship selected. <code>accBall</code> ID of the ball selected. <code>accBird</code> ID of the UFO selected. <code>accDart</code> ID of the wave selected. <code>accRobot</code> ID of the robot selected. <code>glow</code> Whether to enable glow. <code>accSpider</code> ID of the spider selected. <code>accExplosion</code> ID of the explosion selected."},{"location":"encoding/checks/#level-leaderboard","title":"Level Leaderboard","text":"name description <code>accountID</code> The account ID of the user requesting. <code>levelID</code> ID of the level to find leaderboard for. <code>percent</code> The record percentage on the level. <code>jumps</code> The total count of jumps on the level. <code>attempts</code> The total count of attempts spent. <code>seed</code> See generating leaderboard seed for more information. <code>differences</code> Personal best differences, e.g <code>0 -&gt; 13 -&gt; 100 =&gt; 13,87</code>. <code>unknown</code> Unknown functionality. Set to <code>1</code>. <code>coins</code> The coins count on the level. <code>timelyID</code> The timely ID of the level (<code>0</code> if not timely). <code>seed</code> Random String."},{"location":"encoding/checks/#salts","title":"Salts","text":"salt usage <code>xI25fpAapCQg</code> Level <code>xPT6iUrtws0J</code> Comment <code>ysg6pUrtjn0J</code> Like or Rate <code>xI35fsAapCRg</code> User <code>yPg6pUrtWn0J</code> Level Leaderboard"},{"location":"encoding/ids/","title":"Random String, UUID and UDID","text":"<p>These are the parameters that can be frequently noticed when sending a request.</p>"},{"location":"encoding/ids/#random-string","title":"Random String","text":"<p>Random Seed, or Random String, is essentially just a string containing n (often 10) random alphanumeric characters. It is mainly sent as <code>rs</code> in requests.</p> <p>Generating it is quite simple:</p> <pre><code>from random import choices\nfrom string import ascii_letters, digits\n\nCHARSET = ascii_letters + digits\n\nEMPTY = str()\nLENGTH = 10\n\nconcat = EMPTY.join\n\n\ndef generate_random_string(length: int = LENGTH, charset: str = CHARSET) -&gt; str:\n    return concat(choices(charset, k=length))\n</code></pre>"},{"location":"encoding/ids/#uuid","title":"UUID","text":"<p>UUID stands for Universally Unique Identifier. It is sent as <code>uuid</code> in requests.</p> <p>It can be randomly generated using <code>uuid</code> module:</p> <pre><code>from uuid import uuid4\n\ndef generate_uuid() -&gt; str:\n    return str(uuid4())\n</code></pre>"},{"location":"encoding/ids/#udid","title":"UDID","text":"<p>UDID is an abbreviation for Unique Device Identifier that is sent as <code>udid</code> in requests. It does not really have a defined format, but frequently has structure like <code>S</code> followed by digits, or it can be the same as user ID.</p> <p>Generating UDID means merely generating a random integer:</p> <pre><code>from random import randrange as random_range\n\nPREFIX = \"S\"\nDEFAULT_START = 100_000\nDEFAULT_STOP = 100_000_000\n\n\ndef generate_udid(\n    prefix: str = PREFIX, start: int = DEFAULT_START, stop: int = DEFAULT_STOP\n) -&gt; str:\n    return prefix + str(random_range(start, stop))\n</code></pre>"},{"location":"encoding/robtop/","title":"RobTop Encoding","text":""},{"location":"encoding/seeds/","title":"Seeds","text":""},{"location":"encoding/seeds/#upload-seed","title":"Upload Seed","text":"<pre><code>from typing import AnyStr as AnyString\n\nCOUNT = 50\n\n\ndef generate_upload_seed(data: AnyString, count: int = COUNT) -&gt; AnyString:\n    length = len(data)\n\n    if length &lt; count:\n        return data  # not enough data\n\n    step = length // count\n\n    return data[::step][:count]\n</code></pre>"},{"location":"encoding/seeds/#leaderboard-seed","title":"Leaderboard Seed","text":"<pre><code>HAS_PLAYED_MULTIPLY = 1482\nJUMPS_ADD = 3991\nPERCENTAGE_ADD = 8354\nSECONDS_ADD = 4085\n\nSUBTRACT = JUMPS_ADD * PERCENTAGE_ADD + SECONDS_ADD * SECONDS_ADD\n\n\ndef generate_leaderboard_seed(\n    jumps: int, percentage: int, seconds: int, has_played: bool = True\n) -&gt; int:\n    return (\n        HAS_PLAYED_MULTIPLY * (has_played + 1)\n        + (jumps + JUMPS_ADD) * (percentage + PERCENTAGE_ADD)\n        + pow((seconds + SECONDS_ADD), 2) - SUBTRACT\n    )\n</code></pre>"},{"location":"encoding/xor/","title":"XOR","text":"<p>XOR is a bit-wise binary operation that is commonly written as <code>^</code> in programming languages.</p> <p>Each character in a string is essentially represented as bytes, to which XOR is applied.</p>"},{"location":"encoding/xor/#xor-cipher","title":"XOR Cipher","text":"<p>XOR Cipher elaborates on the idea of applying XOR to each to byte, one in the data and one in the key.</p> <p>Here are our XOR Cipher empty functions:</p> <pre><code>def cyclic_xor(data: bytes, key: bytes) -&gt; bytes:\n    ...\n\n\ndef cyclic_xor_string(string: str, key: str, encoding: str = ..., errors: str = ...) -&gt; str:\n    ...\n</code></pre> <p>XOR Cipher pairs each byte in the string with a byte in the key (which is cycled), then applies XOR operation for each pair.</p> <p>Returning back to our functions:</p> <pre><code>from itertools import cycle\n\nDEFAULT_ENCODING = \"utf-8\"\nDEFAULT_ERRORS = \"strict\"\n\n\ndef cyclic_xor(data: bytes, key: bytes) -&gt; bytes:\n    return bytes(byte ^ key_byte for byte, key_byte in zip(data, cycle(key)))\n\n\ndef cyclic_xor_string(\n    string: str, key: str, encoding: str = DEFAULT_ENCODING, errors: str = DEFAULT_ERRORS\n) -&gt; str:\n    result = cyclic_xor(string.encode(encoding, errors), key.encode(encoding, errors))\n\n    return result.decode(encoding, errors)\n</code></pre> <p>XOR Cipher can also use one byte as the key:</p> <pre><code>def xor(data: bytes, key: int) -&gt; bytes:\n    return bytes(byte ^ key for byte in data)\n\n\ndef xor_string(\n    string: str, key: str, encoding: str = DEFAULT_ENCODING, errors: str = DEFAULT_ERRORS\n) -&gt; str:\n    result = xor(string.encode(encoding, errors), key.encode(encoding, errors))\n\n    return result.decode(encoding, errors)\n</code></pre>"},{"location":"encoding/xor/#xor-keys","title":"XOR Keys","text":"<p>Here is a list of XOR keys currently used in GD:</p> Key Usage <code>14251</code> Messages <code>26364</code> Level Password <code>37526</code> User Password <code>39673</code> Level Leaderboard <code>41274</code> Level Seed <code>29481</code> Comment Check <code>19847</code> Challenges <code>59182</code> Rewards <code>58281</code> Like and Rate <code>85271</code> User Profile <code>19283</code> Vault Codes <code>48291</code> Load Data"},{"location":"encoding/zip/","title":"ZIP","text":""},{"location":"server/endpoints/accept_friend_request/","title":"acceptGJFriendRequest20.php","text":"<p>Accepts an incoming friend request</p>"},{"location":"server/endpoints/accept_friend_request/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/accept_friend_request/#required-parameters","title":"Required Parameters","text":"<p>accountID - Account ID of the user accepting the friend request</p> <p>gjp - The GJP of the user accepting the friend request</p> <p>targetAccountID - Account ID of the user who sent the friend request</p> <p>requestID - ID of the friend request (Returned by uploadFriendRequest20)</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/accept_friend_request/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/accept_friend_request/#response","title":"Response","text":"<p>1, regardless of if the friend request exists or not</p>"},{"location":"server/endpoints/accept_friend_request/#example","title":"Example","text":""},{"location":"server/endpoints/accept_friend_request/#python","title":"Python","text":"<pre><code>import requests\n\n# With this code, DevExit is accepted a friend request\n# from PasswordFinders, whose account ID is 5317656\n\ndata = {\n    \"accountID\": 173831, # DevExit's account ID\n    \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n    \"targetAccountID\": 5317656,\n    \"requestID\": 43248797,\n    \"secret\": \"Wmfd2893gb7\",\n}\n\nr = requests.post('http://boomlings.com/database/acceptGJFriendRequest20.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/block_user/","title":"blockGJUser20.php","text":"<p>Blocks a user.</p>"},{"location":"server/endpoints/block_user/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/block_user/#required-parameters","title":"Required Parameters","text":"<p>accountID - The blocking person's account ID</p> <p>gjp - The blocking person's GJP</p> <p>targetAccountID - The account ID of the person being blocked</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/block_user/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/block_user/#response","title":"Response","text":"<p>Always returns 1, regardless of if the target account exists or not.</p>"},{"location":"server/endpoints/block_user/#example","title":"Example","text":""},{"location":"server/endpoints/block_user/#python","title":"Python","text":"<pre><code>import requests\n\n# With this code, DevExit is blocking RobTop\n\ndata = {\n        \"accountID\": 173831, # DevExit's account ID\n        \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n        \"targetAccountID\": 71, # Robtop's account ID\n        \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/blockGJUser20.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/delete_account_comment/","title":"deleteGJAccComment20.php","text":""},{"location":"server/endpoints/delete_account_comment/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/delete_account_comment/#required-parameters","title":"Required Parameters","text":"<p>accountID - Account ID of the user deleting the comment</p> <p>gjp - The GJP of the user deleting the comment</p> <p>commentID - The ID of the comment being deleted (Returned by uploadGJAccComment20)</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/delete_account_comment/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/delete_account_comment/#response","title":"Response","text":"<p>1 if the comment was deleted, -1 if there was an error</p>"},{"location":"server/endpoints/delete_account_comment/#example","title":"Example","text":""},{"location":"server/endpoints/delete_account_comment/#python","title":"Python","text":"<pre><code>import requests\n\n# With this code, DevExit is deleting his account comment with ID 1772717\n\ndata = {\n    \"accountID\": 173831, # DevExit's account ID\n    \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n    \"commentID\": 1772717,\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nr = requests.post('http://boomlings.com/database/deleteGJAccComment20.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/delete_friend_request/","title":"deleteGJFriendRequests20.php","text":"<p>Deletes a friend request</p>"},{"location":"server/endpoints/delete_friend_request/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/delete_friend_request/#required-parameters","title":"Required Parameters","text":"<p>accountID - The account ID of the user who is deleting the friend request</p> <p>gjp - The GJP of the user who is deleting the friend request</p> <p>targetAccountID - ID of the person whose friend request is being deleted</p> <p>isSender - 1 if the user who deleted the friend request is the sender, otherwise 0</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/delete_friend_request/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p>"},{"location":"server/endpoints/delete_friend_request/#response","title":"Response","text":"<p>Always returns 1, regardless of whether the request exists or not.</p>"},{"location":"server/endpoints/delete_friend_request/#example","title":"Example","text":""},{"location":"server/endpoints/delete_friend_request/#python","title":"Python","text":"<pre><code>import requests\n\n# With this code, DevExit is deleting a friend request to the person with ID 314159\n\ndata = {\n        \"accountID\": 173831, # DevExit's account ID\n        \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n        \"targetAccountID\": 314159, \n        \"isSender\": 1, # DevExit sent the friend request, so this is 1\n        \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/deleteGJFriendRequests20.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/delete_level/","title":"deleteGJLevelUser20.php","text":"<p>Deletes a level from the server.</p>"},{"location":"server/endpoints/delete_level/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/delete_level/#required-parameters","title":"Required Parameters","text":"<p>accountID - The level author's account ID</p> <p>gjp - The level author's GJP</p> <p>levelID - The ID of the level being deleted</p> <p>secret - Wmfv2898gc9</p>"},{"location":"server/endpoints/delete_level/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/delete_level/#response","title":"Response","text":"<p>Returns 1 if deleted, -1 if it failed or the level does not exist.</p>"},{"location":"server/endpoints/delete_level/#example","title":"Example","text":""},{"location":"server/endpoints/delete_level/#python","title":"Python","text":"<pre><code>import requests\n\n# With this code, DevExit is deleting the level with ID 62689548\n\ndata = {\n        \"accountID\": 173831, # DevExit's account ID\n        \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n        \"levelID\": 62689548,\n        \"secret\": \"Wmfv2898gc9\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/deleteGJLevelUser20.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/delete_level_comment/","title":"deleteGJComment20.php","text":"<p>Deletes a level comment.</p>"},{"location":"server/endpoints/delete_level_comment/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/delete_level_comment/#required-parameters","title":"Required Parameters","text":"<p>accountID - The account ID of the user who is deleting the comment</p> <p>gjp - The GJP of the user who is deleting the comment</p> <p>commentID - ID of the comment</p> <p>levelID - ID of the level the comment is on</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/delete_level_comment/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/delete_level_comment/#response","title":"Response","text":"<p>Returns 1 if deleted, -1 if not.</p>"},{"location":"server/endpoints/delete_level_comment/#example","title":"Example","text":""},{"location":"server/endpoints/delete_level_comment/#python","title":"Python","text":"<pre><code>import requests\n\n# With this code, DevExit is deleting the comment with ID 31415926\n\ndata = {\n        \"accountID\": 173831, # DevExit's account ID\n        \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n        \"commentID\": 31415926,\n        \"levelID\": 54953085,\n        \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/deleteGJComment20.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/delete_message/","title":"deleteGJMessages20.php","text":"<p>Deletes a message between two users.</p>"},{"location":"server/endpoints/delete_message/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/delete_message/#required-parameters","title":"Required Parameters","text":"<p>accountID - The account ID of the user who is deleting the message</p> <p>gjp - The GJP of the user who is deleting the message</p> <p>messageID - ID of the message being deleted</p> <p>isSender - 1 if the user who deleted the message is the sender, otherwise this parameter isn't sent</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/delete_message/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/delete_message/#response","title":"Response","text":"<p>Always returns 1, regardless of whether the message was deleted or not.</p>"},{"location":"server/endpoints/delete_message/#example","title":"Example","text":""},{"location":"server/endpoints/delete_message/#python","title":"Python","text":"<pre><code>import requests\n\n# With this code, DevExit is deleting a message with the ID 3141592\n# DevExit received this message, and therefore the isSender parameter is not needed\n\ndata = {\n        \"accountID\": 173831, # DevExit's account ID\n        \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n        \"messageID\": 3141592,\n        \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/deleteGJMessages20.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/download_level/","title":"downloadGJLevel22.php","text":"<p>Downloads a user level and info so it can be played.</p>"},{"location":"server/endpoints/download_level/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/download_level/#required-parameters","title":"Required Parameters","text":"<p>levelID - The ID of the level to download. Use -1 for the daily level and -2 for the weekly.</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/download_level/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>accountID - The account ID of the user who is downloading the level</p> <p>gjp - The GJP of the user who is downloading the level</p> <p>udid - The udid of the user who is downloading the level</p> <p>uuid - The uuid of the user who is downloading the level</p> <p>inc - Unknown function. Set to 1</p> <p>extras - Unknown function. Set to 0</p> <p>rs - See here</p> <p>chk - See here</p>"},{"location":"server/endpoints/download_level/#response","title":"Response","text":"<p>Returns a level object.</p>"},{"location":"server/endpoints/download_level/#example","title":"Example","text":""},{"location":"server/endpoints/download_level/#python","title":"Python","text":"<pre><code>import requests\n\n# With this code we are getting the level info of Test by DevExit\n\ndata = {\n    \"levelID\": 62687277,\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/downloadGJLevel22.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1:62687277:2:Test:3:QSB0ZXN0IGxldmVsIGZvciB0aGUgR0QgRG9jcyE=:4:H4sIAAAAAAAAC6WQwQ3DIAxFF3IlfxsIUU6ZIQP8AbJChy_GPSZqpF7-A4yfDOfhXcCiNMIqnVYrgYQl8rDwBTZCVbkQRI3oVHbiDU6F2jMF_lesl4q4kw2PJMbovxLBQxTpM3-I6q0oHmXjzx7N0240cu5w0UBNtESRkble8uSLHjh8nTubmYJZ2MvMrEITEN0gEJMxlLiMZ28frmj:5:1:6:3935672:8:0:9:0:10:1:12:0:13:21:14:0:17::43:0:25::18:0:19:0:42:0:45:1:15:0:30:55610687:31:0:28:1 hour:29:1 hour:35:546561:36::37:0:38:0:39:50:46::47::40::27:AQcHBwEL#1bae6491cc87c72326abcbc0a7afaee139aa7088#f17c5a61f4ba1c7512081132459ddfaaa7c6f716\n</code></pre></p>"},{"location":"server/endpoints/download_message/","title":"downloadGJMessage20.php","text":"<p>Download a message.</p>"},{"location":"server/endpoints/download_message/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/download_message/#required-parameters","title":"Required Parameters","text":"<p>accountID - The person's account ID</p> <p>gjp - The blocking person's GJP</p> <p>messageID - The ID of the message to read</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/download_message/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/download_message/#response","title":"Response","text":"<p>Returns a message object separated by colons <code>:</code></p>"},{"location":"server/endpoints/download_message/#example","title":"Example","text":""},{"location":"server/endpoints/download_message/#python","title":"Python","text":"<pre><code>import requests\n\n# With this code we are getting the message info of the message with ID 54109536\n\ndata = {\n        \"accountID\": 173831, # DevExit's account ID\n        \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n        \"messageID\": 54109536,\n        \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/downloadGJMessage20.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>6:DevExit:3:3935672:2:173831:1:54109536:4:WW91J3JlIGR1bWIgbG9s:8:1:9:0:5:TWhtIHllcCB5b3UncmUgcCBkdW1iIGxtYW8=:7:19 minutes\n</code></pre></p>"},{"location":"server/endpoints/get_account_comments/","title":"getGJAccountComments20.php","text":"<p>Gets a user's account comments.</p>"},{"location":"server/endpoints/get_account_comments/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_account_comments/#required-parameters","title":"Required Parameters","text":"<p>accountID - The ID of the account whose comments you're getting</p> <p>page - Which page of comments you want to see</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_account_comments/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>total - Current use is unknown, defaults to the amount of comments the user has, but leaving it as 0 works.</p>"},{"location":"server/endpoints/get_account_comments/#response","title":"Response","text":"<p>Returns a list of comment objects separated by a pipe <code>|</code>.</p>"},{"location":"server/endpoints/get_account_comments/#example","title":"Example","text":""},{"location":"server/endpoints/get_account_comments/#python","title":"Python","text":"<pre><code>import requests\n\n# This code returns DevExit's account comments.\n\ndata = {\n    \"accountID\": 173831, # DevExit's account ID\n    \"page\": 0,\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJAccountComments20.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>2~NTAwMCBzdGFycyE=~4~9~9~2 months~6~1756926|2~Qmxvb2RiYXRoIEdHISEh~4~19~9~6 months~6~1745624|2~QWxsZWdpYW5jZSAxMDAl~4~2~9~6 months~6~1744292|2~SUNEWCAxMDAlIDop~4~1~9~6 months~6~1743608|2~T2ggeWVhaCBDYXRhIGFuZCBUVVAgMTAwJQ==~4~1~9~7 months~6~1742661|2~Mi4xMSBpcyBvdXQgOik=~4~43~9~2 years~6~1295890|2~SSBsaWtlIGhvdyBzb21lb25lIGRpc2xpa2UgYm90dGVkIG1vc3Qgb2YgbXkgY29tbWVudHMgOikgU2hvd3MgdGhhdCBJJ20uLi5mQW1PdVM=~4~16~9~2 years~6~1279970|2~TmVjcm9wb2xpeCBpbiAyMTYgYXR0IGluIHByYWN0aWNl~4~14~9~2 years~6~1264265|2~IkhpIEx1bmEi~4~15~9~3 years~6~1246506|2~TyB3YWl0IG15IDUwdGggZGVtb24gd2FzIGdvaW5nIHRvIGJlIEJ1Y2sgRm9yY2UsIG5vdCByZWFsbHkgY2VsZWJyYXRvcnkuLi4=~4~7~9~3 years~6~1238082#67:0:10\n</code></pre></p>"},{"location":"server/endpoints/get_account_url/","title":"getAccountURL.php","text":"<p>Gets the URL for the data server. Official domain name is http://geometrydash.com, but the server returns http://69.164.210.48.</p>"},{"location":"server/endpoints/get_account_url/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_account_url/#required-parameters","title":"Required Parameters","text":"<p>accountID - Anyone's account ID</p> <p>type - used to decide which endpoint is used after the data server is found - 1 = backup data/ 2 = sync data</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_account_url/#response","title":"Response","text":"<p>http://69.164.210.48</p>"},{"location":"server/endpoints/get_account_url/#example","title":"Example","text":""},{"location":"server/endpoints/get_account_url/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n        \"accountID\": 173831,\n        \"type\": 2,\n        \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/getAccountURL.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>http://69.164.210.48\n</code></pre></p>"},{"location":"server/endpoints/get_chests/","title":"getGJRewards.php","text":"<p>Gets the rewards from the chests.</p>"},{"location":"server/endpoints/get_chests/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_chests/#required-parameters","title":"Required Parameters","text":"<p>udid - A unique identifier for the user's device, can be replaced with anything</p> <p>secret - Wmfd2893gb7</p> <p>chk - 5 random chars appended to the beginning of a random number XOR'd and URL-Safe Base64 encoded</p>"},{"location":"server/endpoints/get_chests/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>accountID - Account ID of the user</p> <p>gjp - The user's GJP</p> <p>uuid - Seemingly a random number also used for identifying someone</p> <p>rewardType - 0 for small chest, 1 for large chest. Defaults to 0 if left out</p> <p>r1 - A random 3-5 digit number</p> <p>r2 - A random 3-5 digit number</p>"},{"location":"server/endpoints/get_chests/#response","title":"Response","text":"<p>A list of attributes of the Rewards, separated by colons <code>:</code> as follows: - A random string of 5 characters - User's player ID - The number used for the <code>chk</code> - <code>udid</code> - User's account ID - Small chest time remaining - Small chest's rewards in a comma separated list     - Orbs     - Diamonds     - Shards (0 is Fire, 1 is Ice, 2 is Poison, 3 is Shadow, and 4 is Lava)     - Key (If it's not 0, give a key) - Large chest time remaining - Large chest's rewards in a comma separated list - Maybe the amount of rewards claimed? - <code>rewardType</code></p> <p>This list is then XOR'd and URL-Safe Base64 encoded. Then it is separated with its hash by a pipe <code>|</code>. It also has a random string of 5 characters appended to the front.</p>"},{"location":"server/endpoints/get_chests/#example","title":"Example","text":""},{"location":"server/endpoints/get_chests/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"accountID\": 173831, # DevExit's account ID\n    \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n    \"udid\": \"605BE9FD-300E-49EA-A45C-B272EE64D3E0\",\n    \"secret\": \"Wmfd2893gb7\",\n    \"chk\": f\"{''.join(random.choice('1234567890qwertyuiopaqsdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM') for i in range(5))}{base64.b64encode(xor_cipher(str(random.randint(10000, 1000000)), '59182').encode()).decode()}\",\n    \"rewardType\": 1\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJRewards.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>DA96FcVVmQnEPCggLBwMOAwIGDAAGDgsPcBFbU1sZQU1GFXtiGFpQS1QCAwIKCQsDDwsHDAQPDQEUAxkJHQgIBA4DDAgCDQcMAg8LAQgeAxUFFAIPDAILCAQ=|3f5f0ad92a601380e7eea113c223be94ff75304d\n</code></pre></p>"},{"location":"server/endpoints/get_comment_history/","title":"getGJCommentHistory.php","text":"<p>Gets a user's comment history.</p>"},{"location":"server/endpoints/get_comment_history/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_comment_history/#required-parameters","title":"Required Parameters","text":"<p>userID - The player ID of the user. This is different from the account ID.</p> <p>page - Which page of comments you want to see</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_comment_history/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>mode - Set to 0 for most recent, and 1 for most liked</p> <p>total - Current use is unknown, defaults to the amount of comments the user has, but leaving it as 0 works.</p>"},{"location":"server/endpoints/get_comment_history/#response","title":"Response","text":"<p>Returns a list of comment objects separated by a pipe <code>|</code>.</p>"},{"location":"server/endpoints/get_comment_history/#example","title":"Example","text":""},{"location":"server/endpoints/get_comment_history/#python","title":"Python","text":"<pre><code>import requests\n\n# This code retrieves DevExit's most liked comments\n\ndata = {\n    \"userID\": 3935672, # DevExit's player ID\n    \"page\": 0,\n    \"mode\": 1, # This can be left out and will default to 0\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJCommentHistory.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>2~MTQ0aHogYnVnIGF0IHRoaXMgcGVyY2VudCA6Yw==~1~59291804~3~3935672~4~303~10~43~9~5 months~6~17381271:1~DevExit~9~119~10~18~11~16~14~0~15~2~16~173831|2~T1ZFUiAxMDAwMCBET1dOTE9BRFMhISEhIFRIWCBTT09PTyBNVUNIISEh~1~14278830~3~3935672~4~16~10~0~9~4 years~6~20407183:1~DevExit~9~119~10~18~11~16~14~0~15~2~16~173831|2~V2h5~1~39387387~3~3935672~4~16~10~0~9~2 years~6~6965185:1~DevExit~9~119~10~18~11~16~14~0~15~2~16~173831|2~cGFzcyAzNjk3NDE=~1~20374388~3~3935672~4~15~10~0~9~4 years~6~25437852:1~DevExit~9~119~10~18~11~16~14~0~15~2~16~173831|2~TCBpIGsgZSBiIG8gdA==~1~45375100~3~3935672~4~11~10~0~9~2 years~6~18743065:1~DevExit~9~119~10~18~11~16~14~0~15~2~16~173831|2~Njk3NDY5IHBhc3MhISEhISEhISE=~1~9834617~3~3935672~4~9~10~0~9~4 years~6~25333196:1~DevExit~9~119~10~18~11~16~14~0~15~2~16~173831|2~ICAg~1~28093070~3~3935672~4~7~10~0~9~3 years~6~44155639:1~DevExit~9~119~10~18~11~16~14~0~15~2~16~173831|2~MTU2MjU1IHBhc3M=~1~20727320~3~3935672~4~7~10~0~9~4 years~6~25238380:1~DevExit~9~119~10~18~11~16~14~0~15~2~16~173831|2~NTU2Mjg3IGlzIHRoZSBQQVNTU1NTU1NTIQ==~1~20742226~3~3935672~4~7~10~0~9~4 years~6~25333304:1~DevExit~9~119~10~18~11~16~14~0~15~2~16~173831|2~TmljZSBsaWtlYm90~1~34571961~3~3935672~4~6~10~0~9~3 years~6~5908756:1~DevExit~9~119~10~18~11~16~14~0~15~2~16~173831#999:0:10\n</code></pre></p>"},{"location":"server/endpoints/get_friend_requests/","title":"getGJFriendRequests20.php","text":"<p>Gets a user's friend requests.</p>"},{"location":"server/endpoints/get_friend_requests/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_friend_requests/#required-parameters","title":"Required Parameters","text":"<p>accountID - The account ID of the person whose friend requests you're trying to get</p> <p>gjp - The user's GJP</p> <p>getSent - 0 for friend requests the user retrieved, and 1 for friend requests the user has sent</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_friend_requests/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>page - The page of friend requests you want. Defaults to 0 if not sent</p> <p>total - Current use is unknown, defaults to the amount of friend requests the user has, but leaving it as 0 works.</p>"},{"location":"server/endpoints/get_friend_requests/#response","title":"Response","text":"<p>A list of friend request objects separated by a pipe <code>|</code>.</p>"},{"location":"server/endpoints/get_friend_requests/#example","title":"Example","text":""},{"location":"server/endpoints/get_friend_requests/#python","title":"Python","text":"<pre><code>import requests\n\n# This code gets all the friend requests DevExit has sent\n\ndata = {\n    \"accountID\": 173831, # DevExit's account ID\n    \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n    \"getSent\": 1,\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJFriendRequests20.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1:XShadowWizardX:2:10670782:9:115:10:12:11:7:14:0:15:2:16:1919857:32:40482513:35:b3dv:41:1:37:3 months|1:HyperSoul:2:8417870:9:37:10:35:11:12:14:0:15:2:16:1217980:32:16160788:35:V2h5IGRpZCB5b3UgdW5mcmllbmQgbWUgOzM7:41:1:37:3 years|1:foreverbound95:2:15015378:9:1:10:0:11:3:14:0:15:0:16:4273678:32:13187274:35:SGksIFhE:41:1:37:3 years|1:Zhen M:2:19294285:9:1:10:0:11:3:14:0:15:0:16:5610849:32:13077932:35:ZWNrcyBkZWUgcnVicnVi:41:1:37:3 years|1:xSpectrum:2:12078249:9:22:10:15:11:12:14:0:15:2:16:2786272:32:11605585:35:OzM7LyBZb3UgbWFrZSBndWQgbGV2ZWxzIFw7MzsgSEFQUFkgTkVXIFlFQVJT:41:1:37:3 years|1:Michicun:2:9389282:9:46:10:16:11:12:14:0:15:2:16:2655938:32:10263453:35:Ok8gWW91IGNvbW1lbnRlZCBvbiBteSBsZXZlbCBYRA==:41:1:37:3 years|1:Findexi:2:995430:9:127:10:6:11:3:14:0:15:2:16:22264:32:9633972:35:TXkgZnJpZW5kIGhhcyAxIG1vcmUgc3RhciB0aGFuIHlvdQ==:41:1:37:3 years|1:lSuwako:2:11304810:9:3:10:3:11:12:14:6:15:2:16:215104:32:9621020:35:R0cgT04gMTMgQU5EIFlPVSBDT01NRU5URUQgT04gTVkgTEVWRUw=:41:1:37:3 years|1:Xaro:2:3032783:9:32:10:8:11:6:14:2:15:2:16:14233:32:7255586:35:UEx6IDszOyBJJ2xsIGdpdmUgeW91IG9uZSBvZiBteSBuZWlnaGJvcidzIGNvcmdpcyEgQ29yZ2lEZXJw:41:1:37:4 years|1:KaotikJumper:2:2676052:9:110:10:12:11:12:14:0:15:0:16:129311:32:3612380:35:REVBVEggQ09SUklET1IgQ09NUExFVEUhIChwcmFjdGljZSkgS2FwcGE=:41:1:37:4 years|1:D4rkGryf:2:4053881:9:87:10:21:11:40:14:0:15:2:16:270562:32:3125311:35:SGo=:41::37:4 years|1:TrueChaos:2:464435:9:60:10:9:11:15:14:0:15:2:16:100961:32:994096:35::41:1:37:4 years|1:DiMaViKuLov26:2:4993756:9:1:10:12:11:15:14:0:15:2:16:225521:32:944653:35:aW5zZXJ0bGVubnloZXJl:41:1:37:4 years|1:Krexon:2:3488114:9:28:10:12:11:16:14:0:15:2:16:1716100:32:397053:35:Ty5PIHBseiwgSSBMT1ZFIFVSIExWTFMhISEh:41:1:37:4 years|1:TheZekenator:2:3497675:9:1:10:0:11:3:14:0:15:0:16:1028719:32:372035:35:RGVtb24gQ29sbGFiIDop:41::37:4 years|1:Z3lLink:2:114346:9:30:10:3:11:12:14:0:15:0:16:677:32:191941:35::41:1:37:4 years|1:Experience D:2:9618:9:120:10:35:11:3:14:0:15:2:16:9917:32:191927:35::41:1:37:4 years|1:ZenthicAlpha:2:214216:9:108:10:12:11:3:14:0:15:2:16:638:32:191899:35:UGx6IEknZCBsaWtlIHRvIGZyaWVuZCBwbHogOkQ=:41:1:37:4 years#:0:20\n</code></pre></p> <p>~~Please don't hurt me I was 12/13 at the time when I sent most of those friend requests~~</p>"},{"location":"server/endpoints/get_gauntlets/","title":"getGJGauntlets21.php","text":"<p>Gets the gauntlet levels.</p>"},{"location":"server/endpoints/get_gauntlets/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_gauntlets/#required-parameters","title":"Required Parameters","text":"<p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_gauntlets/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>special - 1 (fetches the 2.2 gauntlets)</p>"},{"location":"server/endpoints/get_gauntlets/#response","title":"Response","text":"<p>A list of gauntlet objects, separated by a pipe <code>|</code>.</p>"},{"location":"server/endpoints/get_gauntlets/#example","title":"Example","text":""},{"location":"server/endpoints/get_gauntlets/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJGauntlets21.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1:1:3:27732941,28200611,27483789,28225110,27448202|1:2:3:20635816,28151870,25969464,24302376,27399722|1:3:3:28179535,29094196,29071134,26317634,12107595|1:4:3:26949498,26095850,27973097,27694897,26070995|1:5:3:18533341,28794068,28127292,4243988,28677296|1:6:3:28255647,27929950,16437345,28270854,29394058|1:7:3:25886024,4259126,26897899,7485599,19862531|1:8:3:18025697,23189196,27786218,27728679,25706351#74aeff3cb009cbde1d7235e1c7e74b47d793eb82\n</code></pre></p>"},{"location":"server/endpoints/get_leaderboard/","title":"getGJScores20.php","text":"<p>Gets the leaderboard scores.</p>"},{"location":"server/endpoints/get_leaderboard/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_leaderboard/#required-parameters","title":"Required Parameters","text":"<p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_leaderboard/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>accountID - The account ID of the user viewing the leaderboards</p> <p>gjp - The user's GJP</p> <p>type - Can be <code>top</code>, <code>relative</code>, <code>friends</code>, or <code>creators</code>. If left out it defaults to <code>top</code></p> <p>count - Returns the amount of players specified</p>"},{"location":"server/endpoints/get_leaderboard/#response","title":"Response","text":"<p>Returns a list of user objects in order based on which leaderboard you're viewing, separated by pipe <code>|</code> characters.</p>"},{"location":"server/endpoints/get_leaderboard/#example","title":"Example","text":""},{"location":"server/endpoints/get_leaderboard/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"secret\": \"Wmfd2893gb7\",\n    \"type\": \"top\",\n    \"count\": 20\n}\n\nreq = requests.post('http://boomlings.com/database/getGJScores20.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1:xMiguel007:2:2866103:13:149:17:7219:6:1:9:37:10:35:11:3:14:0:15:2:16:70846:3:65710:8:0:46:12879:4:1073|1:shaggy23:2:1995959:13:149:17:4321:6:2:9:51:10:39:11:29:14:0:15:2:16:2888:3:65595:8:21:46:11847:4:1115|1:Michigun:2:703929:13:149:17:12312:6:3:9:22:10:15:11:12:14:0:15:2:16:34499:3:61161:8:16:46:14600:4:997|1:Cool Dash:2:1148292:13:149:17:7026:6:4:9:37:10:20:11:17:14:0:15:2:16:4825:3:52931:8:0:46:14630:4:641|1:Kaernk:2:1282100:13:149:17:11908:6:5:9:51:10:18:11:12:14:0:15:2:16:118843:3:51821:8:0:46:17073:4:533|1:DeathHogz:2:1396933:13:149:17:5250:6:6:9:57:10:37:11:12:14:0:15:2:16:104119:3:51791:8:2:46:11948:4:435|1:Franchet:2:9576358:13:149:17:9840:6:7:9:30:10:15:11:12:14:0:15:2:16:1999478:3:51504:8:0:46:18616:4:670|1:Leksitoo:2:933105:13:149:17:4125:6:8:9:29:10:5:11:12:14:0:15:2:16:205:3:50530:8:14:46:13852:4:666|1:Superchat:2:2945295:13:149:17:5150:6:9:9:98:10:12:11:17:14:0:15:0:16:1098021:3:45706:8:2:46:14101:4:1201|1:Darky84:2:8513170:13:149:17:5864:6:10:9:37:10:12:11:25:14:0:15:2:16:1244088:3:44313:8:0:46:7444:4:1031|1:IvanNyan:2:14999317:13:149:17:5693:6:11:9:35:10:11:11:23:14:1:15:2:16:5148877:3:43785:8:0:46:6:4:563|1:GK NK 98:2:4803050:13:147:17:6491:6:12:9:2:10:12:11:23:14:6:15:2:16:890741:3:43163:8:2:46:14155:4:586|1:BonnieABoss:2:18158058:13:149:17:5572:6:13:9:105:10:15:11:3:14:0:15:2:16:5810059:3:43099:8:0:46:4743:4:778|1:FixTop100:2:18119007:13:149:17:801:6:14:9:1:10:0:11:3:14:0:15:0:16:5316700:3:43099:8:0:46:3559:4:323|1:TheRealAir:2:9035779:13:149:17:1270:6:15:9:35:10:12:11:25:14:0:15:2:16:2382846:3:42096:8:0:46:12808:4:665|1:XShadowWizardX:2:10670782:13:149:17:6097:6:16:9:85:10:12:11:7:14:0:15:2:16:1919857:3:41209:8:6:46:14083:4:540|1:CleanTop100:2:6552455:13:149:17:7111:6:17:9:30:10:7:11:12:14:0:15:2:16:2835706:3:40810:8:0:46:13243:4:871|1:xSuwako:2:14287615:13:149:17:2778:6:18:9:96:10:37:11:12:14:0:15:2:16:3984642:3:40695:8:0:46:11827:4:878|1:Civitrex2:2:14674984:13:149:17:7418:6:19:9:37:10:12:11:13:14:0:15:2:16:4156730:3:40576:8:0:46:13981:4:922|1:AdrianDlaCruz:2:16219796:13:148:17:2689:6:20:9:103:10:12:11:40:14:0:15:2:16:4771465:3:40286:8:0:46:4489:4:982|\n</code></pre></p>"},{"location":"server/endpoints/get_level_comments/","title":"getGJComments21.php","text":"<p>Gets a level's comments.</p>"},{"location":"server/endpoints/get_level_comments/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_level_comments/#required-parameters","title":"Required Parameters","text":"<p>levelID - The ID of the account whose comments you're getting</p> <p>page - Which page of comments you want to see</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_level_comments/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>mode - Set to 0 for most recent, and 1 for most liked</p> <p>total - Current use is unknown, defaults to the amount of comments the user has, but leaving it as 0 works.</p>"},{"location":"server/endpoints/get_level_comments/#response","title":"Response","text":"<p>Returns a list of comment objects separated by a pipe <code>|</code>.</p>"},{"location":"server/endpoints/get_level_comments/#example","title":"Example","text":""},{"location":"server/endpoints/get_level_comments/#python","title":"Python","text":"<pre><code>import requests\n\n# This code returns the comments on VSC by Bo.\n\ndata = {\n    \"levelID\": 60805571,\n    \"page\": 0,\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJComments21.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>2~ODk4IHRvIGp1c3QgYmVhdCBpbiBwcmFjdGlzZSBtb2RlIGdnIQ==~3~133533914~4~0~7~0~10~0~9~2 minutes~6~31468976:1~depolo~9~41~10~25~11~10~14~1~15~0~16~13735168|2~bm8gY2xpcGVy~3~128127333~4~0~7~0~10~3~9~7 minutes~6~31468705:1~ghjking~9~35~10~15~11~5~14~3~15~2~16~13391416|2~d29yc3QgbGV2ZWwgaW4gdGhlIGdhbWU=~3~19792712~4~0~7~0~10~0~9~11 minutes~6~31468489:1~neondash223~9~44~10~3~11~15~14~1~15~0~16~7609353|2~SGFja2Vy~3~114829268~4~2~7~0~10~0~9~7 hours~6~31448450:1~ThomyTamato~9~35~10~16~11~12~14~4~15~0~16~13280260|2~Z2cgMSBhdHQgKEkgaGFja2VkIGFzIGEgam9rZSk=~3~57842991~4~-4~7~1~10~100~9~8 hours~6~31445587:1~redhotgamerrhg~9~11~10~11~11~5~14~0~15~0~16~8031689|2~aSBjYW50IA==~3~120037785~4~0~7~0~10~10~9~9 hours~6~31441402:1~spot1fy~9~17~10~40~11~41~14~6~15~0~16~11870350|2~cmlwIG1vYmlsZQ==~3~93559688~4~1~7~0~10~0~9~10 hours~6~31437014:1~RandomNameGMD~9~30~10~1~11~12~14~0~15~2~16~10079340|2~Z2cgRVogMiBhdHRlbXB0cyBvbiBtb2JpbGUgWEQ=~3~93957318~4~-4~7~1~10~100~9~10 hours~6~31435874:1~MixtureGD2~9~36~10~40~11~40~14~2~15~2~16~13427406|2~diBCbyB1c2VkIG5vc3Bpa2Ugc28gdGVjaG5pY2FsbHkgbm8=~3~119607081~4~-4~7~1~10~0~9~12 hours~6~31427765:1~DailyChatMoment~9~1~10~12~11~12~14~4~15~2~16~13696752|2~SSBhbSBCbyBJIHBhc3NlZCBpdCB3aXRoIG5vY2xpcCA6RA==~3~130487134~4~-5~7~1~10~100~9~13 hours~6~31421248:1~FernanDash488~9~22~10~9~11~11~14~1~15~0~16~13526460#5705:0:10\n</code></pre></p>"},{"location":"server/endpoints/get_level_leaderboard/","title":"getGJLevelScores211.php","text":"<p>Fetches the leaderboard for a level and submits your level stats to the server</p>"},{"location":"server/endpoints/get_level_leaderboard/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_level_leaderboard/#required-parameters","title":"Required Parameters","text":"<p>accountID - The user's account ID</p> <p>gjp - The user's GJP</p> <p>levelID - The ID of the level</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_level_leaderboard/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>percent - The percent the user has on the level. Will not update if left out, but still retrieves data</p> <p>type - 0 for Friends, 1 for Top, 2 for Week. Defaults to 0 if left out</p> <p>s1 - User's attempts + 8354</p> <p>s2 - User's clicks + 3991</p> <p>s3 - User's attempt time in seconds + 4085</p> <p>s4 - levelSeed</p> <ul> <li>it can be generated like this <pre><code>def generate_leaderboard_seed(\n    clicks: int, percentage: int, seconds: int, has_played: bool = True\n) -&gt; int:\n\n    return (\n        1482 * (has_played + 1)\n        + (clicks + 3991) * (percentage + 8354)\n        + ((seconds + 4085) ** 2) - 50028039\n    )\n</code></pre></li> </ul> <p>s5 - Random number -&gt; <code>(((GJGameLevel-&gt;0x1B8 ? 2000.0 : 0) + rand()) * 4.6566e-10) * 1999.0</code></p> <p>s6 - List of PB differences (For example from 0 to 50, then 69, it would be <code>50,19</code>) XOR'd with <code>41274</code> and Base64 encoded</p> <p>s7 - Randomly Generated 10 character string</p> <p>s8 - Attempt Count</p> <p>s9 - The amount of coins the user got + 5819</p> <p>s10 - Timely ID -&gt; for dailies and weeklies</p> <p>chk - See here</p>"},{"location":"server/endpoints/get_level_leaderboard/#response","title":"Response","text":"<p>Returns a list of Leaderboard Score objects separated by a pipe <code>|</code>.</p>"},{"location":"server/endpoints/get_level_leaderboard/#example","title":"Example","text":""},{"location":"server/endpoints/get_level_leaderboard/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"accountID\": 173831, # DevExit's account ID\n    \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n    \"levelID\": 46763581,\n    \"type\": 1, # Leaving this out would only show friends. This shows global.\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJLevelScores211.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1:Seturan:2:2136020:9:14:10:12:11:12:14:6:15:0:16:212114:3:100:6:1:13:0:42:1 year|1:blackmg:2:3061243:9:15:10:7:11:11:14:6:15:0:16:158221:3:100:6:2:13:0:42:1 year|1:Satouyazuki:2:29958053:9:30:10:36:11:40:14:4:15:2:16:7274510:3:100:6:3:13:0:42:10 months|1:CountlessPlayZ:2:17722428:9:142:10:0:11:3:14:0:15:0:16:5729971:3:100:6:4:13:0:42:10 months|1:Pushenkaa:2:55149712:9:54:10:12:11:12:14:0:15:0:16:8061680:3:100:6:5:13:0:42:9 months|1:Divine Halcyon:2:17801008:9:133:10:3:11:16:14:0:15:0:16:5241579:3:100:6:6:13:0:42:8 months|1:KrZyX:2:57816438:9:22:10:3:11:12:14:1:15:0:16:8139916:3:100:6:7:13:0:42:8 months|1:Mycrafted:2:13397466:9:1:10:18:11:17:14:1:15:2:16:3765907:3:100:6:8:13:0:42:7 months|1:Zagros:2:79997982:9:22:10:12:11:15:14:1:15:2:16:8761559:3:100:6:9:13:0:42:7 months|1:Combined:2:14251555:9:102:10:18:11:12:14:0:15:2:16:3966202:3:100:6:10:13:0:42:7 months|1:picklecheeks:2:92919855:9:1:10:0:11:3:14:0:15:0:16:9998925:3:100:6:11:13:0:42:7 months|1:TomsoNtm:2:63636760:9:127:10:41:11:12:14:0:15:2:16:8373971:3:100:6:12:13:0:42:7 months|1:DrJoe:2:7365331:9:16:10:12:11:22:14:5:15:2:16:1312609:3:100:6:13:13:0:42:5 months|1:Gizbro:2:11813815:9:1:10:12:11:18:14:0:15:0:16:1060624:3:100:6:14:13:0:42:4 months|1:BrianTheBurger:2:3620747:9:17:10:12:11:38:14:1:15:0:16:44691:3:100:6:15:13:0:42:4 months|1:Zerviot:2:9819319:9:33:10:11:11:16:14:2:15:2:16:2601920:3:100:6:16:13:0:42:4 months|1:pimentaXHott:2:128644176:9:7:10:38:11:12:14:6:15:2:16:13404910:3:100:6:17:13:0:42:4 months|1:zKrissx:2:113664824:9:35:10:28:11:12:14:2:15:0:16:11682645:3:100:6:18:13:0:42:4 months|1:Peshmerga469:2:125486463:9:1:10:2:11:0:14:6:15:0:16:13349950:3:100:6:19:13:0:42:4 months|1:Jaki16:2:115531267:9:29:10:12:11:12:14:0:15:2:16:11464409:3:100:6:20:13:0:42:4 months|1:ctrx:2:122127971:9:18:10:6:11:3:14:3:15:0:16:12040601:3:100:6:21:13:0:42:4 months|1:Evisceratorador:2:50035968:9:25:10:7:11:3:14:3:15:0:16:9979547:3:100:6:22:13:0:42:4 months|1:GrlWooD:2:40737104:9:37:10:18:11:12:14:0:15:2:16:7151181:3:100:6:23:13:0:42:4 months|1:kyle3573:2:95013164:9:37:10:18:11:12:14:0:15:2:16:10278563:3:100:6:24:13:0:42:4 months|1:LMortem:2:123651250:9:18:10:21:11:3:14:3:15:2:16:13343271:3:100:6:25:13:0:42:4 months|1:KrazyCatGD:2:40639113:9:30:10:38:11:12:14:0:15:0:16:7524406:3:100:6:26:13:0:42:4 months|1:maxb18:2:109095559:9:22:10:0:11:12:14:1:15:0:16:11452237:3:100:6:27:13:0:42:4 months|1:superflexer:2:127386958:9:17:10:35:11:3:14:6:15:0:16:13473400:3:100:6:28:13:0:42:3 months|1:rubenxxx07:2:127012502:9:22:10:17:11:4:14:1:15:2:16:13391828:3:100:6:29:13:0:42:3 months|1:krisgada113:2:125605548:9:18:10:12:11:21:14:3:15:0:16:13387875:3:100:6:30:13:0:42:3 months|1:Thenikayka:2:121798305:9:102:10:41:11:12:14:0:15:0:16:12043050:3:100:6:31:13:0:42:3 months|1:WETPU:2:44909722:9:105:10:19:11:11:14:0:15:2:16:8658204:3:100:6:32:13:0:42:3 months|1:SuRiV:2:128833015:9:1:10:0:11:3:14:0:15:0:16:13415320:3:100:6:33:13:0:42:3 months|1:Pablohh:2:4233618:9:1:10:22:11:17:14:4:15:2:16:114820:3:100:6:34:13:0:42:3 months|1:MythicMike:2:49196207:9:1:10:41:11:3:14:3:15:0:16:7533075:3:100:6:35:13:0:42:3 months|1:ItsJaven:2:49000279:9:127:10:17:11:12:14:0:15:0:16:10627614:3:100:6:36:13:0:42:3 months|1:CollyGVCro:2:127555730:9:35:10:3:11:7:14:1:15:2:16:13417874:3:100:6:37:13:0:42:3 months|1:Dragolore:2:92560929:9:9:10:12:11:41:14:5:15:2:16:9989548:3:100:6:38:13:0:42:3 months|1:Hackerochek:2:98744052:9:101:10:19:11:25:14:0:15:2:16:13406184:3:100:6:39:13:0:42:3 months|1:1BigBoy13:2:99823951:9:14:10:3:11:6:14:6:15:0:16:10697584:3:100:6:40:13:0:42:3 months|1:GDonut:2:3034179:9:37:10:12:11:12:14:0:15:0:16:629597:3:100:6:41:13:0:42:3 months|1:HornedReaper:2:45621167:9:1:10:1:11:3:14:6:15:2:16:7753968:3:100:6:42:13:0:42:3 months|1:FOOSHHD:2:9466573:9:11:10:12:11:12:14:2:15:0:16:212663:3:100:6:43:13:0:42:3 months|1:jean507:2:56713143:9:10:10:0:11:3:14:6:15:0:16:7778981:3:100:6:44:13:0:42:3 months|1:snipex6:2:120258337:9:132:10:7:11:3:14:0:15:0:16:13522521:3:100:6:45:13:0:42:3 months|1:Iwasterex1389:2:130707369:9:37:10:35:11:3:14:0:15:0:16:13526236:3:100:6:46:13:0:42:3 months|1:egani:2:53135481:9:103:10:12:11:40:14:0:15:0:16:8034130:3:100:6:47:13:0:42:3 months|1:Aspernamentum:2:56798034:9:141:10:18:11:18:14:0:15:0:16:7789864:3:100:6:48:13:0:42:3 months|1:Wazzuuup:2:49753377:9:16:10:5:11:0:14:3:15:2:16:7577923:3:100:6:49:13:0:42:3 months|1:Rukkus17:2:42725017:9:59:10:37:11:12:14:0:15:0:16:7114679:3:100:6:50:13:0:42:3 months|1:FeRayin:2:130749077:9:1:10:0:11:3:14:0:15:0:16:13529421:3:100:6:51:13:0:42:3 months|1:FixPlay111:2:112824850:9:24:10:16:11:12:14:5:15:0:16:11971704:3:100:6:52:13:0:42:3 months|1:warhawk222:2:112465448:9:30:10:12:11:8:14:0:15:2:16:11104204:3:100:6:53:13:0:42:3 months|1:FrankGDmasna:2:34714630:9:11:10:3:11:2:14:6:15:2:16:6890480:3:100:6:54:13:0:42:3 months|1:styledual:2:59936559:9:13:10:38:11:12:14:4:15:2:16:8384651:3:100:6:55:13:0:42:3 months|1:MINIGAMERWWE:2:125870001:9:46:10:10:11:17:14:0:15:2:16:13346515:3:100:6:56:13:0:42:3 months|1:rtiH3ntai:2:98300892:9:16:10:12:11:11:14:3:15:0:16:10530030:3:100:6:57:13:0:42:3 months|1:elmejorRaul:2:120698216:9:15:10:12:11:1:14:6:15:0:16:12025765:3:100:6:58:13:0:42:3 months|1:NimblE22:2:93401548:9:16:10:18:11:17:14:4:15:2:16:10087566:3:100:6:59:13:0:42:3 months|1:Tmn2:2:18112143:9:4:10:1:11:3:14:5:15:2:16:5358727:3:100:6:60:13:0:42:3 months|1:Ryamu:2:61533463:9:1:10:0:11:3:14:0:15:0:16:8227340:3:100:6:61:13:0:42:3 months|1:Techboylg:2:57485784:9:60:10:15:11:12:14:0:15:0:16:11365014:3:100:6:62:13:0:42:3 months|1:BadBunny98:2:109226915:9:37:10:29:11:10:14:0:15:0:16:10918428:3:100:6:63:13:0:42:3 months|1:shiriken:2:129512544:9:23:10:9:11:15:14:2:15:2:16:13556165:3:100:6:64:13:0:42:3 months|1:kkwaligochu:2:131041249:9:14:10:0:11:3:14:6:15:0:16:13553183:3:100:6:65:13:0:42:3 months|1:TherealShiin:2:90191520:9:11:10:4:11:9:14:1:15:2:16:9778657:3:100:6:66:13:0:42:3 months|1:narutouchiha:2:30329658:9:13:10:18:11:2:14:6:15:0:16:13283238:3:100:6:67:13:0:42:3 months|1:rmr34fg:2:49792485:9:18:10:9:11:12:14:3:15:0:16:7841492:3:100:6:68:13:0:42:3 months|1:mrdisco:2:86093424:9:98:10:19:11:12:14:0:15:2:16:9497710:3:100:6:69:13:0:42:3 months|1:MrSenseiiYT:2:130983810:9:32:10:15:11:15:14:0:15:2:16:13565107:3:100:6:70:13:0:42:3 months|1:Luqualizer:2:14172104:9:41:10:39:11:21:14:0:15:0:16:3931034:3:100:6:71:13:0:42:3 months|1:Dued1986:2:127878816:9:23:10:9:11:12:14:5:15:2:16:13519110:3:100:6:72:13:0:42:3 months|1:sergi0elPvP:2:29808202:9:105:10:35:11:33:14:0:15:2:16:6320298:3:100:6:73:13:0:42:3 months|1:ItzDanCat:2:123757805:9:1:10:0:11:3:14:0:15:0:16:12138114:3:100:6:74:13:0:42:3 months|1:SatchosClone:2:89470502:9:2:10:15:11:12:14:0:15:0:16:10548709:3:100:6:75:13:0:42:2 months|1:danik20071:2:131162677:9:10:10:12:11:3:14:1:15:0:16:13575030:3:100:6:76:13:0:42:2 months|1:plomeru:2:120061308:9:22:10:12:11:12:14:1:15:0:16:11872655:3:100:6:77:13:0:42:2 months|1:M0rgz:2:112118652:9:59:10:0:11:12:14:0:15:0:16:11746866:3:100:6:78:13:0:42:2 months|1:cumberitz:2:120861900:9:38:10:20:11:12:14:1:15:0:16:13442759:3:100:6:79:13:0:42:2 months|1:Smuke:2:130480401:9:37:10:10:11:14:14:0:15:2:16:13587512:3:100:6:80:13:0:42:2 months|1:Wispysebas:2:129215363:9:23:10:2:11:12:14:2:15:0:16:13435822:3:100:6:81:13:0:42:2 months|1:C0lten:2:111485945:9:60:10:18:11:10:14:0:15:2:16:10905990:3:100:6:82:13:0:42:2 months|1:FenixCreator:2:125576814:9:9:10:36:11:34:14:1:15:0:16:13563312:3:100:6:83:13:0:42:2 months|1:TheStarGrinders:2:116349280:9:11:10:18:11:37:14:6:15:2:16:11468785:3:100:6:84:13:0:42:2 months|1:kakaxa229:2:113059731:9:15:10:1:11:4:14:6:15:0:16:13605126:3:100:6:85:13:0:42:2 months|1:RogerFatCat:2:38649950:9:1:10:0:11:3:14:0:15:0:16:9269934:3:100:6:86:13:0:42:2 months|1:obmioss:2:131688201:9:1:10:0:11:3:14:0:15:0:16:13604368:3:100:6:87:13:0:42:2 months|1:xAndreas:2:85133702:9:95:10:12:11:12:14:0:15:0:16:13405576:3:100:6:88:13:0:42:2 months|1:KrmaLZ:2:98257045:9:111:10:21:11:20:14:0:15:2:16:13469192:3:100:6:89:13:0:42:2 months|1:SaYR3X:2:130305459:9:10:10:3:11:9:14:6:15:2:16:13497423:3:100:6:90:13:0:42:2 months|1:luuki:2:8634879:9:30:10:39:11:15:14:3:15:2:16:1317941:3:100:6:91:13:0:42:2 months|1:cryfrog:2:114047539:9:30:10:5:11:11:14:0:15:2:16:11495161:3:100:6:92:13:0:42:2 months|1:zNovita:2:76894251:9:11:10:37:11:12:14:1:15:2:16:8713603:3:100:6:93:13:0:42:2 months|1:D34dl0ck3rr:2:125712826:9:1:10:0:11:3:14:0:15:0:16:13353594:3:100:6:94:13:0:42:2 months|1:magma1212:2:123073720:9:98:10:5:11:12:14:0:15:0:16:12076700:3:100:6:95:13:0:42:2 months|1:juniorv:2:78654206:9:1:10:11:11:3:14:3:15:0:16:8621163:3:100:6:96:13:0:42:2 months|1:ItsTyBreaker:2:84027597:9:22:10:9:11:12:14:1:15:2:16:9231177:3:100:6:97:13:0:42:2 months|1:Rappi:2:112132006:9:17:10:0:11:15:14:3:15:2:16:11835171:3:100:6:98:13:0:42:2 months|1:ElianC9067:2:130221386:9:42:10:16:11:11:14:0:15:2:16:13492124:3:100:6:99:13:0:42:2 months|1:SkrilexHD:2:97487988:9:142:10:37:11:11:14:0:15:2:16:11551122:3:100:6:100:13:0:42:2 months|1:UltraOreStudio:2:128090420:9:10:10:16:11:12:14:6:15:2:16:13376586:3:100:6:101:13:0:42:2 months|1:Bgruner:2:94316385:9:11:10:3:11:21:14:1:15:0:16:9333714:3:100:6:102:13:0:42:2 months|1:poison822mighty:2:130005940:9:25:10:15:11:6:14:2:15:0:16:13622648:3:100:6:103:13:0:42:2 months|1:RedGmingYTB:2:51834359:9:1:10:0:11:3:14:0:15:0:16:7844616:3:100:6:104:13:0:42:2 months|1:ByCraving:2:48591084:9:37:10:18:11:10:14:0:15:2:16:7497367:3:100:6:105:13:0:42:2 months|1:lixisgoated:2:97820856:9:14:10:6:11:41:14:6:15:2:16:13407746:3:100:6:106:13:0:42:2 months|1:jamescutav2020:2:92052370:9:16:10:9:11:12:14:5:15:0:16:9926552:3:100:6:107:13:0:42:2 months|1:zentel:2:30952807:9:7:10:18:11:12:14:4:15:2:16:7537707:3:100:6:108:13:0:42:2 months|1:sebestyen008:2:47501772:9:29:10:15:11:9:14:3:15:2:16:7516082:3:100:6:109:13:0:42:2 months|1:Xanii:2:7500092:9:17:10:12:11:38:14:1:15:0:16:1176802:3:100:6:110:13:0:42:2 months|1:lucas99999:2:91757719:9:8:10:37:11:19:14:6:15:2:16:11001316:3:100:6:111:13:0:42:2 months|1:AlixirRaYt:2:130393638:9:1:10:15:11:12:14:4:15:0:16:13503484:3:100:6:112:13:0:42:2 months|1:yotantiy:2:91103881:9:1:10:0:11:3:14:0:15:0:16:9941330:3:100:6:113:13:0:42:2 months|1:Nutella4life:2:11144092:9:19:10:41:11:37:14:1:15:0:16:10133614:3:100:6:114:13:0:42:2 months|1:Hyperlink16yt:2:130929465:9:30:10:15:11:15:14:0:15:0:16:13547131:3:100:6:115:13:0:42:2 months|1:ItsApoLuXGD:2:129969813:9:6:10:12:11:15:14:6:15:2:16:13486303:3:100:6:116:13:0:42:2 months|1:thiccboiparker:2:12346000:9:122:10:7:11:3:14:0:15:2:16:3020444:3:100:6:117:13:0:42:2 months|1:Koviix:2:78932352:9:22:10:2:11:12:14:1:15:2:16:9964562:3:100:6:118:13:0:42:2 months|1:SebasBoyGD:2:120484291:9:23:10:3:11:12:14:0:15:0:16:12122137:3:100:6:119:13:0:42:2 months|1:eiruni:2:132114870:9:43:10:34:11:12:14:0:15:0:16:13634408:3:100:6:120:13:0:42:2 months|1:GodPatroN:2:130440938:9:14:10:14:11:11:14:6:15:2:16:13634078:3:100:6:121:13:0:42:2 months|1:BuddhaGD:2:115797308:9:30:10:29:11:9:14:0:15:0:16:11403814:3:100:6:122:13:0:42:2 months|1:lIGdJorgelI:2:122679599:9:7:10:0:11:34:14:6:15:0:16:13560734:3:100:6:123:13:0:42:2 months|1:LemonPlaysYT:2:120497330:9:11:10:3:11:7:14:4:15:2:16:12500964:3:100:6:124:13:0:42:2 months|1:ItzBhav1:2:121877441:9:15:10:35:11:12:14:5:15:0:16:12210348:3:100:6:125:13:0:42:2 months|1:xDyer:2:127514495:9:11:10:15:11:37:14:6:15:2:16:13345928:3:100:6:126:13:0:42:2 months|1:Fxte:2:129814886:9:1:10:0:11:3:14:3:15:0:16:13469182:3:100:6:127:13:0:42:2 months|1:sebitas0986:2:131367442:9:18:10:38:11:3:14:5:15:2:16:13611458:3:100:6:128:13:0:42:2 months|1:CarneMuerta:2:121773204:9:26:10:14:11:12:14:1:15:0:16:12022583:3:100:6:129:13:0:42:2 months|1:jeffy0717:2:19625570:9:12:10:12:11:12:14:1:15:2:16:10953908:3:100:6:130:13:0:42:2 months|1:rizingdeath:2:30886272:9:142:10:15:11:12:14:0:15:0:16:6658489:3:100:6:131:13:0:42:2 months|1:7iTLeR:2:86322280:9:133:10:6:11:1:14:0:15:2:16:10928135:3:100:6:132:13:0:42:2 months|1:KV082:2:14584852:9:35:10:15:11:15:14:0:15:2:16:4176234:3:100:6:133:13:0:42:2 months|1:rhysiswow19:2:94456301:9:1:10:0:11:3:14:0:15:0:16:13462191:3:100:6:134:13:0:42:2 months|1:OSCR3:2:129293398:9:107:10:18:11:40:14:0:15:0:16:13487631:3:100:6:135:13:0:42:2 months|1:Donikos:2:130815269:9:61:10:18:11:15:14:0:15:2:16:13581924:3:100:6:136:13:0:42:2 months|1:TedRez:2:130407961:9:14:10:0:11:3:14:6:15:0:16:13611066:3:100:6:137:13:0:42:1 month|1:seiry:2:126012308:9:103:10:5:11:12:14:0:15:0:16:13469153:3:100:6:138:13:0:42:1 month|1:ItsOscarNG:2:131498129:9:1:10:0:11:3:14:0:15:0:16:13608583:3:100:6:139:13:0:42:1 month|1:lPsycho:2:16017178:9:16:10:4:11:12:14:0:15:2:16:5183337:3:100:6:140:13:0:42:1 month|1:GMDSilver:2:85461773:9:29:10:13:11:0:14:0:15:0:16:13570912:3:100:6:141:13:0:42:1 month|1:TheRealMonstR:2:95316113:9:3:10:12:11:16:14:1:15:0:16:6225511:3:100:6:142:13:0:42:1 month|1:nFlood:2:122891538:9:31:10:10:11:15:14:1:15:2:16:12285731:3:100:6:143:13:0:42:1 month|1:KrXyt:2:132638708:9:2:10:12:11:12:14:6:15:2:16:13669040:3:100:6:144:13:0:42:1 month|1:ImToshy:2:82247740:9:31:10:39:11:12:14:4:15:2:16:9007156:3:100:6:145:13:0:42:1 month|1:DReid2805:2:6062796:9:39:10:21:11:34:14:1:15:2:16:4428512:3:100:6:146:13:0:42:1 month|1:verily:2:118640074:9:63:10:40:11:12:14:0:15:2:16:13545298:3:100:6:147:13:0:42:1 month|1:KelloRaido:2:61373394:9:136:10:11:11:9:14:0:15:0:16:10394356:3:100:6:148:13:0:42:1 month|1:GeoTerrion:2:79078575:9:4:10:9:11:12:14:6:15:2:16:8667825:3:100:6:149:13:0:42:1 month|1:jakeisskinny:2:130690463:9:18:10:12:11:15:14:1:15:0:16:13527633:3:100:6:150:13:0:42:1 month|1:Galaxicharge:2:128660159:9:16:10:4:11:12:14:6:15:0:16:13574514:3:100:6:151:13:0:42:1 month|1:pyrodex:2:123011301:9:11:10:11:11:13:14:6:15:0:16:13672205:3:100:6:152:13:0:42:1 month|1:TADEOELVRGAS:2:20793348:9:11:10:12:11:15:14:1:15:2:16:6015922:3:100:6:153:13:0:42:1 month|1:Sh4rk3d:2:54808358:9:12:10:12:11:3:14:6:15:0:16:7906997:3:100:6:154:13:0:42:1 month|1:DanSouls:2:19985318:9:22:10:25:11:12:14:1:15:2:16:6267908:3:100:6:155:13:0:42:1 month|1:cauegmd:2:62808275:9:30:10:22:11:3:14:0:15:0:16:8321082:3:100:6:156:13:0:42:1 month|1:Specialbot:2:96197902:9:22:10:41:11:3:14:3:15:2:16:10946626:3:100:6:157:13:0:42:1 month|1:GMDdemons:2:95493569:9:1:10:3:11:12:14:6:15:2:16:10253400:3:100:6:158:13:0:42:1 month|1:edygamer:2:19800760:9:127:10:41:11:14:14:0:15:2:16:5736983:3:100:6:159:13:0:42:1 month|1:deadkov343:2:116125858:9:22:10:6:11:11:14:1:15:2:16:11442643:3:100:6:160:13:0:42:1 month|1:Zarzvinity:2:131274553:9:1:10:15:11:12:14:6:15:2:16:13683379:3:100:6:161:13:0:42:1 month|1:Volgar36:2:127934352:9:14:10:35:11:10:14:6:15:0:16:13494640:3:100:6:162:13:0:42:1 month|1:Gimbap:2:52064955:9:22:10:38:11:11:14:1:15:2:16:7762501:3:100:6:163:13:0:42:1 month|1:Misterxd560mn:2:131520917:9:1:10:0:11:3:14:1:15:0:16:13592687:3:100:6:164:13:0:42:1 month|1:bl4z3tor:2:113202206:9:30:10:5:11:3:14:0:15:2:16:11220741:3:100:6:165:13:0:42:1 month|1:BoldGuy:2:119974917:9:56:10:9:11:12:14:0:15:2:16:13283310:3:100:6:166:13:0:42:1 month|1:VirusDany:2:14483508:9:46:10:36:11:11:14:0:15:2:16:4106227:3:100:6:167:13:0:42:1 month|1:O20:2:62606564:9:47:10:15:11:37:14:0:15:2:16:8750708:3:100:6:168:13:0:42:1 month|1:MobileGawd:2:133126522:9:1:10:0:11:3:14:0:15:0:16:13699173:3:100:6:169:13:0:42:1 month|1:kotBcmetane:2:80024938:9:17:10:6:11:12:14:1:15:2:16:8764580:3:100:6:170:13:0:42:1 month|1:Skrippie:2:90136766:9:11:10:40:11:12:14:6:15:2:16:9774566:3:100:6:171:13:0:42:1 month|1:Redtrox:2:96608889:9:17:10:12:11:40:14:6:15:0:16:10422714:3:100:6:172:13:0:42:1 month|1:XMythicalPortX:2:119184362:9:1:10:0:11:3:14:0:15:0:16:11815548:3:100:6:173:13:0:42:1 month|1:XDswag:2:58031029:9:36:10:15:11:9:14:1:15:0:16:7950804:3:100:6:174:13:0:42:1 month|1:coltron09:2:115291424:9:14:10:9:11:17:14:6:15:2:16:13354255:3:100:6:175:13:0:42:1 month|1:TyeOneOfUs:2:132135955:9:82:10:18:11:9:14:0:15:0:16:13635794:3:100:6:176:13:0:42:1 month|1:HieronCST:2:133263221:9:22:10:3:11:12:14:2:15:2:16:13707347:3:100:6:177:13:0:42:1 month|1:behaindeslaugte:2:20876385:9:2:10:12:11:41:14:4:15:2:16:7337180:3:100:6:178:13:0:42:1 month|1:zDeian:2:131442666:9:7:10:12:11:9:14:5:15:0:16:13585791:3:100:6:179:13:0:42:1 month|1:ItsZandrox:2:131151273:9:10:10:6:11:3:14:6:15:0:16:13562030:3:100:6:180:13:0:42:1 month|1:TuqueDrummer:2:14819498:9:37:10:17:11:12:14:0:15:0:16:5062249:3:100:6:181:13:0:42:1 month|1:SkidiPapap:2:120960013:9:20:10:7:11:3:14:5:15:2:16:12312737:3:100:6:182:13:0:42:1 month|1:nobGD:2:131818489:9:23:10:19:11:12:14:0:15:0:16:13637926:3:100:6:183:13:0:42:1 month|1:shilt:2:127560850:9:127:10:29:11:12:14:0:15:0:16:13374732:3:100:6:184:13:0:42:1 month|1:Elwachuwachu:2:131717798:9:6:10:20:11:11:14:5:15:0:16:13636417:3:100:6:185:13:0:42:1 month|1:Veliana:2:124750716:9:11:10:12:11:12:14:6:15:2:16:12211204:3:100:6:186:13:0:42:1 month|1:lnoobifiy:2:84213769:9:1:10:13:11:3:14:1:15:2:16:9231077:3:100:6:187:13:0:42:1 month|1:GDRafBG:2:114217216:9:60:10:11:11:12:14:0:15:2:16:11269688:3:100:6:188:13:0:42:1 month|1:moonka:2:121556285:9:14:10:12:11:6:14:6:15:0:16:13382225:3:100:6:189:13:0:42:1 month|1:ImShinyXD:2:47368585:9:9:10:11:11:15:14:6:15:0:16:7422987:3:100:6:190:13:0:42:1 month|1:Franco2010:2:82014282:9:55:10:4:11:12:14:0:15:2:16:8993430:3:100:6:191:13:0:42:1 month|1:tumama125:2:114284674:9:42:10:37:11:9:14:2:15:2:16:11233249:3:100:6:192:13:0:42:1 month|1:SweetDust:2:129093779:9:5:10:18:11:19:14:6:15:2:16:13515967:3:100:6:193:13:0:42:1 month|1:ToutG:2:83515630:9:118:10:35:11:3:14:0:15:0:16:13630033:3:100:6:194:13:0:42:1 month|1:Potattobeaby:2:130437001:9:22:10:40:11:12:14:1:15:0:16:13611299:3:100:6:195:13:0:42:1 month|1:aaron5247:2:120076358:9:35:10:17:11:12:14:0:15:0:16:13720053:3:100:6:196:13:0:42:1 month|1:S3BATR0NIC:2:34205227:9:10:10:32:11:12:14:2:15:0:16:6748798:3:100:6:197:13:0:42:1 month|1:RivertyGD:2:118760422:9:1:10:0:11:3:14:0:15:0:16:13563660:3:100:6:198:13:0:42:1 month|1:Visionari:2:5606104:9:50:10:3:11:15:14:0:15:2:16:612450:3:100:6:199:13:0:42:1 month|1:GDCoolguy119:2:118486611:9:10:10:7:11:3:14:1:15:2:16:13364768:3:100:6:200:13:0:42:1 month\n</code></pre></p>"},{"location":"server/endpoints/get_levels/","title":"getGJLevels21.php","text":"<p>Gets a list of levels.</p>"},{"location":"server/endpoints/get_levels/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_levels/#required-parameters","title":"Required Parameters","text":"<p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_levels/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>accountID - The account ID of the user who is searching the levels. Only sent when type is set to 8, 13 or when type is set to 5 and you are loading your own levels.</p> <p>gjp - The GJP of the user who is searching the levels. Only sent when type is set to 5, 8 or 13.</p> <p>gauntlet - The ID of the gauntlet that's currently being loaded.</p> <p>type - Controls the fetch priority. By default it's most liked.</p> type desc 0 most liked 1 most downloaded 2 default for the search button (also most liked) 3 trending 4 recent 5 user's levels (uses the player ID, not the account ID, in the <code>str</code> parameter to get which user) 6 featured 7 magic 8 moderator sent levels 10 list of specific levels (this uses the <code>str</code> parameter as a comma separated list of level IDs), used in map packs 11 recently awarded 12 levels from people you follow 13 friends 15 most liked in GD World 16 hall of fame 17 most featured in GD World 18 unknown because it's always empty (maybe mod or robtop only?) 21 Daily History 22 Weekly History <p>str - Search string, required when <code>type</code> is 5 or 10.</p> <p>diff - Difficulty filter. A list of integers denoting the different difficulties. Negative difficulties are ignored when any positive one is specified.</p> diff desc -1 N/A (doesn't work, always returns no results) -2 Demons (use the <code>demonFilter</code> parameter to denote which demon type to search) (exclusive from -3) -3 Auto (exclusive from -2) 1 Easy 2 Normal 3 Hard 4 Harder 5 Insane 6\u201310 Easy to Extreme Demon, respectively <p>len - Length Filter.</p> len desc 0 Tiny 1 Short 2 Medium 3 Long 4 XL <p>page - Which page of levels you want to see.</p> <p>total - Current use is unknown, defaults to the amount of levels available, up to 9999. Most likely it's a caching system for avoiding excessive execution of expensive COUNT database queries.</p> <p>count - Size of a single page of levels. Capped at 10.</p> <p>uncompleted - Uncompleted filter. 0 for off, 1 for on.</p> <p>onlyCompleted - Completed filter. 0 for off, 1 for on.</p> <p>featured - Featured filter. 0 for off, 1 for on.</p> <p>original - Original filter. 0 for off, 1 for on.</p> <p>twoPlayer - Two Player Mode filter. 0 for off, 1 for on.</p> <p>coins - Coins filter. 0 for no coins, 1 for any amount of coins.</p> <p>epic - Epic filter. 0 for off, 1 for on.</p> <p>noStar - Unrated filter. Not sent when off, 1 for on.</p> <p>star - Rated filter. Not sent when off, 1 for on.</p> <p>song - Official song filter. Not sent when off.</p> <p>customSong - Enable newgrounds song filter, song parameter will be songID. Not sent when off.</p> <p>completedLevels - A comma separated list of completed levels enclosed in brackets. Only sent if the uncompleted or completed filter is enabled.</p> <p>followed - Required if <code>type</code> is 12. A comma separated list of player IDs, not account IDs of the people you follow.</p> <p>demonFilter - Denotes which difficulty of demon to search for if <code>diff</code> is -2. If left out it will search for all demons, otherwise it's 1-5 for Easy to Extreme, respectively.</p>"},{"location":"server/endpoints/get_levels/#response","title":"Response","text":"<p>Returns a list of level objects separated by pipes <code>|</code> and sorted by the parameters, a list of objects denoting the authors sorted by increasing player ID (format is <code>PLAYERID:USERNAME:ACCOUNTID</code>) which are also separated by pipes <code>|</code>, and a list of song objects sorted by increasing song ID and separated by <code>~:~</code>. The indexers for each are <code>:</code>, <code>:</code> and <code>~|~</code> respectively.</p>"},{"location":"server/endpoints/get_levels/#example","title":"Example","text":""},{"location":"server/endpoints/get_levels/#python","title":"Python","text":"<pre><code>import requests\n\n# This code gets the most recent epic-rated Hard Demons\n\ndata = {\n    \"secret\": \"Wmfd2893gb7\",\n    \"type\": 4,\n    \"diff\": -2,\n    \"epic\": 1,\n    \"demonFilter\": 3\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJLevels21.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1:62282482:2:DEAD BEAT:5:1:6:28770186:8:10:9:30:10:94536:12:0:13:21:14:2990:17:1:43:0:25::18:10:19:24971:42:1:45:56373:3:YWZ0ZXIgdGhyZWUgbW9udGhzIG9mIGhhcmQgd29yayBpIGZpbmFsbHkgcHJlc2VudCB0byB5b3UgdGhlIGxvbmcgYXdhaXRlZCBzZXF1ZWwgdG8gbXVyZGVyIG1lbG9keQ==:15:3:30:60376208:31:0:37:1:38:1:39:10:46:1:47:2:35:541786|1:62028241:2:Eternelle Vehemence:5:14:6:4761912:8:10:9:30:10:89174:12:0:13:21:14:5187:17:1:43:0:25::18:10:19:24968:42:1:45:65535:3:c3VmZmVyLCB1bnRpbCBldGVybml0eSBlbmRzLg==:15:4:30:0:31:0:37:3:38:1:39:10:46:1:47:2:35:896821|1:60927712:2:PERIHELION:5:1:6:9456326:8:10:9:30:10:8864:12:0:13:21:14:725:17:1:43:0:25::18:10:19:24970:42:1:45:65535:3:VG9vayBmb3JldmVyIHRvIG1ha2UsICBidXQgaXQgaXMgZmluYWxseSBoZXJlLiBSZWxsIC0gU21pbnggLSBHYWx6byAtIFdoaXRlaGVhZCAtIFNwdTduaXggLSBXaWsgLSBLbm90cyAtIEh5cGVyZmxhbWU=:15:3:30:51261866:31:0:37:0:38:1:39:10:46:1:47:2:35:790560|1:59502709:2:Supreme:5:4:6:2595697:8:10:9:30:10:48776:12:0:13:21:14:2471:17:1:43:0:25::18:10:19:24956:42:1:45:65535:3:aW5zZXJ0ICQzNTAgVVNEIHRvIHBsYXkgW0J5IENyZXBlcyAmIEVuWm9yZV0gZml4ZWQgYnVuY2ggb2YgYnVncyBhcm91bmQgOTAlICwgYW5kIGFkZGVkIFVMRE0gd2hlbiB5b3UgYWN0aXZhdGUgTERNICwgdXBkYXRlcyBjb21pbmcgc29vbg==:15:3:30:58794967:31:0:37:2:38:1:39:10:46:1:47:2:35:754856|1:59413155:2:HASH:5:1:6:1424041:8:10:9:30:10:28010:12:0:13:21:14:1576:17:1:43:0:25::18:10:19:24953:42:1:45:52312:3:YSBsZXZlbCB3aXRoIG1hbnkgY29sb3Vycy4=:15:3:30:52863418:31:0:37:0:38:0:39:10:46:1:47:2:35:216300|1:59352979:2:RANYER:5:5:6:9441630:8:10:9:30:10:93328:12:0:13:21:14:3681:17:1:43:0:25::18:10:19:24949:42:1:45:65535:3:YW1hemluZyBjb2xsYWJvcmF0aW9uIC4uIEkgaG9wZSB5b3UgbGlrZSBpdCAuLi4gd2l0aCBhIGxvdCBvZiBkZWRpY2F0aW9uIHdlIGJyaW5nIHlvdSByYW55ZXIgOikgZ29vZCBsdWNrIGFuZCBlbmpveSBpdCArOTAwMDAgT0JKIDowIExETT8gOyk=:15:3:30:59193188:31:0:37:1:38:1:39:10:46:1:47:2:35:658059|1:59315849:2:Double Dash:5:5:6:3624826:8:10:9:30:10:102653:12:0:13:21:14:11269:17:1:43:0:25::18:10:19:24953:42:1:45:65535:3:IkR1YWwgZ2FtZW1vZGUgaXMgdGhlIGJlc3QgZ2FtZW1vZGUiIH4gSm9uYXRoYW5HRCB8IEEgY29sb3JmdWwgMiBtaW51dGVzIG9mIG9ubHkgZHVhbHMgKCsgcGxheWVyIGNvbG9ycykgfCBHTCwgSEYsIGRvbid0IGRpZSBhdCA5OSUgOCk=:15:4:30:0:31:0:37:0:38:0:39:10:46:1:47:2:35:872453|1:59309294:2:Archaic:5:6:6:13003836:8:10:9:30:10:33708:12:0:13:21:14:1700:17:1:43:0:25::18:10:19:24949:42:1:45:65535:3:QW1hemluZyBjb2xsYWIgd2l0aCBWbGFpbmUgYW5kIE1yY3lsZGUsIGdhbWVwbGF5IGJ5IEVuem9yZSBhbmQgR2FycC4gRW5qb3l5ISE=:15:3:30:59045071:31:0:37:0:38:0:39:10:46:1:47:2:35:791611|1:58994346:2:Agios:5:2:6:18682953:8:10:9:30:10:67315:12:0:13:21:14:2226:17:1:43:0:25::18:10:19:24940:42:1:45:65535:3:N3RoIE5veHR1cm5hbCBUZWFtIE1DLCBXZSB1c2UgYSBsaXR0bGUgbmljZSB0aGVtZSBpbiB0aGlzISEgIEhvcGUgeW91IGVuam95IG91ciB3b3JrLi4gIFtWZXJpZmllZCBieSBTaXJaYWlzc10=:15:3:30:58581054:31:0:37:0:38:0:39:10:46:1:47:2:35:728233|1:58932971:2:Divine Descendance:5:5:6:11876184:8:10:9:30:10:11239:12:0:13:21:14:882:17:1:43:0:25::18:10:19:24960:42:1:45:65535:3:VmVyaWZpZWQgYnkgaVRodW5kZXIxMiwgdmlkZW8gb24gaGlzIFlUIGNoYW5uZWw=:15:3:30:0:31:0:37:3:38:1:39:10:46:1:47:2:35:713127#1424041:flash:127035|2595697:CrispyCrepes:117663|3624826:Zoroa:44967|4761912:Vrymer:411964|9441630:CatronixGD:1462499|9456326:Galzo:1463681|11876184:TroxxP1:2638799|13003836:SirZaiss:3749813|18682953:TeamNoX:5594928|28770186:swwft:6434750#1~|~216300~|~2~|~Necromancy (drum n bass)~|~3~|~772~|~4~|~zirconmusic~|~5~|~6.15~|~6~|~~|~10~|~http%3A%2F%2Faudio.ngfiles.com%2F216000%2F216300_04___Necromancy.mp3~|~7~|~~|~8~|~1~:~1~|~541786~|~2~|~NK - Fairydust~|~3~|~1895~|~4~|~Rukkus~|~5~|~7.37~|~6~|~~|~10~|~http%3A%2F%2Faudio.ngfiles.com%2F541000%2F541786_NK---Fairydust.mp3~|~7~|~~|~8~|~1~:~1~|~658059~|~2~|~Pursuit~|~3~|~2787~|~4~|~BoomKitty~|~5~|~7.28~|~6~|~~|~10~|~http%3A%2F%2Faudio.ngfiles.com%2F658000%2F658059_Pursuit.mp3~|~7~|~UCwHQ93ecuoQne93sgY-x8Nw~|~8~|~1~:~1~|~713127~|~2~|~Synergetic Enigma~|~3~|~1861~|~4~|~DanJohansen~|~5~|~10.21~|~6~|~~|~10~|~http%3A%2F%2Faudio.ngfiles.com%2F713000%2F713127_Synergetic-Enigma.mp3~|~7~|~~|~8~|~1~:~1~|~728233~|~2~|~FWLR - Badass Bae~|~3~|~50638~|~4~|~FWLRmusic~|~5~|~7.75~|~6~|~~|~10~|~https%3A%2F%2Faudio.ngfiles.com%2F728000%2F728233_FWLR---Badass-Bae.mp3%3Ff1486917017~|~7~|~~|~8~|~1~:~1~|~754856~|~2~|~[Complextro] Viscerality - Upgrade~|~3~|~48232~|~4~|~VisceralSounds~|~5~|~11.22~|~6~|~~|~10~|~http%3A%2F%2Faudio.ngfiles.com%2F754000%2F754856_Complextro-Viscerality---U.mp3~|~7~|~~|~8~|~1~:~1~|~790560~|~2~|~Forgathering Firefly~|~3~|~47526~|~4~|~Codly~|~5~|~12.79~|~6~|~~|~10~|~https%3A%2F%2Faudio.ngfiles.com%2F790000%2F790560_Forgathering-Firefly.mp3%3Ff1518710297~|~7~|~~|~8~|~1~:~1~|~791611~|~2~|~Viscerality - Bliss [Intervention EP]~|~3~|~48232~|~4~|~VisceralSounds~|~5~|~10.38~|~6~|~~|~10~|~https%3A%2F%2Faudio.ngfiles.com%2F791000%2F791611_Viscerality---Bliss-Interv.mp3%3Ff1519159342~|~7~|~~|~8~|~1~:~1~|~872453~|~2~|~Shining Sprinter~|~3~|~1068~|~4~|~megawolf77~|~5~|~3.51~|~6~|~~|~10~|~https%3A%2F%2Faudio.ngfiles.com%2F872000%2F872453_Shining-Sprinter.mp3%3Ff1562814299~|~7~|~~|~8~|~1~:~1~|~896821~|~2~|~Panda Eyes - Anybody Else~|~3~|~45754~|~4~|~PandaEyesOfficial~|~5~|~13.92~|~6~|~~|~10~|~https%3A%2F%2Faudio.ngfiles.com%2F896000%2F896821_Panda-Eyes---Anybody-Else.mp3%3Ff1575713545~|~7~|~~|~8~|~1#91:0:10#2a84bec46c4d1304c17b4c73252faf92be4dac24\n</code></pre></p>"},{"location":"server/endpoints/get_map_packs/","title":"getGJMapPacks21.php","text":"<p>Gets the map packs.</p>"},{"location":"server/endpoints/get_map_packs/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_map_packs/#required-parameters","title":"Required Parameters","text":"<p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_map_packs/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>page - Denotes which page of map packs you want to retrieve, starting with 0</p>"},{"location":"server/endpoints/get_map_packs/#response","title":"Response","text":"<p>A list of map pack objects, separated by a pipe <code>|</code>.</p>"},{"location":"server/endpoints/get_map_packs/#example","title":"Example","text":""},{"location":"server/endpoints/get_map_packs/#python","title":"Python","text":"<pre><code>import requests\n\n# This code gets the 5th page of map packs.\n\ndata = {\n    \"secret\": \"Wmfd2893gb7\",\n    \"page\": 4\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJMapPacks21.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1:59:2:Cyclone Pack:3:1566116,946020,1100161:4:8:5:1:6:5:7:255,75,255:8:255,75,255|1:60:2:Colossus Pack:3:1350389,1215630,1724579:4:8:5:1:6:5:7:100,255,175:8:100,255,175|1:61:2:Diamond Pack:3:1267316,1670283,1205277:4:8:5:1:6:5:7:255,255,255:8:255,255,255|1:11:2:Chaos Pack:3:329929,188909,340602:4:9:5:1:6:5:7:255,125,0:8:255,125,0|1:44:2:Magma Pack:3:882417,884256,551979:4:9:5:1:6:5:7:255,100,50:8:255,100,50|1:62:2:Paradox Pack:3:1447246,1132530,1683722:4:9:5:1:6:5:7:50,255,75:8:50,255,75|1:63:2:Funky Pack:3:1728550,1799065,1311773:4:9:5:1:6:5:7:50,175,255:8:50,175,255|1:19:2:Remix Pack 4:3:341613,358750,369294:4:10:5:2:6:6:7:255,255,0:8:255,255,0|1:20:2:Demon Pack 1:3:70059,10109,135561:4:10:5:2:6:6:7:255,0,125:8:255,0,125|1:21:2:Demon Pack 2:3:57730,308891,102765:4:10:5:2:6:6:7:255,0,0:8:255,0,0#65:40:10#79c437d2cf75d2edf36a5094e0cc650c54440ba3\n</code></pre></p>"},{"location":"server/endpoints/get_messages/","title":"getGJMessages20.php","text":"<p>Gets a user's DMs.</p>"},{"location":"server/endpoints/get_messages/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_messages/#required-parameters","title":"Required Parameters","text":"<p>accountID - The user's account ID</p> <p>gjp - The user's GJP</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_messages/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>page - Which page of messages you want, starting at 0. Defaults to the first if left out.</p> <p>total - Current use is unknown, defaults to the amount of message the user has, but leaving it as 0 works.</p> <p>getSent - 0 for the messages the user has received, 1 for the messages they sent. If left out defaults to 0</p>"},{"location":"server/endpoints/get_messages/#response","title":"Response","text":"<p>A list of message objects separated by a pipe <code>|</code>.</p>"},{"location":"server/endpoints/get_messages/#example","title":"Example","text":""},{"location":"server/endpoints/get_messages/#python","title":"Python","text":"<pre><code>import requests\n\n# This code gets all the messages DevExit has received\n\ndata = {\n    \"accountID\": 173831, # DevExit's account ID\n    \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJMessages20.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>6:PasswordFinders:3:17787971:2:5317656:1:52029708:4:Z2FnZw==:8:1:9:0:7:8 minutes|6:denisukrrus:3:111481197:2:11283964:1:50272016:4:UmU6IHdoeQ==:8:1:9:0:7:1 month|6:denisukrrus:3:111481197:2:11283964:1:50246431:4:UmU6IHdoeQ==:8:1:9:0:7:2 months|6:denisukrrus:3:111481197:2:11283964:1:50164382:4:d2h5:8:1:9:0:7:2 months|6:denisukrrus:3:111481197:2:11283964:1:50080479:4:UmU6IGhlcmUgc29tZSB0ZXh0:8:1:9:0:7:2 months|6:denisukrrus:3:111481197:2:11283964:1:49776472:4:aGVyZSBzb21lIHRleHQ=:8:1:9:0:7:2 months|6:denisukrrus:3:111481197:2:11283964:1:49374506:4:c29tZSB0ZXh0:8:1:9:0:7:3 months|6:GDBotAI:3:118270198:2:11676872:1:48319722:4:UmU6IHRlc3Q=:8:1:9:0:7:4 months|6:GDBotAI:3:118270198:2:11676872:1:48319704:4:UmU6IHc=:8:1:9:0:7:4 months|6:GDBotAI:3:118270198:2:11676872:1:48319544:4:UmU6IGRqZGpqZWpldWR1cg==:8:1:9:0:7:4 months|6:poopybobby:3:14711367:2:4884369:1:47666534:4:bG1hbw==:8:1:9:0:7:6 months|6:poopybobby:3:14711367:2:4884369:1:40030444:4:UmU6IFBsZWFzZSBJIGFtIGJpZyBmYW4=:8:1:9:0:7:1 year|6:mbed:3:7381956:2:1403996:1:37193331:4:ZWF0IG1l:8:1:9:0:7:1 year|6:Thatdograscal:3:5785477:2:438738:1:36479601:4:ZQ==:8:1:9:0:7:2 years|6:Destrom:3:53436248:2:7943837:1:33937410:4:SGV5:8:1:9:0:7:2 years|6:Jmoney2638:3:43797799:2:7170197:1:33310194:4:VHJhZGU=:8:1:9:0:7:2 years|6:xxgaruxx:3:42742570:2:7101156:1:31781647:4:aGVsbG8=:8:1:9:0:7:2 years|6:Thekilou13:3:4123328:2:2261538:1:31729107:4:UmU6IEkgbmVlZCBoZWxwLg==:8:1:9:0:7:2 years|6:Thekilou13:3:4123328:2:2261538:1:31718964:4:SSBuZWVkIGhlbHAu:8:1:9:0:7:2 years|6:SpuffyGD:3:5224502:2:1562647:1:31667629:4:cmVzcG9uZA==:8:1:9:0:7:2 years|6:ItsAdvyStlyes:3:13149198:2:3432452:1:31241029:4:SGV5:8:1:9:0:7:2 years|6:kittenspit:3:8254313:2:5249664:1:30287396:4:UmU6IGJhbm5lZCA=:8:1:9:0:7:2 years|6:Krysolite:3:42833795:2:7400547:1:28621608:4:SG9sYS4uLi4uLi4gPSk=:8:1:9:0:7:2 years|6:deadk3v:3:44065476:2:7249929:1:28599619:4:bXkgZnJpZW5k:8:1:9:0:7:2 years|6:BramYT:3:5806701:2:450273:1:27957196:4:TmVjcm9wb2xpWA==:8:1:9:0:7:2 years|6:WhiteRecycling:3:10200743:2:1623259:1:26307526:4:UmU6IExvdyBEZXRhaWwgTW9kZSBHbGl0Y2g_:8:1:9:0:7:3 years|6:AnonIIExt:3:1869127:2:885411:1:25162374:4:UmU6IEknbSBjb25mdXNlZC4uLg==:8:1:9:0:7:3 years|6:Rahmun1122:3:42600801:2:7164807:1:25010114:4:b21mZw==:8:1:9:0:7:3 years|6:Rahmun1122:3:42600801:2:7164807:1:25000287:4:UmU6IExpa2UgQm90:8:1:9:0:7:3 years|6:Rahmun1122:3:42600801:2:7164807:1:25000254:4:UmU6IExpa2UgQm90:8:1:9:0:7:3 years|6:TruKaveKiller:3:11066105:2:2152020:1:23254724:4:UmU6IEhlIGRpZG4ndCBoYWNr:8:1:9:0:7:3 years|6:CreatorBluey:3:6235047:2:3611307:1:21180833:4:UmU6IHd1dA==:8:1:9:0:7:3 years|6:CreatorBluey:3:6235047:2:3611307:1:21144322:4:UmU6IHd1dA==:8:1:9:0:7:3 years|6:GB RubRub Lover:3:2422340:2:2320:1:19707464:4:VGhlIGxldmVsIFVkZSBtYWRl:8:1:9:0:7:3 years|6:Infernos666:3:19144134:2:5570820:1:19035973:4:ag==:8:1:9:0:7:3 years|6:gravefruit:3:20099347:2:5827112:1:18622677:4:UmU6IEZ1Y2tpbmcgSGFja2Vy:8:1:9:0:7:3 years|6:mannewil:3:7866980:2:1088921:1:18433123:4:Z2F5:8:1:9:0:7:3 years|6:ICN:3:30727064:2:6370227:1:17198774:4:aGk=:8:1:9:0:7:3 years|6:NytromityGames:3:18307996:2:5742004:1:16667453:4:UmU6IEZpbm5nZXJiYW5nIGJldGE=:8:1:9:0:7:3 years|6:Acidscarecrow:3:18696064:2:5463621:1:16473096:4:UmU6IGhhY2tlcg==:8:1:9:0:7:3 years|6:NytromityGames:3:18307996:2:5742004:1:16159044:4:UmU6IEZpbm5nZXJiYW5nIGJldGE=:8:1:9:0:7:3 years|6:Acidscarecrow:3:18696064:2:5463621:1:16033619:4:aGFja2Vy:8:1:9:0:7:3 years|6:anisk:3:3996991:2:90613:1:15924087:4:UmU6IFdoeS4uLg==:8:1:9:0:7:3 years|6:TadokiariGD:3:12275930:2:2953169:1:14435552:4:UmU6IEdyYWNpYXM=:8:1:9:0:7:3 years|6:GThom:3:18259928:2:5961642:1:14277244:4:UmU6IERvbid0:8:1:9:0:7:3 years|6:TadokiariGD:3:12275930:2:2953169:1:13447638:4:QW1pZ29z:8:1:9:0:7:3 years|6:TadokiariGD:3:12275930:2:2953169:1:13233338:4:bWllcmRhIGRlIG5pdmVs:8:1:9:0:7:3 years|6:kittenspit:3:8254313:2:5249664:1:13228700:4:cm9idHJvbGwuLi4=:8:1:9:0:7:3 years|6:kittenspit:3:8254313:2:5249664:1:13203838:4:YmFubmVkIA==:8:1:9:0:7:3 years|6:StarFeGD:3:9790502:2:1537139:1:13105832:4:Yg==:8:1:9:0:7:3 years#74:0:50\n</code></pre></p>"},{"location":"server/endpoints/get_quests/","title":"getGJChallenges.php","text":"<p>Gets a user's quests.</p>"},{"location":"server/endpoints/get_quests/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_quests/#required-parameters","title":"Required Parameters","text":"<p>udid - A unique identifier for the user's device, can be replaced with anything</p> <p>secret - Wmfd2893gb7</p> <p>chk - 5 random chars appended to the beginning of a random number XOR'd and base64 encoded</p>"},{"location":"server/endpoints/get_quests/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 20</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>accountID - Account ID of the user</p> <p>gjp - The user's GJP</p> <p>uuid - Seemingly a random number also used for identifying someone</p> <p>world - Effectively <code>gdw</code></p>"},{"location":"server/endpoints/get_quests/#response","title":"Response","text":"<p>A list of attributes of the quests, separated by colons <code>:</code> as follows: - A random string of 5 characters - User's player ID - The number used for the <code>chk</code> - <code>udid</code> - User's account ID - Seconds left until quests are replenished - First quest's attributes in a comma separated list     - Maybe the amount of quests completed?     - The type of item needed: 1 is orbs, 2 is coins, and 3 is stars     - The amount of the item needed     - How many diamonds the quest gives     - The name of the quest - Second quest's attributes in a comma separated list - Third quest's attributes in a comma separated list</p> <p>This list is then XOR'd and URL-Safe Base64 encoded. Then it is separated with its hash by a pipe <code>|</code>. It also has a random string of 5 characters appended to the front.</p>"},{"location":"server/endpoints/get_quests/#example","title":"Example","text":""},{"location":"server/endpoints/get_quests/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"udid\": \"I can put BS here\",\n    \"secret\": \"Wmfd2893gb7\",\n    \"chk\": \"funnyBwAMBgc\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJChallenges.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>uFpntVWhadWMLCAsADwgLCwwCCw8BAAUBA3EUVFBXGERCRRl6ZxdZXEpRDQEDAAYHAgMJGAUdCxQBG3JWUVoXd1BWUFJDAwkYBB0ICBgGARVrQFZDGXtbW11cW0BYQwMJGAYdCAgEBx0IDRh4Q1sYeVZCTV1G|00bb89e2d55fc22fb9b60b9f41f1d6e5663b3036\n</code></pre></p>"},{"location":"server/endpoints/get_song/","title":"getGJSongInfo.php","text":"<p>Gets info about a newgrounds song.</p>"},{"location":"server/endpoints/get_song/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_song/#required-parameters","title":"Required Parameters","text":"<p>songID - The newgrounds ID of the song you want information about</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_song/#optional-parameters","title":"Optional Parameters","text":"<p>N/A</p>"},{"location":"server/endpoints/get_song/#response","title":"Response","text":"<p>A song object with <code>~|~</code> as the delimiter</p>"},{"location":"server/endpoints/get_song/#example","title":"Example","text":""},{"location":"server/endpoints/get_song/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"secret\": \"Wmfd2893gb7\",\n    \"songID\": 803223\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJSongInfo.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1~|~803223~|~2~|~Xtrullor - Arcana~|~3~|~2159~|~4~|~Xtrullor~|~5~|~8.81~|~6~|~~|~10~|~https%3A%2F%2Faudio.ngfiles.com%2F803000%2F803223_Xtrullor---Arcana.mp3%3Ff1524940372~|~7~|~UCejLri1RVC7kj8ZVNX2a53g\n</code></pre></p>"},{"location":"server/endpoints/get_timely/","title":"getGJDailyLevel.php","text":"<p>Gets which daily level we're on and gets how much time is left.</p>"},{"location":"server/endpoints/get_timely/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_timely/#required-parameters","title":"Required Parameters","text":"<p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_timely/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>accountID - The user's account ID</p> <p>gjp - The user's GJP</p> <p>weekly - 0 for daily, 1 for weekly. Defaults to 0 if not sent</p>"},{"location":"server/endpoints/get_timely/#response","title":"Response","text":"<p>Returns the index of the current daily level and the time left in seconds, separated by a pipe <code>|</code>.</p>"},{"location":"server/endpoints/get_timely/#example","title":"Example","text":""},{"location":"server/endpoints/get_timely/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"weekly\": 1,\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJDailyLevel.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>100146|121576\n</code></pre></p>"},{"location":"server/endpoints/get_top_1000/","title":"getTop1000.php","text":"<p>getTop1000.php is one of the very few endpoints found on the servers that can be accessed via a GET request. The purpose of this endpoint is to gather the top 1000 star grinders to be used on the star leaderboards.</p>"},{"location":"server/endpoints/get_top_1000/#parameters","title":"Parameters","text":"<p>This endpoint does not require any parameters</p>"},{"location":"server/endpoints/get_top_1000/#example","title":"Example","text":"<pre><code>import requests\n\nreq = requests.get(\"http://boomlings.com/database/getTop1000.php\")\nprint(req.text)\n</code></pre>"},{"location":"server/endpoints/get_top_1000/#response-structure","title":"Response Structure","text":"<p>The structure for this endpoint is fairly simple - Using only a single key with 3 pieces of data assigned to the key with a <code>,</code> to seperate them. Each player is seperated by a newline <code>(&lt;br&gt;)</code> making it easy to parse.</p> <p>Below is a small snippet of the response</p> <pre><code>1: Smiffy777, 167677, 1413859\n2: Gormuck, 161467, 1775477\n3: Steekmen, 158704, 4310927\n4: Superchat, 157872, 1098021\n5: Cool, 157561, 4825\n</code></pre> <p>The Values for each segment are:</p> Structure <code>&lt;Leaderboard Position&gt;: &lt;Player UserName&gt;, &lt;Player Star Count&gt;, &lt;Player AccountID&gt;</code>"},{"location":"server/endpoints/get_top_artists/","title":"getGJTopArtists.php","text":"<p>Gets RobTop's handpicked top artists.</p>"},{"location":"server/endpoints/get_top_artists/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_top_artists/#required-parameters","title":"Required Parameters","text":"<p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_top_artists/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>page - Which page of the artists you want to see</p> <p>total - Current use is unknown, defaults to the amount of artists there are, but leaving it as 0 works.</p>"},{"location":"server/endpoints/get_top_artists/#response","title":"Response","text":"<p>A list of song objects with only the required information, the username and the youtube link if available, delimited by a pipe <code>|</code>.</p>"},{"location":"server/endpoints/get_top_artists/#example","title":"Example","text":""},{"location":"server/endpoints/get_top_artists/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"secret\": \"Wmfd2893gb7\",\n    \"page\": 1\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJTopArtists.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>4:Dimrain47|4:MadhouseDUDE|4:paperskies|4:CloudierMusic|4:Stratales|4:Lockyn|4:DanJohansen|4:BurgeraX|4:ParagonX9|4:Kolkian|4:LemKuuja|4:meganeko:7:UCP3M2myndqXuAEKKnqm_7SQ|4:teminiteofficial:7:UCc_bv_5nmxy2xnPNg9kP3Rg|4:Sharks:7:UCQJuQY3hF4YCHlAR42A5trg|4:F-777|4:DrayxMusic:7:UCSn0s6RSeePeJOiUi6Vdj6g|4:ForeverBound|4:DJ-Zyzyx|4:canonblade|4:Xtrullor:7:UCejLri1RVC7kj8ZVNX2a53g#73:20:20\n</code></pre></p>"},{"location":"server/endpoints/get_user/","title":"getGJUserInfo20.php","text":"<p>Gets info about a user</p>"},{"location":"server/endpoints/get_user/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_user/#required-parameters","title":"Required Parameters","text":"<p>targetAccountID - The account ID of the person you want the info of</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_user/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>accountID - Your accountID</p> <p>gjp - Your GJP</p>"},{"location":"server/endpoints/get_user/#response","title":"Response","text":"<p>Returns a user object for the player you want</p>"},{"location":"server/endpoints/get_user/#example","title":"Example","text":""},{"location":"server/endpoints/get_user/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"secret\": \"Wmfd2893gb7\",\n    \"targetAccountID\": 173831\n}\n\nreq = requests.post('http://boomlings.com/database/getGJUserInfo20.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1:DevExit:2:3935672:13:115:17:606:10:18:11:16:3:5143:46:8531:4:142:8:1:18:0:19:0:50:0:20:UCZoN2WLAooS6uhREa9Cgpwg:21:119:22:22:23:31:24:13:25:30:26:24:28:1:43:2:48:1:30:47981:16:173831:31:0:44:DevExit:45:devexit:49:0:29:1\n</code></pre></p>"},{"location":"server/endpoints/get_user_list/","title":"getGJUserList20.php","text":"<p>Gets either your friend list or your blocked list</p>"},{"location":"server/endpoints/get_user_list/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/get_user_list/#required-parameters","title":"Required Parameters","text":"<p>accountID - The account ID of the user you want to get the friends/blocklist of</p> <p>gjp - The GJP of the user you want to get the friends/blocklist of</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/get_user_list/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>type - 0 for friends, 1 for blocklist. Defaults to 0 if left out</p>"},{"location":"server/endpoints/get_user_list/#response","title":"Response","text":"<p>A list of user objects based on which list you choose, separated by pipes <code>|</code>.</p>"},{"location":"server/endpoints/get_user_list/#example","title":"Example","text":""},{"location":"server/endpoints/get_user_list/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n        \"accountID\": 173831, # DevExit's account ID\n        \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n        \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/getGJUserList20.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1:absolllute:2:18411307:9:11:10:15:11:15:14:0:15:2:16:5391343:18:2:41:|1:AdriRoPi:2:9502327:9:127:10:17:11:29:14:0:15:2:16:1636042:18:0:41:|1:AmorAltra:2:7006921:9:12:10:11:11:4:14:0:15:2:16:1046810:18:0:41:|1:anisk:2:3996991:9:10:10:18:11:37:14:5:15:0:16:90613:18:1:41:|1:AUG0D:2:14975931:9:51:10:33:11:12:14:1:15:0:16:6278067:18:1:41:|1:augii:2:19983031:9:30:10:18:11:11:14:0:15:2:16:5782085:18:0:41:|1:Auradium:2:127356083:9:35:10:1:11:3:14:0:15:2:16:13337396:18:0:41:|1:biapuffy:2:89994953:9:21:10:8:11:40:14:0:15:2:16:12042014:18:0:41:|1:BitZaruU:2:3648180:9:1:10:0:11:3:14:5:15:0:16:2750303:18:0:41:|1:BramYT:2:5806701:9:43:10:21:11:0:14:0:15:2:16:450273:18:0:41:|1:BugBoy:2:6655666:9:15:10:18:11:10:14:6:15:0:16:932726:18:1:41:|1:ChatNoir5:2:17160067:9:22:10:15:11:1:14:1:15:0:16:5769039:18:0:41:|1:ChiChirik:2:2946652:9:46:10:3:11:7:14:0:15:2:16:44549:18:0:41:|1:Cinny:2:99010452:9:23:10:12:11:12:14:1:15:2:16:10605101:18:0:41:|1:colebowl:2:3303760:9:1:10:0:11:3:14:0:15:0:16:22704:18:1:41:|1:COLON:2:4136576:9:60:10:18:11:10:14:0:15:2:16:106255:18:0:41:|1:CR Creebay :2:4136203:9:97:10:12:11:3:14:0:15:2:16:187918:18:1:41:|1:Creator cd:2:4208553:9:35:10:15:11:12:14:0:15:0:16:1827120:18:1:41:|1:CreatorForce:2:11798163:9:37:10:4:11:16:14:0:15:2:16:2563970:18:0:41:|1:CreatorPig:2:6309884:9:8:10:22:11:34:14:6:15:2:16:931102:18:0:41:|1:DarkEmper0r:2:667356:9:20:10:12:11:12:14:3:15:0:16:2661:18:1:41:|1:deadk3v:2:44065476:9:38:10:17:11:3:14:1:15:2:16:7249929:18:0:41:|1:denisukrrus:2:111481197:9:28:10:18:11:12:14:1:15:0:16:11283964:18:0:41:|1:Dragonfire178:2:3788247:9:15:10:15:11:11:14:1:15:2:16:1279201:18:0:41:|1:DrallumGC:2:4494564:9:10:10:22:11:9:14:6:15:2:16:295655:18:0:41:|1:Dyad:2:80155356:9:111:10:3:11:0:14:0:15:0:16:8777883:18:1:41:|1:EliteSG:2:20959785:9:96:10:17:11:12:14:0:15:2:16:6261100:18:0:41:|1:endevvor:2:87464728:9:120:10:4:11:21:14:0:15:0:16:9631328:18:0:41:|1:ErenGD:2:43587008:9:11:10:8:11:40:14:1:15:2:16:7235260:18:1:41:|1:foundmyball:2:15976456:9:24:10:11:11:16:14:5:15:2:16:5056324:18:0:41:|1:Fus1oN:2:18900874:9:98:10:0:11:3:14:0:15:0:16:5508218:18:0:41:|1:GatoFresa:2:6323741:9:1:10:7:11:8:14:6:15:0:16:1245627:18:1:41:|1:GDDD:2:5548469:9:119:10:40:11:41:14:0:15:2:16:4958525:18:0:41:|1:GeDeXy:2:4755134:9:30:10:12:11:5:14:0:15:0:16:3420678:18:0:41:|1:ggeoo:2:118630583:9:102:10:7:11:3:14:0:15:0:16:11725961:18:1:41:|1:Gorshh:2:7628148:9:9:10:25:11:3:14:5:15:2:16:1803304:18:0:41:|1:Griffin28:2:13924338:9:30:10:18:11:3:14:4:15:0:16:3911716:18:1:41:|1:Hackram:2:3314056:9:5:10:18:11:25:14:5:15:0:16:359647:18:0:41:|1:hdmeltdown:2:16436096:9:13:10:18:11:3:14:5:15:2:16:5082253:18:0:41:|1:hola1234:2:17945025:9:1:10:1:11:3:14:0:15:0:16:5320224:18:2:41:|1:Hunnidew:2:3504822:9:60:10:17:11:12:14:0:15:2:16:122675:18:1:41:|1:ICN:2:30727064:9:18:10:37:11:12:14:2:15:2:16:6370227:18:0:41:|1:iIAdezioIi:2:5544596:9:1:10:0:11:3:14:0:15:0:16:354077:18:0:41:|1:IiILevelsIiI:2:11893766:9:21:10:11:11:3:14:2:15:2:16:2690209:18:0:41:|1:IiISwiftIiI:2:4240755:9:15:10:39:11:22:14:6:15:0:16:372921:18:0:41:|1:ItsJustAnotherP:2:21306452:9:98:10:29:11:2:14:0:15:2:16:6088967:18:0:41:|1:ItsNutty:2:29688055:9:21:10:17:11:3:14:5:15:2:16:6314603:18:0:41:|1:JapanChinaHax:2:37589794:9:1:10:0:11:3:14:0:15:0:16:6775461:18:1:41:|1:JaxmanDaBoss:2:11517233:9:25:10:15:11:2:14:1:15:2:16:2879159:18:1:41:|1:jmsaints12:2:4986011:9:17:10:13:11:11:14:1:15:2:16:818108:18:1:41:|1:Juanger YT:2:14711732:9:128:10:0:11:1:14:0:15:0:16:4282353:18:0:41:|1:KittyKit:2:38493936:9:98:10:14:11:12:14:0:15:0:16:6906586:18:1:41:|1:KrazyGFX:2:12182416:9:2:10:12:11:15:14:6:15:0:16:2971696:18:0:41:|1:Krysolite:2:42833795:9:4:10:40:11:37:14:5:15:2:16:7400547:18:0:41:|1:LegeNdiuM:2:3820413:9:128:10:36:11:41:14:0:15:2:16:5013339:18:0:41:|1:Luckyyy:2:11809502:9:3:10:12:11:12:14:4:15:2:16:2674059:18:0:41:|1:mbed:2:7381956:9:110:10:3:11:12:14:0:15:2:16:1403996:18:0:41:|1:moisescrack20:2:5881933:9:16:10:0:11:3:14:0:15:0:16:2707555:18:1:41:|1:mrcreeperington:2:6084355:9:119:10:37:11:40:14:0:15:2:16:603371:18:0:41:|1:Mzt3rz:2:3381641:9:38:10:17:11:12:14:2:15:0:16:610833:18:0:41:|1:N3LY:2:52850644:9:18:10:10:11:3:14:3:15:2:16:11857536:18:0:41:|1:NeKitDS:2:17876467:9:133:10:6:11:3:14:0:15:2:16:5509312:18:0:41:|1:Nighthawk8:2:5332789:9:25:10:10:11:26:14:0:15:0:16:1683204:18:1:41:|1:NioHcreator:2:78104709:9:1:10:18:11:12:14:2:15:2:16:9379353:18:0:41:|1:Nyvanish:2:9274883:9:8:10:1:11:12:14:6:15:2:16:1422516:18:1:41:|1:PasswordFinders:2:17787971:9:63:10:0:11:3:14:0:15:0:16:5317656:18:2:41:|1:pbbbfe:2:13870008:9:129:10:18:11:3:14:0:15:0:16:3794318:18:1:41:|1:Plaxen:2:8649263:9:1:10:0:11:3:14:0:15:0:16:1243033:18:0:41:|1:PlexyGlass:2:98636479:9:133:10:4:11:12:14:0:15:2:16:10561660:18:1:41:|1:Pokima:2:122214721:9:33:10:12:11:41:14:1:15:0:16:12043291:18:0:41:|1:poopybobby:2:14711367:9:18:10:12:11:5:14:3:15:0:16:4884369:18:0:41:|1:PowerGW:2:9920667:9:92:10:21:11:15:14:0:15:2:16:1558318:18:0:41:|1:rexzyy:2:37023496:9:10:10:15:11:11:14:2:15:0:16:6744103:18:0:41:|1:RiGtZ:2:11392286:9:50:10:40:11:3:14:0:15:0:16:2721325:18:0:41:|1:Rippin17:2:7969254:9:47:10:0:11:3:14:0:15:0:16:1114978:18:0:41:|1:ShadowFlare:2:10175886:9:98:10:18:11:12:14:0:15:0:16:1634186:18:0:41:|1:skullforever:2:5471285:9:1:10:2:11:3:14:0:15:0:16:383010:18:1:41:|1:SniDer:2:15142239:9:9:10:12:11:21:14:6:15:0:16:5097653:18:0:41:|1:SpuffyGD:2:5224502:9:32:10:15:11:1:14:0:15:0:16:1562647:18:0:41:|1:Steven0604:2:13104437:9:28:10:9:11:12:14:0:15:0:16:121568:18:0:41:|1:Thaizik:2:5250445:9:126:10:17:11:14:14:0:15:2:16:1667608:18:0:41:|1:Thatdograscal:2:5785477:9:3:10:15:11:5:14:6:15:0:16:438738:18:0:41:|1:thedash8282:2:50843361:9:36:10:41:11:12:14:0:15:2:16:7761927:18:0:41:|1:TheManMadeGoril:2:8697851:9:1:10:0:11:3:14:0:15:0:16:1288840:18:0:41:|1:TheRealRoman:2:13141389:9:1:10:0:11:3:14:0:15:0:16:3459603:18:1:41:|1:TheRealZero:2:5446355:9:47:10:25:11:25:14:0:15:2:16:324047:18:0:41:|1:TheS1:2:1813006:9:22:10:20:11:12:14:0:15:0:16:2426734:18:0:41:|1:ThroShade:2:6918339:9:37:10:18:11:12:14:0:15:2:16:988999:18:0:41:|1:Toxjc47:2:7628745:9:29:10:12:11:25:14:0:15:0:16:1054055:18:0:41:|1:TritheDoge:2:85831492:9:11:10:20:11:38:14:3:15:0:16:9399037:18:1:41:|1:TrueW33D:2:3354630:9:107:10:15:11:12:14:0:15:2:16:1029:18:0:41:|1:TurboDashGD:2:11262496:9:22:10:15:11:15:14:1:15:2:16:3319009:18:1:41:|1:TwilightLink:2:13979575:9:1:10:0:11:3:14:0:15:0:16:4739798:18:0:41:|1:ViuteX :2:20423414:9:18:10:3:11:13:14:0:15:0:16:5891721:18:1:41:|1:WhiteRecycling:2:10200743:9:84:10:12:11:12:14:0:15:0:16:1623259:18:0:41:|1:WitFaithGaming:2:7250600:9:5:10:25:11:3:14:5:15:2:16:1153639:18:0:41:|1:xxeriickgdxx:2:18833528:9:21:10:1:11:3:14:4:15:0:16:5496439:18:0:41:|1:XxmishiroxX:2:4885470:9:11:10:12:11:0:14:0:15:2:16:513390:18:0:41:|1:XxsaulxX902:2:10842216:9:6:10:0:11:12:14:5:15:2:16:2138304:18:1:41:|1:YannickBakFiets:2:9786350:9:17:10:7:11:11:14:1:15:0:16:1536281:18:0:41:|1:Zadik:2:6082346:9:4:10:0:11:3:14:0:15:0:16:807053:18:0:41:|1:Zod1ac:2:5259869:9:35:10:6:11:3:14:2:15:2:16:2499318:18:0:41:\n</code></pre></p>"},{"location":"server/endpoints/like_item/","title":"likeGJItem211.php","text":"<p>Likes a level, comment, etc.</p>"},{"location":"server/endpoints/like_item/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/like_item/#required-parameters","title":"Required Parameters","text":"<p>secret - Wmfd2893gb7</p> <p>itemID - The ID of the level, comment, or account comment</p> <p>type - 1 for level, 2 for level comment, 3 for account comment.</p>"},{"location":"server/endpoints/like_item/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>accountID - The liking/disliking person's account ID</p> <p>gjp - The liking/disliking person's GJP</p> <p>udid - The liking/disliking person's udid</p> <p>uuid - The liking/disliking person's uuid</p> <p>like - 0 is dislike, 1 is like. Not sure what it defaults to if left out, but it can be left out.</p>"},{"location":"server/endpoints/like_item/#response","title":"Response","text":"<p>Always returns 1, regardless of whether the item was liked/disliked or not.</p>"},{"location":"server/endpoints/like_item/#example","title":"Example","text":""},{"location":"server/endpoints/like_item/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"secret\": \"Wmfd2893gb7\",\n    \"itemID\": 62687277,\n    \"type\": 1\n}\n\nreq = requests.post('http://boomlings.com/database/likeGJItem211.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/load/","title":"getSaveData.php","text":"<p>Unknown</p>"},{"location":"server/endpoints/load/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/load/#required-parameters","title":"Required Parameters","text":"<p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/load/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/load/#response","title":"Response","text":"<p>Returns seemingly random urlsafe base64 encoded text</p>"},{"location":"server/endpoints/load/#example","title":"Example","text":""},{"location":"server/endpoints/load/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"secret\": \"Wmfd2893gb7\",\n}\n\nreq = requests.post('http://boomlings.com/database/getSaveData.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>\n</code></pre></p>"},{"location":"server/endpoints/post_comment/","title":"uploadGJAccComment20.php","text":"<p>Posts an account comment</p>"},{"location":"server/endpoints/post_comment/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/post_comment/#required-parameters","title":"Required Parameters","text":"<p>accountID - Account ID of the user posting the comment</p> <p>gjp - The GJP of the user posting the comment</p> <p>comment - The comment's text, converted to URL-safe base64.</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/post_comment/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>cType - The comment type, 0 for level, 1 for user</p> <p>chk - Unsure</p>"},{"location":"server/endpoints/post_comment/#response","title":"Response","text":"<p>Returns 1 if the comment was successfully posted, but a 500 error code if the comment is either left out or could not be posted</p>"},{"location":"server/endpoints/post_comment/#example","title":"Example","text":""},{"location":"server/endpoints/post_comment/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"accountID\": 173831, # DevExit's account ID\n    \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n    \"comment\": base64.b64encode(b\"This comment was uploaded for the GD Docs!\").decode(),\n    \"secret\": \"Wmfd2893gb7\",\n}\n\nr = requests.post('http://boomlings.com/database/uploadGJAccComment20.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1772719\n</code></pre></p>"},{"location":"server/endpoints/rate_demon/","title":"rateGJDemon21.php","text":"<p>Rates the demon difficulty of a demon level - only works for Geometry Dash moderators</p>"},{"location":"server/endpoints/rate_demon/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/rate_demon/#required-parameters","title":"Required Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>secret - Wmfp3897gc3</p> <p>accountID - The accountID of the user who's rating the demon's difficulty</p> <p>gjp - The GJP of the user who's rating the demon's difficulty</p> <p>levelID - The ID of the demon being rated</p> <p>rating - 1 for Easy Demon, 2 for Medium Demon, 3 for Hard Demon, 4 for Insane Demon and 5 for Extreme Demon</p>"},{"location":"server/endpoints/rate_demon/#optional-parameters","title":"Optional Parameters","text":"<p>gdw - 0 </p>"},{"location":"server/endpoints/rate_demon/#response","title":"Response","text":"<p>For normal Players: Internal Server Error or -1</p> <p>if mode=1</p> <p>mod: levelID</p> <p>normal user: -2</p>"},{"location":"server/endpoints/rate_demon/#example","title":"Example","text":""},{"location":"server/endpoints/rate_demon/#python-normal-players","title":"Python - normal Players","text":"<pre><code>import requests\n\nheaders = {\n}\n\ndata = {\n    \"secret\": \"Wmfp3897gc3\",\n    \"levelID\": 3979721,\n    \"rating\": 5\n}\n\nreq = requests.post('http://www.boomlings.com/database/rateGJDemon21.php', headers=headers, data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>-1\n</code></pre></p>"},{"location":"server/endpoints/rate_demon/#python-moderators","title":"Python - Moderators","text":"<pre><code>import requests\n\nheaders = {\n}\n\ndata = {\n    \"gameVersion\": 21,\n    \"binaryVersion\": 35\n    \"accountID\": 71,\n    \"gjp\": *********, #the GJP of the moderator\n    \"secret\": \"Wmfp3897gc3\",\n    \"levelID\": 4284013,\n    \"rating\": 3\n}\n\nreq = requests.post('http://www.boomlings.com/database/rateGJDemon21.php', headers=headers, data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>4284013\n</code></pre></p>"},{"location":"server/endpoints/rate_level/","title":"rateGJStars211.php","text":"<p>Sends a star suggestion for a level</p>"},{"location":"server/endpoints/rate_level/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/rate_level/#required-parameters","title":"Required Parameters","text":"<p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/rate_level/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/rate_level/#response","title":"Response","text":""},{"location":"server/endpoints/rate_level/#example","title":"Example","text":""},{"location":"server/endpoints/rate_level/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post('http://boomlings.com/database/getSaveData.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/rate_stars/","title":"suggestGJStars.md","text":"<p>Endpoint used by moderators to send levels to RobTop</p>"},{"location":"server/endpoints/rate_stars/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/rate_stars/#required-parameters","title":"Required Parameters","text":"<p>accountID - accountID of the user</p> <p>gjp - The GJP of the user</p> <p>levelID - the ID of the level</p> <p>stars - how many stars that are requested</p> <p>secret - Wmfp3879gc3</p> <p>gameVersion - the game version</p> <p>binaryVersion - the binary version</p> <p>feature - 1 for feature, 0 for star rate</p> <p>gdw - 0</p>"},{"location":"server/endpoints/rate_stars/#response","title":"Response","text":"<p>-2 or 1</p>"},{"location":"server/endpoints/rate_stars/#example","title":"example","text":""},{"location":"server/endpoints/rate_stars/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n        \"gameVersion\": 21,\n        \"binaryVersion\":35\n        \"accountID\": 71, # a moderators accountID\n        \"gjp\": \"********\", # This would be the mods password encoded with GJP encryption\n        \"levelID\": 128,\n        \"stars\": 3,\n        \"feature\": 0,\n        \"gdw\": 0,\n        \"secret\": \"Wmfp3879gc3\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/suggestGJStars.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/read_friend_request/","title":"readGJFriendRequest20.php","text":"<p>Marks a friend request as \"read\"</p>"},{"location":"server/endpoints/read_friend_request/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/read_friend_request/#required-parameters","title":"Required Parameters","text":"<p>accountID - The accountID of the user reading the friend request</p> <p>gjp - The GJP of the user reading the friend request</p> <p>requestID - The ID of the friend request</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/read_friend_request/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/read_friend_request/#response","title":"Response","text":"<p>1 if the required parameters are met, otherwise -1</p>"},{"location":"server/endpoints/read_friend_request/#example","title":"Example","text":""},{"location":"server/endpoints/read_friend_request/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    'accountID': 173831, # DevExit's account ID\n    'gjp': \"********\", # This would be DevExit's password encoded with GJP encryption\n    'requestID': 43199784,\n    'secret': 'Wmfd2893gb7'\n}\n\nr = requests.post('http://boomlings.com/database/readGJFriendRequest20.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/remove_friend/","title":"removeGJFriend20.php","text":"<p>Removes someone from a user's friend list</p>"},{"location":"server/endpoints/remove_friend/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/remove_friend/#required-parameters","title":"Required Parameters","text":"<p>accountID - The accountID of the user removing the friend</p> <p>gjp - The GJP of the user removing the friend</p> <p>targetAccountID - The accountID of the user being removed</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/remove_friend/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/remove_friend/#response","title":"Response","text":""},{"location":"server/endpoints/remove_friend/#example","title":"Example","text":""},{"location":"server/endpoints/remove_friend/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    'accountID': 173831, # DevExit's account ID\n    'gjp': \"********\", # This would be DevExit's password encoded with GJP encryption\n    'targetAccountID': 5317656,\n    'secret': 'Wmfd2893gb7'\n}\n\nr = requests.post('http://boomlings.com/database/removeGJFriend20.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/report_level/","title":"reportGJLevel.php","text":"<p>Reports a level</p>"},{"location":"server/endpoints/report_level/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/report_level/#required-parameters","title":"Required Parameters","text":"<p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/report_level/#optional-parameters","title":"Optional Parameters","text":"<p>levelID - The ID of the level being reported</p>"},{"location":"server/endpoints/report_level/#response","title":"Response","text":"<p>1 if a secret is passed, even if no levelID is passed, and -1 otherwise</p>"},{"location":"server/endpoints/report_level/#example","title":"Example","text":""},{"location":"server/endpoints/report_level/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"levelID\": 30194711,\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post('http://boomlings.com/database/reportGJLevel.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/request/","title":"Request","text":"<p>The Geometry Dash servers are based around one main HTTP server, rather than primarily through secondary sources or establishing a direct REST api for usage. All endpoints are stored over the <code>/database</code> folder, rather than the base.</p>"},{"location":"server/endpoints/request/#serverdatabase-url","title":"Server/Database URL","text":"<pre><code>http://www.boomlings.com/database/\n</code></pre>"},{"location":"server/endpoints/request/#requests","title":"Requests","text":"<p>Geometry Dash uses POST requests. The data is in the body field of the request. The body of a request is always structured in this way:</p> <pre><code>param1=value1&amp;param2=value2&amp;param3...\n</code></pre> <p>Though many modern languages implement constructing data from mappings.</p>"},{"location":"server/endpoints/request/#server-responses","title":"Server Responses","text":"<p>Most server response are formatted in weird ways, not in more usual ways like JSON, or XML. Usually, they're formatted in a way that consists of <code>key:value</code>,  not really in a way that gives each key a name; but is more similar to an ID system. Most responses will use the splitters <code>:</code>, <code>|</code>, or <code>#</code>, the last two being mostly to split between multiple response strings, usually seen in filtering endpoint such at <code>getGJLevels</code> or <code>getGJUsers</code>.</p>"},{"location":"server/endpoints/request/#example-of-a-string","title":"Example of a String","text":"<pre><code>1:61154556:2:Chillin:5:1:6:12901137:8:10:9:20:10:3348:12:0:13:21:14:373:17::43:4:25::18:3:19:24962:42:0:45:29651:3:UmVtYWtlIG9mIG15IG9sZCAyLjAgbGV2ZWwgY2FsbGVkIENoaWxsIHhkIEp1c3QgYSBzaW1wbGUgYW5kIGNoaWxsIGxldmVsLCBlbmpveSA6KQ==:15:3:30:0:31:0:37:0:38:1:39:3:46:1:47:2:35:669275\n</code></pre>"},{"location":"server/endpoints/request/#examples","title":"Examples","text":""},{"location":"server/endpoints/request/#php","title":"PHP","text":"<pre><code>&lt;?php\n// sets the target url\n$url = \"http://boomlings.com/database/[insert target file]\";\n\n// makes the post string\n$str = \"something=value&amp;somethingElse=otherValue\";\n\n// turns the post string into an array\nparse_str($str, $post);\n\n// makes a curl request on your url using the post values\n$ch = curl_init($url);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n\n// requests the output\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n$result = curl_exec($ch);\n\n// closes the request\ncurl_close($ch);\n\n// outputs the site responce\necho $result;\n?&gt;\n</code></pre>"},{"location":"server/endpoints/request/#python","title":"Python","text":"<pre><code>import requests\n\n# sets the target url\nurl = \"http://www.boomlings.com/database/[insert target file]\"\n\n# creates data to send\ndata = {\n    \"something\": \"value\", \"somethingElse\": \"otherValue\"\n}\n\n# sends request and reads the result\nresult = requests.post(url, data).text\n\n# outputs the site response\nprint(result)\n</code></pre>"},{"location":"server/endpoints/request/#java","title":"Java","text":"<pre><code>/*\n * Using Reactor Netty HTTP client\n * https://github.com/reactor/reactor-netty\n */\n\nimport static io.netty.buffer.Unpooled.wrappedBuffer;\nimport static java.nio.charset.StandardCharsets.UTF_8;\n\nimport io.netty.buffer.ByteBuf;\nimport io.netty.handler.codec.http.HttpResponseStatus;\nimport reactor.core.publisher.Mono;\nimport reactor.netty.http.client.HttpClient;\n\npublic class Main {\n\npublic static void main(String[] args) {\n// Creates data to send\nByteBuf data = wrappedBuffer(UTF_8.encode(\"something=value&amp;somethingElse=otherValue\"));\n\n// Creates HTTP client\nHttpClient client = HttpClient.create()\n.baseUrl(\"www.boomlings.com/database\")\n.headers(h -&gt; {\nh.add(\"Content-Type\", \"application/x-www-form-urlencoded\");\nh.add(\"Content-Length\", data.readableBytes());\n});\n\nString response = client.post()       // Creates the POST request\n.uri(\"/[insert target file]\") // Sets the target URL\n.send(Mono.just(data))        // Sends the data\n.responseSingle((responseHeader, responseBody) -&gt; {\nif (responseHeader.status().equals(HttpResponseStatus.OK)) {\n// If 200 OK returns response body as string\nreturn responseBody.asString().defaultIfEmpty(\"\");\n} else {\n// If not 200 OK throws an exception\nreturn Mono.error(new RuntimeException(responseHeader.status().toString()));\n}\n})\n.block(); // awaits response\n\nSystem.out.println(response); // prints response body\n}\n\n}\n</code></pre>"},{"location":"server/endpoints/request/#node-js","title":"Node JS","text":"<pre><code>const http = require(\"http\");\nconst queryString = require(\"query-string\");\n\n// sets the target url\nconst target = \"/database/[insert target file]\";\n\n// creates data to send\nconst data = queryString.stringify({\nsomething: \"value\",\nsomethingElse: \"otherValue\"\n});\n\n// sends a request\nhttp.request({\nhost: \"boomlings.com\",\npath: target,\nport: 80,\nmethod: \"POST\",\nheaders: {\n\"Content-Type\": \"application/x-www-form-urlencoded\",\n\"Content-Length\": Buffer.byteLength(data)\n}\n}, (res) =&gt; {\nlet output = \"\";\n\nres.on(\"data\", (chunk) =&gt; output += chunk);\n\nres.on(\"end\", () =&gt; console.log(output));\n}).write(data);\n</code></pre>"},{"location":"server/endpoints/request/#rust","title":"Rust","text":"<pre><code>use reqwest;\n\n// use the tokio runtime\n#[tokio::main]\nasync fn main() -&gt; reqwest::Result&lt;()&gt; {\n// set the url\nlet uri = \"http://www.boomlings.com/database/[insert target file]\";\n\n// create post values\nlet data = [\n(\"something\", \"value\"),\n(\"somethingElse\", \"otherValue\")\n];\n\n// send the request\nlet req = reqwest::Client::new()\n.post(uri)\n.form(&amp;data)\n.send()\n.await?;\n\n// read the response\nprintln!(\"{}\", req.text().await?);\n\nOk(())\n}\n</code></pre>"},{"location":"server/endpoints/request_access/","title":"requestUserAccess.php","text":"<p>Requests moderator access</p>"},{"location":"server/endpoints/request_access/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/request_access/#required-parameters","title":"Required Parameters","text":"<p>accountID - The accountID of the user requesting mod access</p> <p>gjp - The GJP of the user requesting mod access</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/request_access/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/request_access/#response","title":"Response","text":"<p>1 if granted, -1 if not</p>"},{"location":"server/endpoints/request_access/#example","title":"Example","text":""},{"location":"server/endpoints/request_access/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    data = {\n    'accountID': 173831, # DevExit's account ID\n    'gjp': \"********\", # This would be DevExit's password encoded with GJP encryption\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post('http://boomlings.com/database/requestUserAccess.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>-1\n</code></pre></p>"},{"location":"server/endpoints/restore_items/","title":"restoreGJItems.php","text":"<p>Restores user's data; defunct as of the new save system</p>"},{"location":"server/endpoints/restore_items/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/restore_items/#required-parameters","title":"Required Parameters","text":"<p>udid - A unique identifier for the user's device, can be replaced with anything</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/restore_items/#response","title":"Response","text":"<p>A 500 error code</p>"},{"location":"server/endpoints/restore_items/#example","title":"Example","text":""},{"location":"server/endpoints/restore_items/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"udid\": \"605BE9FD-300E-49EA-A45C-B272EE64D3E0\",\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post('http://boomlings.com/database/restoreGJItems.php', data=data)\nprint(req.status_code)\n</code></pre> <p>Response <pre><code>500\n</code></pre></p>"},{"location":"server/endpoints/search_users/","title":"getGJUsers20.php","text":"<p>Searches for a user and returns their info</p>"},{"location":"server/endpoints/search_users/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/search_users/#required-parameters","title":"Required Parameters","text":"<p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/search_users/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>str - The name of the user you want to search for</p> <p>page - The page of users you want. Redundant as it only returns 1 user</p> <p>total - Current use is unknown, defaults to 0.</p>"},{"location":"server/endpoints/search_users/#response","title":"Response","text":"<p>A user object of the person you're searching for.</p>"},{"location":"server/endpoints/search_users/#example","title":"Example","text":""},{"location":"server/endpoints/search_users/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"secret\": \"Wmfd2893gb7\",\n    \"str\": \"Foundmyball\"\n}\n\nreq = requests.post('http://boomlings.com/database/getGJUsers20.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1:foundmyball:2:15976456:13:66:17:50:6::9:2:10:11:11:15:14:6:15:0:16:5056324:3:571:8:0:4:31#999:0:10\n</code></pre></p>"},{"location":"server/endpoints/send_friend_request/","title":"uploadFriendRequest20.php","text":"<p>Sends a friend request to a user</p>"},{"location":"server/endpoints/send_friend_request/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/send_friend_request/#required-parameters","title":"Required Parameters","text":"<p>accountID - Account ID of the user sending the friend request</p> <p>gjp - The GJP of the user sending the friend request</p> <p>toAccountID - Account ID of the user receiving the friend request</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/send_friend_request/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>comment - The comment sent with the friend request encoded with Base 64, defaults to nothing if left out</p>"},{"location":"server/endpoints/send_friend_request/#response","title":"Response","text":"<p>1 if the user hasn't sent a friend request to that account ID already, regardless of whether it exists or not, but returns a 500 error code if the user has already sent a friend request to that account </p>"},{"location":"server/endpoints/send_friend_request/#example","title":"Example","text":""},{"location":"server/endpoints/send_friend_request/#python","title":"Python","text":"<pre><code>import requests, base64\n\ndata = {\n    \"accountID\": 173831, # DevExit's account ID\n    \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n    \"toAccountID\": 5317656,\n    \"comment\": base64.b64encode(b\"Hello good sir!\").decode(),\n    \"secret\": \"Wmfd2893gb7\",\n}\n\nr = requests.post('http://boomlings.com/database/uploadFriendRequest20.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/send_level_comment/","title":"uploadGJComment21.php","text":"<p>Uploads a comment to a user level.</p>"},{"location":"server/endpoints/send_level_comment/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/send_level_comment/#required-parameters","title":"Required Parameters","text":"<p>accountID - The commenter's account ID</p> <p>gjp - The commenter's GJP</p> <p>userName - The commenter's username</p> <p>comment - The comment, converted to URL-safe base64</p> <p>secret - Wmfd2893gb7</p> <p>levelID - The ID of the level to comment on</p> <p>percent - The level percentage shown on the comment</p> <p>chk - <code>userName</code> + <code>comment</code> + <code>levelID</code> + <code>percent</code></p>"},{"location":"server/endpoints/send_level_comment/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/send_level_comment/#response","title":"Response","text":"<p>Returns the ID of the posted comment, or <code>-1</code> if the request was rejected.</p>"},{"location":"server/endpoints/send_level_comment/#example","title":"Example","text":""},{"location":"server/endpoints/send_level_comment/#python","title":"Python","text":"<pre><code>import requests\n\n# With this code, DevExit is posting the comment \"Hello from the GDDocs!\" to 62687277\n\nchk = generate_chk(key=\"29481\", values=[\"devexit\", \"SGVsbG8gZnJvbSB0aGUgR0REb2NzIQ==\", 62687277, 69], salt=\"0xPT6iUrtws0J\")\n# These values can be found in the XOR and CHK pages\n\ndata = {\n    \"accountID\": 173831, # DevExit's account ID\n    \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n    \"userName\": \"devexit\",\n    \"comment\": \"SGVsbG8gZnJvbSB0aGUgR0REb2NzIQ==\", # \"Hello from the GDDocs!\"\n    \"levelID\": 62687277,\n    \"percent\": 69,\n    \"chk\": chk,\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/uploadGJComment21.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>31444784\n</code></pre></p>"},{"location":"server/endpoints/send_message/","title":"uploadGJMessage20.php","text":"<p>Sends a message to a user</p>"},{"location":"server/endpoints/send_message/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/send_message/#required-parameters","title":"Required Parameters","text":"<p>accountID - Account ID of the user sending the message</p> <p>gjp - The GJP of the user sending the message</p> <p>toAccountID - Account ID of the user retrieving the message</p> <p>subject - The subject of the message, converted to URL-safe base64</p> <p>body - The body of the message, converted to URL-safe base64</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/send_message/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/send_message/#response","title":"Response","text":"<p>1 if the message was sent, -1 if a problem occurred, or if the receiver has messages disabled</p>"},{"location":"server/endpoints/send_message/#example","title":"Example","text":""},{"location":"server/endpoints/send_message/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"gameVersion\": 21,\n    \"binaryVersion\": 35,\n    \"gdw\": 0,\n    \"accountID\": 173831, # This is DevExit's account ID\n    \"gjp\": \"*******\", # This would be DevExit's password encoded with GJP encryption\n    \"toAccountID\": 173831, # Yes! You can send messages to yourself\n    \"subject\": base64.b64encode(b\"You're dumb lol\").decode(),\n    \"body\": base64.b64encode(b\"Mhm yep you're p dumb lmao\").decode(),\n    \"secret\": \"Wmfd2893gb7\",\n}\n\nr = requests.post('http://boomlings.com/database/uploadGJMessage20.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/unblock_user/","title":"unblockGJUser20.php","text":"<p>Unblocks a user.</p>"},{"location":"server/endpoints/unblock_user/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/unblock_user/#required-parameters","title":"Required Parameters","text":"<p>accountID - The unblocking person's account ID</p> <p>gjp - The unblocking person's GJP</p> <p>targetAccountID - The account ID of the person getting unblocked</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/unblock_user/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/unblock_user/#response","title":"Response","text":"<p>Always returns 1, regardless of if the target account exists or not.</p>"},{"location":"server/endpoints/unblock_user/#example","title":"Example","text":""},{"location":"server/endpoints/unblock_user/#python","title":"Python","text":"<pre><code>import requests\n\n# With this code, DevExit is unblocking RobTop\n\ndata = {\n        \"accountID\": 173831, # DevExit's account ID\n        \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n        \"targetAccountID\": 71, # Robtop's account ID\n        \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/unblockGJUser20.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/update_level_description/","title":"updateGJDesc20.php","text":"<p>Updates the description of a level</p>"},{"location":"server/endpoints/update_level_description/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/update_level_description/#required-parameters","title":"Required Parameters","text":"<p>accountID - The account ID of the level's author</p> <p>gjp - The GJP of the level's author</p> <p>levelID - The ID of the level</p> <p>levelDesc - The new description of the level, converted to URL-safe base64</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/update_level_description/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/update_level_description/#response","title":"Response","text":"<p>1 if successful, -1 if not</p>"},{"location":"server/endpoints/update_level_description/#example","title":"Example","text":""},{"location":"server/endpoints/update_level_description/#python","title":"Python","text":"<pre><code>import requests, base64, random\n\ndata = {\n    \"accountID\": 5317656, # PasswordFinders' account ID\n    \"gjp\": \"********\", # This would be PasswordFinders' password encoded with GJP encryption\n    \"userName\": \"PasswordFinders\",\n    \"stars\": 6969,\n    \"demons\": 69,\n    \"diamonds\": 5000,\n    \"icon\": 0,\n    \"color1\": 21,\n    \"color2\": 42,\n    \"iconType\": 0,\n    \"coins\": 150,\n    \"userCoins\": 400,\n    \"special\": 2,\n    \"accIcon\": 0,\n    \"accShip\": 0,\n    \"accBall\": 0,\n    \"accBird\": 0,\n    \"accDart\": 0,\n    \"accRobot\": 0,\n    \"accGlow\": 0,\n    \"accSpider\": 0,\n    \"accExplosion\": 1,\n    \"secret\": \"Wmfd2893gb7\",\n    \"seed\": ''.join(random.sample(\"1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM\", 10))\n}\nitems = [add(data, \"accountID\"), add(data, 'userCoins'), add(data, 'demons'), add(data, 'stars'), add(data, 'coins'), add(data, 'iconType'), add(data, 'icon'), add(data, 'diamonds'), add(data, 'accIcon'), add(data, 'accShip'), add(data, 'accBall'), add(data, 'accBird'), add(data, 'accDart'), add(data, 'accRobot'), add(data, 'accGlow'), add(data, 'accSpider'), add(data, 'accExplosion')]\ndata['seed2'] = generate_chk(items, \"85271\", \"xI35fsAapCRg\")\n\nr = requests.post('http://boomlings.com/database/updateGJUserScore22.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>17787971\n</code></pre></p>"},{"location":"server/endpoints/update_profile/","title":"updateGJUserScore22.php","text":"<p>Updates a user's data</p>"},{"location":"server/endpoints/update_profile/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/update_profile/#required-parameters","title":"Required Parameters","text":"<p>accountID - Account ID of the user updating their profile</p> <p>gjp - The GJP of the user updating their profile</p> <p>stars - The amount of stars the user has</p> <p>demons - The amount of demons the user has</p> <p>diamonds - The amount of diamonds the user has</p> <p>icon - Which icon the iconType has selected, for example if iconType is 0 (cube), then it's the selected cube</p> <p>iconType - Which gamemode the player has last selected when changing their icons, 0 for cube, 1 for ship, 2 for ball, 3 for ufo, 4 for wave, 5 for robot, 6 for spider</p> <p>coins - The amount of secret coins the user has</p> <p>userCoins - The amount of user coins the user has</p> <p>accIcon - The ID of the user's selected icon.</p> <p>accShip - The ID of the user's selected icon.</p> <p>accBall - The ID of the user's selected icon.</p> <p>accBird - The ID of the user's selected icon.</p> <p>accDart - The ID of the user's selected icon.</p> <p>accRobot - The ID of the user's selected icon.</p> <p>accGlow - The ID of the user's selected icon.</p> <p>accSpider - The ID of the user's selected icon.</p> <p>accExplosion - The ID of the user's selected icon.</p> <p>seed2 - See here</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/update_profile/#optional-parameters","title":"Optional Parameters","text":"<p>gameVersion - 21</p> <p>binaryVersion - 35</p> <p>gdw - 0</p> <p>userName - The username of the player</p> <p>color1 - Color 1 of the player. Defaults to the default primary color when left out</p> <p>color2 - Color 2 of the player. Defaults to the default secondary color when left out</p> <p>special - Glow (2 if enabled)</p> <p>seed - A random set of 10 numbers and letters in A-Za-z0-9</p>"},{"location":"server/endpoints/update_profile/#response","title":"Response","text":"<p>The player ID of the user</p>"},{"location":"server/endpoints/update_profile/#example","title":"Example","text":""},{"location":"server/endpoints/update_profile/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"accountID\": 5317656, # PasswordFinders' Account ID\n    \"gjp\": \"********\", # This would be PasswordFinders' password encoded with GJP encryption\n    \"userName\": \"PasswordFinders\",\n    \"stars\": 6969,\n    \"demons\": 69,\n    \"diamonds\": 5000,\n    \"icon\": 0,\n    \"color1\": 21,\n    \"color2\": 42,\n    \"iconType\": 0,\n    \"coins\": 150,\n    \"userCoins\": 400,\n    \"special\": 2,\n    \"accIcon\": 0,\n    \"accShip\": 0,\n    \"accBall\": 0,\n    \"accBird\": 0,\n    \"accDart\": 0,\n    \"accRobot\": 0,\n    \"accGlow\": 0,\n    \"accSpider\": 0,\n    \"accExplosion\": 1,\n    \"secret\": \"Wmfd2893gb7\",\n    \"seed\": ''.join(random.sample(\"1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM\", 10))\n}\ndata['seed2'] = generate_chk([data['accountID'], data['userCoins'], data['demons'], data['stars'], data['coins'], data['iconType'], data['icon'], data['diamonds'], data['accIcon'], data['accShip'], data['accBall'], data['accBird'], data['accDart'], data['accRobot'], data['accGlow'], data['accSpider'], data['accExplosion']], \"85271\", \"xI35fsAapCRg\")\n\nr = requests.post('http://boomlings.com/database/updateGJUserScore22.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>17787971\n</code></pre></p>"},{"location":"server/endpoints/update_settings/","title":"updateGJAccSettings20.php","text":"<p>Updates a user's account settings</p>"},{"location":"server/endpoints/update_settings/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/update_settings/#required-parameters","title":"Required Parameters","text":"<p>accountID - The accountID of the user whose account is being updated</p> <p>gjp - The GJP of the user whose account is being updated</p> <p>secret - Wmfv3899gc9</p>"},{"location":"server/endpoints/update_settings/#optional-parameters","title":"Optional Parameters","text":"<p>mS - Who the user allows messages from: 0 for anyone, 1 for just friends, and 2 for no one</p> <p>frS - Who the user allows friend requests from: 0 for anyone, and 1 for no one</p> <p>cS - Who the user allows to view their comments: 0 for anyone, 1 for just friends, and 2 for only themselves</p> <p>yt - The end of the link to the user's youtube channel, after the <code>/channel/</code>. e.g. <code>UCZoN2WLAooS6uhREa9Cgpwg</code></p> <p>twitter - The user's twitter handle</p> <p>twitch - The user's twitch username</p>"},{"location":"server/endpoints/update_settings/#response","title":"Response","text":"<p>1 if the required parameters are passed, regardless of anything is being updated, -1 otherwise</p>"},{"location":"server/endpoints/update_settings/#example","title":"Example","text":""},{"location":"server/endpoints/update_settings/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"accountID\": 173831, # DevExit's account ID\n    \"gjp\": \"********\", # This would be DevExit's password encoded with GJP encryption\n    \"secret\": \"Wmfv3899gc9\",\n    \"mS\": 0,\n    \"frS\": 0,\n    \"cS\": 0,\n    \"yt\": \"UCZoN2WLAooS6uhREa9Cgpwg\",\n    \"twitter\": \"DevExit\",\n    \"twitch\": \"devexit\"\n}\n\nreq = requests.post('http://boomlings.com/database/updateGJAccSettings20.php', data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/upload_level/","title":"uploadGJLevel21.php","text":"<p>Uploads a created level to the servers.</p>"},{"location":"server/endpoints/upload_level/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/upload_level/#required-parameters","title":"Required Parameters","text":"<p>gameVersion - The game version. Currently 21</p> <p>accountID - The uploader's account ID</p> <p>gjp - The uploader's GJP</p> <p>userName - The uploader's username</p> <p>levelID - The ID of the level if updating to a newer version, otherwise 0</p> <p>levelName - The name of the level, in plain text</p> <p>levelDesc - The description of the level, in URL-safe base64</p> <p>levelVersion - The version number of the level</p> <p>levelLength - The length of the level as a number, where 0 is tiny and 4 is XL</p> <p>audioTrack - The official song number used in the level. Set to 0 if a newgrounds song is used</p> <p>auto - Unknown (0)</p> <p>password - The level's copy password. Set to 0 for no copy or 1 for free copy</p> <p>original - The ID of the original level if the level was copied, otherwise 0</p> <p>twoPlayer - Set to 1 if the level utilizes two player mode</p> <p>songID - The ID of the custom Newgrounds song used in the level. Set to 0 if an official song is used</p> <p>objects - The number of objects in the level</p> <p>coins - The number of user coins in the level</p> <p>requestedStars - The requested star rating for the level. The number is not limited to 10</p> <p>unlisted - Set to 1 if the level should be unlisted and only viewable by friends</p> <p>ldm - Set to 1 if the level should have a low detail checkbox</p> <p>levelString - The actual level data. Must be gzip compressed and then converted to URL-safe base64</p> <p>seed2 - A mandatory chk value generated from the first 50 characters of the compressed level data</p> <p>secret - Wmfd2893gb7</p>"},{"location":"server/endpoints/upload_level/#optional-parameters","title":"Optional Parameters","text":"<p>wt - the amount of time spent in the editor of a level (local copy)</p> <p>wt2 - The amount of time spent in the editor of a level (previous copies)</p> <p>seed - A random string</p> <p>extraString - A list of underscore seperated numbers. apparently used for rendering levels</p> <p>levelInfo - A random gzip compressed string</p> <p>binaryVersion - 35</p> <p>gdw - 0</p>"},{"location":"server/endpoints/upload_level/#response","title":"Response","text":"<p>Returns the ID of the uploaded level, or <code>-1</code> if the request was rejected.</p>"},{"location":"server/endpoints/upload_level/#example","title":"Example","text":""},{"location":"server/endpoints/upload_level/#python","title":"Python","text":"<pre><code>import requests\n\n# This is an empty level with a default block at (8, 4)\n# with (0, 0) being the bottom left block above the ground.\n\nlevelString = \"H4sIAAAAAAAAC6WQwQ3DIAxFF3IlfxsIUU6ZIQP8AbJChy_GPSZqpF7-A4yfDOfhXcCiNMIqnVYrgYQl8rDwBTZCVbkQRI3oVHbiDU6F2jMF_lesl4q4kw2PJMbovxLBQxTpM3-I6q0oHmXjzx7N0240cu5w0UBNtESRkble8uSLHjh8nTubmYJZ2MvMrEITEN0gEJMxlLiMZ28frmj\"\n\ndata = {\n    \"gameVersion\": 21,\n    \"accountID\": 173831, # This is DevExit's account ID\n    \"gjp\": \"*******\", # This would be DevExit's password encoded with GJP encryption\n    \"userName\": \"devexit\",\n    \"levelID\": 0,\n    \"levelName\": \"Test\", # The level name is Test\n    \"levelDesc\": \"QSB0ZXN0IGxldmVsIGZvciB0aGUgR0QgRG9jcyE\", # \"A test level for the GD Docs!\"\n    \"levelVersion\": 1,\n    \"levelLength\": 0,\n    \"audioTrack\": 0, # This uses a newgrounds song\n    \"auto\": 0,\n    \"password\": 314159,\n    \"original\": 55610687,\n    \"twoPlayer\": 0,\n    \"songID\": 546561, # NK - Jawbreaker\n    \"objects\": 1,\n    \"coins\": 0,\n    \"requestedStars\": 50,\n    \"unlisted\": 1, # This level is unlisted, but does exist!\n    \"ldm\": 0,\n    \"levelString\": levelString, # The level string for the level described above\n    \"seed2\": generate_chk(key=\"41274\", values=[generate_upload_seed(levelString)], salt=\"xI25fpAapCQg\"), # This is talked about in the CHK encryption,\n    \"secret\": \"Wmfd2893gb7\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/uploadGJLevel21.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response</p> <pre><code>62687277\n</code></pre>"},{"location":"server/endpoints/accounts/login/","title":"accounts/loginGJAccount.php","text":"<p>Logs into an account</p>"},{"location":"server/endpoints/accounts/login/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/accounts/login/#required-parameters","title":"Required Parameters","text":"<p>udid - Funnily, this is the UUID of the user, see here</p> <p>userName - The username of the account being signed into</p> <p>password - The password of the account being signed into</p> <p>secret - Wmfv3899gc9</p>"},{"location":"server/endpoints/accounts/login/#optional-parameters","title":"Optional Parameters","text":"<p>sID - The players Steam ID</p>"},{"location":"server/endpoints/accounts/login/#response","title":"Response","text":"<p>The account ID and the player ID of the user, separated by a comma, otherwise -1</p>"},{"location":"server/endpoints/accounts/login/#example","title":"Example","text":""},{"location":"server/endpoints/accounts/login/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"udid\": \"605BE9FD-300E-49EA-A45C-B272EE64D3E0\",\n    \"userName\": \"DevExit\",\n    \"password\": \"********\", # This would be DevExit's password\n    \"secret\": \"Wmfv3899gc9\"\n}\n\nr = requests.post(\"http://boomlings.com/database/accounts/loginGJAccount.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>173831,3935672\n</code></pre></p>"},{"location":"server/endpoints/accounts/register/","title":"accounts/registerGJAccount.php","text":"<p>Registers an account</p>"},{"location":"server/endpoints/accounts/register/#parameters","title":"Parameters","text":""},{"location":"server/endpoints/accounts/register/#required-parameters","title":"Required Parameters","text":"<p>userName - The username of the account to be added</p> <p>password - The password of the account to be added</p> <p>email - The email of the account to be added</p> <p>secret - Wmfv3899gc9</p>"},{"location":"server/endpoints/accounts/register/#response","title":"Response","text":"<p>1 if the account ID was successfully created, otherwise an error code</p>"},{"location":"server/endpoints/accounts/register/#example","title":"Example","text":""},{"location":"server/endpoints/accounts/register/#python","title":"Python","text":"<pre><code>import requests\n\ndata = {\n    \"userName\": \"GDDocsTestAcc\",\n    \"password\": \"********\",\n    \"email\": \"gddocsemail@gmail.com\",\n    \"secret\": \"Wmfv3899gc9\"\n}\n\nreq = requests.post(\"http://boomlings.com/database/accounts/registerGJAccount.php\", data=data)\nprint(req.text)\n</code></pre> <p>Response <pre><code>1\n</code></pre></p>"},{"location":"server/endpoints/accounts/register_web/","title":"Register (Web)","text":"<p>Account registration online (on the website).</p>"},{"location":"server/endpoints/accounts/register_web/#endpoint","title":"Endpoint","text":"method endpoint <code>GET</code> <code>register.php</code>"},{"location":"server/endpoints/comments/delete_level_comment/","title":"Delete Level Comment","text":"<p>Deletes a level comment.</p>"},{"location":"server/endpoints/comments/delete_level_comment/#endpoint","title":"Endpoint","text":"method endpoint <code>POST</code> <code>deleteGJComment20.php</code>"},{"location":"server/endpoints/comments/delete_level_comment/#parameters","title":"Parameters","text":"name description <code>accountID</code> The account ID of the user who is deleting the comment. <code>gjp</code> The encoded password of the user who is deleting the comment. <code>commentID</code> ID of the comment. <code>levelID</code> ID of the level the comment is on. <code>secret</code> The common secret. <code>gameVersion</code>? The current game version. <code>binaryVersion</code>? The current binary version. <code>gdw</code>? Whether the level comment is in Geometry Dash World."},{"location":"server/endpoints/comments/delete_level_comment/#response","title":"Response","text":"<p>Returns <code>1</code> if deleted, <code>-1</code> if failed.</p>"},{"location":"server/endpoints/comments/delete_level_comment/#example","title":"Example","text":""},{"location":"server/endpoints/comments/delete_level_comment/#code","title":"Code","text":"<pre><code>import requests\n\n# with this code, DevExit is deleting the comment on a level\n\ndata = {\n    \"accountID\": 173831,      # DevExit's account ID\n    \"gjp\": \"********\",        # this would be DevExit's encoded password\n    \"commentID\": 31415926,    # comment ID\n    \"levelID\": 54953085,      # ID of the level the comment is on\n    \"secret\": \"Wmfd2893gb7\",  # common secret\n}\n\nresponse = requests.post(\"http://boomlings.com/database/deleteGJComment20.php\", data=data)\n\nprint(response.text)\n</code></pre>"},{"location":"server/endpoints/comments/delete_level_comment/#output","title":"Output","text":"<pre><code>1\n</code></pre>"},{"location":"server/endpoints/comments/delete_user_comment/","title":"Delete User Comment","text":"<p>Deletes a user comment.</p>"},{"location":"server/endpoints/comments/delete_user_comment/#endpoint","title":"Endpoint","text":"method endpoint <code>POST</code> <code>deleteGJAccComment20.php</code>"},{"location":"server/endpoints/comments/delete_user_comment/#parameters","title":"Parameters","text":"name description <code>accountID</code> The account ID of the user deleting the comment. <code>gjp</code> The encoded password of the user deleting the comment. <code>commentID</code> The ID of the comment being deleted. <code>secret</code> The common secret. <code>gameVersion</code>? The current game version. <code>binaryVersion</code>? The current binary version. <code>gdw</code>? Whether the comment is in Geometry Dash World."},{"location":"server/endpoints/comments/delete_user_comment/#response","title":"Response","text":"<p><code>1</code> if the comment was deleted, <code>-1</code> if there was an error.</p>"},{"location":"server/endpoints/comments/delete_user_comment/#example","title":"Example","text":""},{"location":"server/endpoints/comments/delete_user_comment/#code","title":"Code","text":"<pre><code>import requests\n\n# with this code, DevExit is deleting one of her comments\n\ndata = {\n    \"accountID\": 173831,      # DevExit's account ID\n    \"gjp\": \"********\",        # this would be DevExit's encoded password\n    \"commentID\": 1772717,     # comment ID\n    \"secret\": \"Wmfd2893gb7\",  # common secret\n}\n\nresponse = requests.post('http://boomlings.com/database/deleteGJAccComment20.php', data=data)\n\nprint(response.text)\n</code></pre>"},{"location":"server/endpoints/comments/delete_user_comment/#output","title":"Output","text":"<pre><code>1\n</code></pre>"},{"location":"server/endpoints/friend_requests/accept_friend_request/","title":"Accept Friend Request","text":"<p>Accepts an incoming friend request.</p>"},{"location":"server/endpoints/friend_requests/accept_friend_request/#endpoint","title":"Endpoint","text":"method endpoint <code>POST</code> <code>acceptGJFriendRequest20.php</code>"},{"location":"server/endpoints/friend_requests/accept_friend_request/#parameters","title":"Parameters","text":"name description <code>accountID</code> Account ID of the user to accept the friend request from. <code>gjp</code> The encoded password of the user accepting the request. <code>targetAccountID</code> Account ID of the user who sent the friend request. <code>requestID</code> ID of the friend request to accept. <code>secret</code> The common secret. <code>gameVersion</code>? The current game version. <code>binaryVersion</code>? The current binary version. <code>gdw</code>? Whether the level is in Geometry Dash World."},{"location":"server/endpoints/friend_requests/accept_friend_request/#response","title":"Response","text":"<p>Always returns <code>1</code>, regardless of whether the friend request exists or not.</p>"},{"location":"server/endpoints/friend_requests/accept_friend_request/#example","title":"Example","text":""},{"location":"server/endpoints/friend_requests/accept_friend_request/#code","title":"Code","text":"<pre><code>import requests\n\n# with this code, DevExit is accepting a friend request from PasswordFinders\n\ndata = {\n    \"accountID\": 173831,         # DevExit's account ID\n    \"gjp\": \"********\",           # This would be DevExit's encoded password\n    \"targetAccountID\": 5317656,  # PasswordFinders' account ID\n    \"requestID\": 43248797,       # request ID\n    \"secret\": \"Wmfd2893gb7\",     # common secret\n}\n\nresponse = requests.post(\"http://boomlings.com/database/acceptGJFriendRequest20.php\", data=data)\n\nprint(response.text)\n</code></pre>"},{"location":"server/endpoints/friend_requests/accept_friend_request/#output","title":"Output","text":"<pre><code>1\n</code></pre>"},{"location":"server/endpoints/friend_requests/delete_friend_request/","title":"Delete Friend Request","text":"<p>Deletes a friend request.</p>"},{"location":"server/endpoints/friend_requests/delete_friend_request/#endpoint","title":"Endpoint","text":"method endpoint <code>POST</code> <code>deleteGJFriendRequests20.php</code>"},{"location":"server/endpoints/friend_requests/delete_friend_request/#parameters","title":"Parameters","text":"name description <code>accountID</code> The account ID of the user who is deleting the friend request. <code>gjp</code> The encoded password of the user who is deleting the friend request. <code>targetAccountID</code> The account ID of the person whose friend request is being deleted. <code>isSender</code> <code>1</code> if the user who deleted the friend request is the sender, otherwise <code>0</code>. <code>secret</code> The common secret. <code>gameVersion</code>? The current game version. <code>binaryVersion</code>? The current binary version. <code>gdw</code>? Whether the friend request is in Geometry Dash World."},{"location":"server/endpoints/friend_requests/delete_friend_request/#response","title":"Response","text":"<p>Always returns <code>1</code>, regardless of whether the request exists or not.</p>"},{"location":"server/endpoints/friend_requests/delete_friend_request/#example","title":"Example","text":""},{"location":"server/endpoints/friend_requests/delete_friend_request/#code","title":"Code","text":"<pre><code>import requests\n\n# With this code, DevExit is deleting a friend request to the person with ID 314159\n\ndata = {\n    \"accountID\": 173831,        # DevExit's account ID\n    \"gjp\": \"********\",          # this would be DevExit's encoded password\n    \"targetAccountID\": 314159,  # person's account ID\n    \"isSender\": 1,              # DevExit sent the friend request, so this is 1\n    \"secret\": \"Wmfd2893gb7\",    # common secret\n}\n\nresponse = requests.post(\"http://boomlings.com/database/deleteGJFriendRequests20.php\", data=data)\n\nprint(response.text)\n</code></pre>"},{"location":"server/endpoints/friend_requests/delete_friend_request/#output","title":"Output","text":"<pre><code>1\n</code></pre>"},{"location":"server/endpoints/levels/delete_level/","title":"Delete Level","text":"<p>Deletes a level.</p>"},{"location":"server/endpoints/levels/delete_level/#endpoint","title":"Endpoint","text":"method endpoint <code>POST</code> <code>deleteGJLevelUser20.php</code>"},{"location":"server/endpoints/levels/delete_level/#parameters","title":"Parameters","text":"name description <code>accountID</code> The level creator's account ID. <code>gjp</code> The level creator's encoded password. <code>levelID</code> The ID of the level being deleted. <code>secret</code> The common secret. <code>gameVersion</code>? The current game version. <code>binaryVersion</code>? The current binary version. <code>gdw</code>? Whether the level is in Geometry Dash World."},{"location":"server/endpoints/levels/delete_level/#response","title":"Response","text":"<p>Returns <code>1</code> if deleted or <code>-1</code> if failed or the level does not exist.</p>"},{"location":"server/endpoints/levels/delete_level/#example","title":"Example","text":""},{"location":"server/endpoints/levels/delete_level/#code","title":"Code","text":"<pre><code>import requests\n\n# with this code, DevExit is deleting one of her levels\n\ndata = {\n    \"accountID\": 173831,      # DevExit's account ID\n    \"gjp\": \"********\",        # this would be DevExit's encoded password\n    \"levelID\": 62689548,      # level ID\n    \"secret\": \"Wmfv2898gc9\",  # common secret\n}\n\nresponse = requests.post(\"http://boomlings.com/database/deleteGJLevelUser20.php\", data=data)\n\nprint(response.text)\n</code></pre>"},{"location":"server/endpoints/levels/delete_level/#output","title":"Output","text":"<pre><code>1\n</code></pre>"},{"location":"server/endpoints/levels/get_level/","title":"Get Level","text":"<p>Fetches a level and its related information.</p>"},{"location":"server/endpoints/levels/get_level/#parameters","title":"Parameters","text":"name description <code>levelID</code> The ID of the level to download. See special level IDs for more. <code>secret</code> The common secret. <code>gameVersion</code>? The current game version. <code>binaryVersion</code>? The current binary version. <code>gdw</code>? Whether the level is in Geometry Dash World. <code>accountID</code>? The account ID of the user downloading the level. <code>gjp</code>? The encoded password of the user downloading the level. <code>udid</code>? The UDID of the user who is downloading the level. <code>uuid</code>? The UUID of the downloading the level. <code>inc</code>? Whether to count the download towards total downloads. Usually set to <code>1</code>. <code>extras</code>? Currently not used. Set to <code>0</code>. <code>rs</code>? Random string. See here. <code>chk</code>? Check. See here."},{"location":"server/endpoints/levels/get_level/#response","title":"Response","text":"<p>Returns a level.</p>"},{"location":"server/endpoints/levels/get_level/#example","title":"Example","text":""},{"location":"server/endpoints/levels/get_level/#code","title":"Code","text":"<pre><code>import requests\n\n# with this code we are getting the level Test by DevExit\n\ndata = {\n    \"levelID\": 62687277,      # level ID\n    \"secret\": \"Wmfd2893gb7\",  # common secret\n}\n\nresponse = requests.post(\"http://boomlings.com/database/downloadGJLevel22.php\", data=data)\n\nprint(response.text)\n</code></pre>"},{"location":"server/endpoints/levels/get_level/#output","title":"Output","text":"<pre><code>1:62687277:2:Test:3:QSB0ZXN0IGxldmVsIGZvciB0aGUgR0QgRG9jcyE=:4:H4sIAAAAAAAAC6WQwQ3DIAxFF3IlfxsIUU6ZIQP8AbJChy_GPSZqpF7-A4yfDOfhXcCiNMIqnVYrgYQl8rDwBTZCVbkQRI3oVHbiDU6F2jMF_lesl4q4kw2PJMbovxLBQxTpM3-I6q0oHmXjzx7N0240cu5w0UBNtESRkble8uSLHjh8nTubmYJZ2MvMrEITEN0gEJMxlLiMZ28frmj:5:1:6:3935672:8:0:9:0:10:1:12:0:13:21:14:0:17::43:0:25::18:0:19:0:42:0:45:1:15:0:30:55610687:31:0:28:1 hour:29:1 hour:35:546561:36::37:0:38:0:39:50:46::47::40::27:AQcHBwEL#1bae6491cc87c72326abcbc0a7afaee139aa7088#f17c5a61f4ba1c7512081132459ddfaaa7c6f716\n</code></pre>"},{"location":"server/endpoints/messages/delete_message/","title":"Delete Message","text":"<p>Deletes a message between two users.</p>"},{"location":"server/endpoints/messages/delete_message/#endpoint","title":"Endpoint","text":"method endpoint <code>POST</code> <code>deleteGJMessages20.php</code>"},{"location":"server/endpoints/messages/delete_message/#parameters","title":"Parameters","text":"name description <code>accountID</code> The account ID of the user who is deleting the message. <code>gjp</code> The encoded password of the user deleting the message. <code>messageID</code> The ID of the message being deleted. <code>secret</code> The common secret. <code>isSender</code>? Whether the user is the sender. <code>gameVersion</code>? The current game version. <code>binaryVersion</code>? The current binary version. <code>gdw</code>? Whether the message is in Geometry Dash World."},{"location":"server/endpoints/messages/delete_message/#response","title":"Response","text":"<p>Always returns <code>1</code>, regardless of whether the message was deleted or not.</p>"},{"location":"server/endpoints/messages/delete_message/#example","title":"Example","text":""},{"location":"server/endpoints/messages/delete_message/#code","title":"Code","text":"<pre><code>import requests\n\n# with this code, DevExit is deleting one of her recievied messages\n\ndata = {\n    \"accountID\": 173831,      # DevExit's account ID\n    \"gjp\": \"********\",        # this would be DevExit's encoded password\n    \"messageID\": 3141592,     # message ID\n    \"secret\": \"Wmfd2893gb7\",  # common secret\n}\n\nresponse = requests.post(\"http://boomlings.com/database/deleteGJMessages20.php\", data=data)\n\nprint(response.text)\n</code></pre>"},{"location":"server/endpoints/messages/delete_message/#output","title":"Output","text":"<pre><code>1\n</code></pre>"},{"location":"server/endpoints/messages/get_message/","title":"Get Message","text":"<p>Fetches a message, effectively reading it.</p>"},{"location":"server/endpoints/messages/get_message/#endpoint","title":"Endpoint","text":"method endpoint <code>POST</code> <code>downloadGJMessage20.php</code>"},{"location":"server/endpoints/messages/get_message/#parameters","title":"Parameters","text":"name description <code>accountID</code> The user's account ID. <code>gjp</code> The user's encoded password. <code>message</code> The ID of the message to read. <code>secret</code> The common secret. <code>gameVersion</code>? The current game version. <code>binaryVersion</code>? The current binary version. <code>gdw</code>? Whether the message is in Geometry Dash World."},{"location":"server/endpoints/messages/get_message/#response","title":"Response","text":"<p>Returns a message.</p>"},{"location":"server/endpoints/messages/get_message/#example","title":"Example","text":""},{"location":"server/endpoints/messages/get_message/#code","title":"Code","text":"<pre><code>import requests\n\n# with this code we are downloading the message with a given ID\n\ndata = {\n    \"accountID\": 173831,      # DevExit's account ID\n    \"gjp\": \"********\",        # this would be DevExit's encoded password\n    \"messageID\": 54109536,    # message ID\n    \"secret\": \"Wmfd2893gb7\",  # common secret\n}\n\nresponse = requests.post(\"http://boomlings.com/database/downloadGJMessage20.php\", data=data)\n\nprint(response.text)\n</code></pre>"},{"location":"server/endpoints/messages/get_message/#output","title":"Output","text":"<pre><code>6:DevExit:3:3935672:2:173831:1:54109536:4:WW91J3JlIGR1bWIgbG9s:8:1:9:0:5:TWhtIHllcCB5b3UncmUgcCBkdW1iIGxtYW8=:7:19 minutes\n</code></pre>"},{"location":"server/endpoints/users/block_user/","title":"Block User","text":"<p>Blocks a given user.</p>"},{"location":"server/endpoints/users/block_user/#endpoint","title":"Endpoint","text":"method endpoint <code>POST</code> <code>blockGJUser20.php</code>"},{"location":"server/endpoints/users/block_user/#parameters","title":"Parameters","text":"name description <code>accountID</code> The blocking person's account ID. <code>gjp</code> The blocking person's encoded password. <code>targetAccountID</code> The account ID of the person being blocked. <code>secret</code> The common secret. <code>gameVersion</code>? The current game version. <code>binaryVersion</code>? The current binary version. <code>gdw</code>? Whether the users are in Geometry Dash World."},{"location":"server/endpoints/users/block_user/#response","title":"Response","text":"<p>Always returns <code>1</code>, regardless of whether the target account exists or not.</p>"},{"location":"server/endpoints/users/block_user/#example","title":"Example","text":""},{"location":"server/endpoints/users/block_user/#code","title":"Code","text":"<pre><code>import requests\n\n# with this code, DevExit is blocking RobTop\n\ndata = {\n    \"accountID\": 173831,      # DevExit's account ID\n    \"gjp\": \"********\",        # this would be DevExit's encoded password\n    \"targetAccountID\": 71,    # RobTop's account ID\n    \"secret\": \"Wmfd2893gb7\",  # common secret\n}\n\nresponse = requests.post(\"http://boomlings.com/database/blockGJUser20.php\", data=data)\n\nprint(response.text)\n</code></pre>"},{"location":"server/endpoints/users/block_user/#output","title":"Output","text":"<pre><code>1\n</code></pre>"},{"location":"server/models/comments/","title":"Server Comment Resource","text":""},{"location":"server/models/comments/#comment","title":"Comment","text":"<p>A Comment is a message that the player can create inside of Geometry Dash. There are Two types of comments: <code>Level Comments</code> and <code>Account Comments</code></p> <ul> <li><code>Level Comments</code> can be found after pressing the <code>i</code> button which is located on the right side of the level menu which then opens the Comment Menu - you can also view comments by clicking on the comment icon on the player Profile. To Post a comment, the player has to click on the speech bubble icon and they can type their comment. Without any external tools, a comment can be up to 100 Characters in length</li> <li><code>Account Comments</code> can be found on a user's profile. <code>Account Comments</code> are exactly the same as <code>Level Comments</code> however the following keys will not affect it: <code>10, 11, 12</code>To Upload an Account Comment the player must click the speech bubble icon on their profile and they can type their comment. Without any external tools, a comment can be up to 140 Characters in length</li> </ul>"},{"location":"server/models/comments/#comment-object","title":"Comment Object","text":"<p>A comment object is split into two sections: a <code>Comment String</code> and an <code>Author String</code>. these two strings are divided by a <code>:</code></p> <ul> <li>The <code>Comment String</code> contains all the data regarding the comment itself</li> <li>The <code>User String</code> contains all the data regarding the user who is commenting</li> </ul> <p>The <code>Comment String</code> and <code>User String</code> are both structured with a <code>key~value~key~value</code> pairing. Here is some examples of raw responses from the server</p>"},{"location":"server/models/comments/#level-comment-example","title":"Level Comment Example","text":"<pre><code>2~R0QgRG9jcyBhcmUgZXBpYw==~3~84696119~4~0~7~0~10~0~9~2 seconds~6~12872819:1~TheWylieMaster~9~1~10~4~11~16~14~3~15~2~16~9276649       \n</code></pre>"},{"location":"server/models/comments/#account-comment-example","title":"Account Comment Example","text":"<pre><code>2~R0QgRG9jcyBhcmUgZXBpYw==~4~11~9~3 months~6~18083050\n</code></pre> <p>Each <code>key</code> is tied to a component within the client and the <code>value</code> sets data for the specific component. A list of all known keys can be found in the table below</p>"},{"location":"server/models/comments/#comment-structure","title":"Comment Structure","text":"<p>Note: Keys marked with an asterisk <code>*</code> do not affect <code>Account Comments</code></p> Key Name/Value Type Description 1 levelID Integer The levelID linked to the comment 2 comment String The comment left by the user, encoded in base64 3 authorPlayerID Integer The player ID of the comment author 4 likes Integer The amount of likes the comment has 5 dislikes Integer The amount of dislikes the comment has -&gt; unused 6 messageID Integer The message ID. Account comments have different IDs than level comments 7 spam Bool If a comment has been flagged as spam 8 authorAccountID Integer The accountID of the comment author 9 age String How long ago the comment was posted (e.g. \"2 months\") 10 percent* Integer The percent the player put in their comment 11 modBadge* Integer The Mod Badge of a moderator commenting 12 moderatorChatColor* String Comma separated list of the RGB values of the moderator's chat color - only appears if the players <code>modBadge &gt; 0</code>"},{"location":"server/models/comments/#user-structure","title":"User Structure","text":"<p>Note: These values are only returned through <code>Level Comments</code></p> Key Name/Value Type Description 1 userName String Author's username 9 icon Integer Which icon the player is using, starting with 1 as the first icon 10 playerColor Integer Author's primary player color, presumably ordered cronologically from left to right per update 11 playerColor2 Integer Author's secondary player color, presumably ordered cronologically from left to right per update 14 iconType Integer Author's icon type indexing an array of <code>icon, ship, ball, ufo, wave, robot, spider</code> 15 glow Integer 0 = no glow, 2 = glow 16 accountID Integer Author's account ID. This is different than the player ID"},{"location":"server/models/comments/#comment-bans","title":"Comment Bans","text":"<p>If a user violates the commenting rules, they can be banned from posting comments.</p> <p>As of Geometry Dash version 2.11, there are 2 different types of bans - Permanent Bans - Only way to recieve one is by RobTop directly. The server response to trigger this is <code>-10</code> - Temporary Bans - Elder Moderators and RobTop are able to enforce these onto people. The server response to trigger temporary bans is split into 3 components <code>temp_{length}_{reason}</code></p>"},{"location":"server/models/comments/#temporary-ban-structure","title":"Temporary Ban Structure","text":"Component Description <code>temp</code> is used for the game to identify if the user is banned <code>length</code> The duration of the ban in seconds <code>reason</code> The reason the user was banned"},{"location":"server/models/comments/#trivia","title":"Trivia","text":"<ul> <li> <p>The <code>User String</code> uses the same response parser that player profiles use</p> </li> <li> <p>The only example of <code>Account Comments</code> where it was able to display a colour is with RobTop's profile, this is because RobTop hardcoded the account colour into the accountID of <code>71</code></p> </li> </ul>"},{"location":"server/models/friend_requests/","title":"Server Friend Request Resource","text":""},{"location":"server/models/friend_requests/#friend-request","title":"Friend Request","text":"<p>One of the features in Geometry Dash is the friend system which allows players to add each other as a friend. It is part of a poorly developed social System in which players can send messages to each other.</p> <p>The server response returns a User String in a response which is structured with a <code>key:value:key:value</code> pairing. Each friend request string is then split with a <code>|</code></p>"},{"location":"server/models/friend_requests/#friend-request-example","title":"Friend Request Example","text":"<pre><code>1:TheWylieMaster:2:84696119:9:9:10:5:11:3:14:1:15:0:16:9276649:32:45272143:35:aGVsbG8=:41:1:37:1 week        \n</code></pre> <p>Each <code>key</code> is tied to a component within the client and the <code>value</code> sets data for the specific component. A list of all known keys can be found in the table below</p>"},{"location":"server/models/friend_requests/#friend-request-structure","title":"Friend Request Structure","text":"<p>Note: We will use \"other user\" to describe the user on the other side of the friend request, be it the receiving end or the sending end.</p> Key Name/Value Type Description 1 userName String The username of the other user 2 playerID Integer The player ID of the other user. This is different than the account ID 9 icon Integer Which icon the other user is using, starting with 1 as the first icon 10 playerColor Integer The other user's primary player color, presumably ordered cronologically from left to right per update 11 playerColor2 Integer The other user's secondary player color, presumably ordered cronologically from left to right per update 14 iconType Integer The other user's icon type indexing an array of <code>icon, ship, ball, ufo, wave, robot, spider</code> 15 glow Integer Either 0 or 2, might be related to glow 16 accountID Integer The other user's account ID. This is different than the player ID 32 friendRequestID Integer An ID unique to each friend request. (I'm not 100% certain on this) 35 message String The friend requests's message, encoded in base64 37 age String How long ago the friend request was sent (e.g. \"2 months\") 41 NewFriendRequest Bool if the friend request is new"},{"location":"server/models/friend_requests/#trivia","title":"Trivia","text":"<ul> <li>By sending yourself a friend request through 3rd party tools, you can actually block yourself. Doing so doesn't have any serious consequences as you can see in this video by Cvolton</li> </ul>"},{"location":"server/models/gauntlets/","title":"Server Gauntlet Resource","text":""},{"location":"server/models/gauntlets/#gauntlet-info","title":"Gauntlet Info","text":"<p>Gauntlets are a collection of themed levels created by the users of Geometry Dash which were hand-picked by RobTop.</p> <ul> <li> <p>As of Geometry Dash 2.11, There are <code>15 gauntlets</code></p> </li> <li> <p>According to the December 2019 2.2 leaks, 2.2 will include <code>44 Gauntlets</code></p> <ul> <li>A list of the Gauntlet Names can be found hereKeep in mind that these are subject to change</li> </ul> </li> </ul> <p>A typical gauntlet server response is structured with a <code>key:value:key:value</code> pairing and is then split with a <code>|</code></p>"},{"location":"server/models/gauntlets/#gauntlet-example-response","title":"Gauntlet Example Response","text":"<pre><code>1:1:3:27732941,28200611,27483789,28225110,27448202|1:2:3:20635816,28151870,25969464,24302376,27399722 \n</code></pre> <p>Each <code>key</code> is tied to a component within the client and the <code>value</code> sets data for the specific component. A list of all known keys can be found in the table below</p>"},{"location":"server/models/gauntlets/#gauntlet-structure","title":"Gauntlet Structure","text":"Key Name/Value Type Description 1 gauntletID Integer the Gauntlet ID, starting at 1 3 levels String List of gauntlet level IDs seperated by <code>,</code>"},{"location":"server/models/gauntlets/#gauntlet-names","title":"Gauntlet names","text":"<p>Here is a table which shows which <code>gauntletID</code> corresponds to a specific gauntlet</p> ID \u2800 Name 1 Fire 2 Ice 3 Poison 4 Shadow 5 Lava 6 Bonus 7 Chaos 8 Demon 9 Time 10 Crystal 11 Magic 12 spike 13 Monster 14 Doom 15 Death 16 Forest 17 Rune 18 Force 19 Spooky 20 Dragon 21 Water 22 Haunted 23 Acid 24 Witch 25 Power 26 Potion 27 Snake 28 Toxic 29 Halloween 30 Treasure 31 Ghost 32 Gem 33 Inferno 34 Portal 35 Strange 36 Fantasy 37 Christmas 38 Surprise 39 Mystery 40 Cursed 41 Cyborg 42 Castle 43 Grave 44 Temple"},{"location":"server/models/gauntlets/#trivia","title":"Trivia","text":"<ul> <li>Gauntlets use the same response parser as MapPacks but they do not share the full range of features mappacks have</li> </ul>"},{"location":"server/models/leaderboards/","title":"Server Leaderboard Score Resource","text":""},{"location":"server/models/leaderboards/#leaderboard-score","title":"Leaderboard Score","text":"<p>Leaderboards are the in-game ranking system for Geometry Dash. There are <code>7</code> types of leaderboards that are used as of version <code>2.11</code> </p> <ul> <li><code>Star Top 100</code> - The top 100 best star grinders</li> <li><code>Star Friends</code> - The relative leaderboards between the user and his friends</li> <li><code>Relative Star</code> - The players position on the global leaderboards along with 100 other players that have a rank relative to the player</li> <li><code>Creator Top 100</code> - The top 100 creator point grinders</li> <li><code>Global Level Scores</code> - The fastest victors to a specific level since the level was uploaded to the servers</li> <li><code>Global Weekly Level Scores</code> - The fastest victors to a specific level since the last <code>604800</code> seconds</li> <li><code>Friend Level Scores</code> - The fastest victors to a specific level between the user and his friends since the level was uploaded to the servers</li> </ul> <p>A typical leaderboard server response is structured with a <code>key:value:key:value</code> pairing and is then split with a <code>|</code></p>"},{"location":"server/models/leaderboards/#level-leaderboard-example","title":"Level Leaderboard Example","text":"<pre><code>1:TheWylieMaster:2:84696119:9:1:10:4:11:16:14:3:15:2:16:9276649:3:34:6:1:13:0:42:1 second       \n</code></pre>"},{"location":"server/models/leaderboards/#top-leaderboard-example","title":"Top Leaderboard Example","text":"<pre><code>1:xMiguel007:2:2866103:13:149:17:7219:6:1:9:37:10:35:11:3:14:0:15:2:16:70846:3:65710:8:0:46:12879:4:1073        \n</code></pre> <p>Each <code>key</code> is tied to a component within the client and the <code>value</code> sets data for the specific component. A list of all known keys can be found in the table below</p>"},{"location":"server/models/leaderboards/#leaderboard-score-structure","title":"Leaderboard Score Structure","text":"<p>Note: keys marked by a <code>*</code> are only used for level leaderboards</p> Key Name/Value Type Description 1 userName String The username of the user 2 playerID Integer The player ID of the user. This is different than the account ID 3 percentage* Integer Percentage the user has on the level 6 ranking Integer What rank they are (e.g. Viprin would have 1 in the creating leaderboard) 9 Icon Integer Which icon the user is using, starting with 1 as the first icon 10 playerColor Integer The user's primary player color, presumably ordered cronologically from left to right per update 11 playerColor2 Integer The user's secondary player color, presumably ordered cronologically from left to right per update 13 coins Integer Secret coins/number of usercoins you get on a level* 14 iconType Integer The user's icon type indexing an array of <code>icon, ship, ball, ufo, wave, robot, spider</code> 15 special Integer functions the same as glow however it returns a 2 rather than a 1 16 accountID Integer The user's account ID. This is different than the player ID 42 age String How long ago the score was set (e.g. \"2 months\")"},{"location":"server/models/leaderboards/#trivia","title":"Trivia","text":"<ul> <li>The key structure that leaderboards follow are exactly the same as the structure used for Player Profiles </li> </ul>"},{"location":"server/models/levels/","title":"Server Level Resource","text":""},{"location":"server/models/levels/#level","title":"Level","text":"<p>A level is a playable object in Geometry Dash, namely coming with data that explains on what it is, and the string that the client interprets, known as a level string.</p> <p>A typical level server response is structured with a <code>key:value:key:value</code> pairing and is then split with a <code>|</code></p> <p>keep in mind that the value for key <code>4</code> will be replaced with <code>{levelString}</code> as it is too big to show</p>"},{"location":"server/models/levels/#level-example-response","title":"Level Example Response","text":"<pre><code>1:6508283:2:ReTraY:3:VGhhbmtzIGZvciBwbGF5aW5nIEdlb21ldHJ5IERhc2g=:4:{levelString}:5:3:6:4993756:8:10:9:10:10:39431612:12:0:13:21:14:4125578:17::43:3:25::18:2:19:7730:42:0:45:20000:15:3:30:0:31:0:28:5 years:29:1 year:35:557117:36:0_733_0_0_0_0_574_716_0_0_352_78_729_0_42_0_833_68_0_347_0_38_240_205_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0:37:3:38:1:39:2:46:7729:47:13773:40:0:27:AwMABAYDBw==#eb541c03f8355c0709f8007a1d9a595ae5bedc5d#291568b26b08d70a198fca10a87c736a2823be0c\n</code></pre> <p>Each <code>key</code> is tied to a component within the client and the <code>value</code> sets data for the specific component. A list of all known keys can be found in the table below</p>"},{"location":"server/models/levels/#level-object","title":"Level Object","text":"<p>Keys indicated with an asterisk (*) are only returned from the downloadGJLevel22 endpoint.</p>"},{"location":"server/models/levels/#level-structure","title":"Level Structure","text":"Key Name/Value Type Description 1 levelID Integer The id of the level 2 levelName String The name of the level 3 description String The level description, encoded in base64 4* levelString Level String All the data for the level 5 version Integer The version of the level published 6 playerID Integer The player ID of the level author 8 difficultyDenominator Integer Returns 0 if the level is N/A, returns 10 if a difficulty is assigned. Historically used to be the amount of people who have voted on the difficulty. 9 difficultyNumerator Integer The nominator used for calculating the level difficulty. Divided by the denominator to get the difficulty icon. Nowadays just 0 = unrated, 10 = easy, 20 = normal, 30 = hard, 40 = harder, 50 = insane. Can be also used to determine the demon difficulty as a side-effect of the voting system. Historically used to be the sum of stars from all votes 10 downloads Integer The amount of times the level has been downloaded 11 setCompletes Integer The Number of people who have completed a specific level removed in update 2.1 12 officialSong Integer The official song number used by the level, if applicable 13 gameVersion Integer The GD version the level was uploaded in. Versions 1.0 to 1.6 use version numbers 1 to 7 respectively. Version 10 is 1.7. Otherwise, divide the version number by ten to get the correct number. 14 likes Integer likes - dislikes 15 length Integer A number from 0-4, where 0 is tiny and 4 is XL 16 dislikes Integer dislikes - likes 17 demon Bool If the level's difficulty is demon 18 stars Integer The amount of stars rewarded for completing the level 19 featureScore Integer 0 if the level is not featured, otherwise a positive number. The higher it is, the higher the level appears on the featured levels list. 25 auto Bool If the level's difficulty is auto 26 recordString String appears in the GJGameLevel parser but is unused 27* password Encrypted String The password required to copy the level. It is XOR encrypted with a key of 26364 28* uploadDate String The approximate date the level was uploaded on 29* updateDate String The approximate date the level was last updated on 30 copiedID Integer The ID the of the original level (if the level was copied) 31 twoPlayer Bool Whether the level uses two player mode 35 customSongID Integer The ID of the custom Newgrounds song used in the level 36 extraString String The extraString passed when uploading the level. Its use is currently unknown 37 coins Integer The number of user coins placed in the level 38 verifiedCoins Bool If the level's user coins are verified (silver) 39 starsRequested Integer The star value requested for the level 40* lowDetailMode Bool If the level has a low detail checkbox 41* dailyNumber Integer Daily/weekly levels only. Returns which daily/weekly the level was (e.g. the 500th daily level). Subtract 100,000 if the level is weekly 42 epic Integer If the level has an epic rating 43 demon Difficulty Integer The difficulty of the demon rating. 3 = easy, 4 = medium, 0 = hard, 5 = insane, 6 = extreme. Can also be used to determine the level difficulty non-demons had before rating as a side-effect of the voting system. 44 isGauntlet Bool if the level is in a gauntlet 45 objects Integer The amount of objects in the level, used to determine if the level is considered \"large\". It caps at 65535 46 editorTime Integer the total number of seconds spend on the current copy of a level 47 editorTime(Copies) Integer The accumulative total of seconds spend on previous copies of the level 48 settingsString [Unused] String It was found in early 2.1 coming from the servers and was removed shortly after. The <code>December 2019 2.2 Leaks</code> however have information regarding it showing that it is called <code>settingsString</code> but, there is no information regarding its usage"},{"location":"server/models/levels/#trivia","title":"Trivia","text":"<ul> <li> <p>The getGJLevels endpoint returns the keys <code>46</code> and <code>47</code> however they aren't actually correct</p> </li> <li> <p>key <code>45</code> caps at the 16-bit integer limit so any level with more objects won't be accurate</p> </li> <li> <p>Surprisingly, key <code>42</code> is classified as an <code>Integer</code> rather than a <code>Bool</code> </p> </li> </ul>"},{"location":"server/models/map_packs/","title":"Server Map Pack Resource","text":""},{"location":"server/models/map_packs/#map-pack","title":"Map Pack","text":"<p>A map pack is a series of 3 levels handpicked by Robtop. They preceded Gauntlets and can be seen as the predecessor to them. Upon completion, Map Packs can reward up to <code>10</code> stars and <code>2</code> secret coins.</p> <p>A typical map pack server response is structured with a <code>key:value:key:value</code> pairing and is then split with a <code>|</code></p>"},{"location":"server/models/map_packs/#map-pack-example","title":"Map Pack Example","text":"<pre><code>1:59:2:Cyclone Pack:3:1566116,946020,1100161:4:8:5:1:6:5:7:255,75,255:8:255,75,255|1:60:2:Colossus Pack:3:1350389,1215630,1724579:4:8:5:1:6:5:7:100,255,175:8:100,255,175|1:61:2:Diamond Pack:3:1267316,1670283,1205277:4:8:5:1:6:5:7:255,255,255:8:255,255,255|1:11:2:Chaos Pack:3:329929,188909,340602:4:9:5:1:6:5:7:255,125,0:8:255,125,0|1:44:2:Magma Pack:3:882417,884256,551979:4:9:5:1:6:5:7:255,100,50:8:255,100,50|1:62:2:Paradox Pack:3:1447246,1132530,1683722:4:9:5:1:6:5:7:50,255,75:8:50,255,75|1:63:2:Funky Pack:3:1728550,1799065,1311773:4:9:5:1:6:5:7:50,175,255:8:50,175,255|1:19:2:Remix Pack 4:3:341613,358750,369294:4:10:5:2:6:6:7:255,255,0:8:255,255,0|1:20:2:Demon Pack 1:3:70059,10109,135561:4:10:5:2:6:6:7:255,0,125:8:255,0,125|1:21:2:Demon Pack 2:3:57730,308891,102765:4:10:5:2:6:6:7:255,0,0:8:255,0,0#65:40:10#79c437d2cf75d2edf36a5094e0cc650c54440ba3\n</code></pre> <p>Each <code>key</code> is tied to a component within the client and the <code>value</code> sets data for the specific component. A list of all known keys can be found in the table below</p>"},{"location":"server/models/map_packs/#map-pack-structure","title":"Map Pack Structure","text":"Key Name/Value Type Description 1 packID Integer the ID for the specified Map Pack 2 packName String Name of the map pack 3 levels String List of level IDs separated by a <code>,</code> 4 stars Integer How many stars the map pack should give 5 coins Integer How many coins the map pack should give 6 difficulty Integer Difficulty ranging from <code>0-&gt;10</code> 7 textColor String RGB color for the title text separated by <code>,</code> 8 barColor String RGB color for the completion bar separated by <code>,</code>"},{"location":"server/models/map_packs/#trivia","title":"Trivia","text":"<ul> <li> <p>Map packs use the same response parser as gauntlets</p> </li> <li> <p>Although Map Packs only show a hard demon in-game, they can actually display each demon difficulty by using a specific value in key <code>6</code></p> </li> </ul>"},{"location":"server/models/map_packs/#difficulty-possible-values","title":"Difficulty possible values","text":"Value Difficulty 0 auto 1 easy 2 normal 3 hard 4 harder 5 insane 6 hard demon 7 easy demon 8 medium demon 9 insane demon 10 extreme demon"},{"location":"server/models/messages/","title":"Server Message Resource","text":""},{"location":"server/models/messages/#message","title":"Message","text":"<p>Messages are a feature in Geometry dash where you can send messages to other players online if they have their messages open. There are two fields you can control within a message: <code>Subject</code> and <code>Message</code></p> <p><code>Subject</code> can be viewed in a list in the messages menu - without any external tools, the <code>Subject</code> field only supports 35 characters</p> <p><code>Message</code> can be viewed only if you download the message by clicking on the <code>view</code> button in the messages menu - without any external tools, the <code>Messages</code> field only supports 200 characters</p> <p>A typical message server response is structured with a <code>key:value:key:value</code> pairing and is then split with a <code>|</code></p>"},{"location":"server/models/messages/#message-example-response","title":"Message Example Response","text":"<pre><code>6:DevExit:3:3935672:2:173831:1:54109536:4:WW91J3JlIGR1bWIgbG9s:8:1:9:0:5:TWhtIHllcCB5b3UncmUgcCBkdW1iIGxtYW8=:7:19 minutes\n</code></pre> <p>Each <code>key</code> is tied to a component within the client and the <code>value</code> sets data for the specific component. A list of all known keys can be found in the table below</p>"},{"location":"server/models/messages/#message-structure","title":"Message Structure","text":"<p>Note: We will use \"other user\" to describe the user on the other side of the message, be it the receiving end or the sending end.</p> Key Name/Value Type Description 1 messageID Integer The message ID 2 accountID Integer The other user's account ID 3 playerID Integer The other user's player ID 4 title String The title encoded in Base64 5 messageContent String The message which has been Xor'd with a key of <code>14251</code> and then encoded in base64 6 userName String The other user's username 7 age String How long ago the message was sent (e.g. \"2 months\") 8 read Bool 0 if the message hasn't been read, 1 if it has 9 sender Bool 0 if the user is receiving the message, 1 if they sent it"},{"location":"server/models/messages/#trivia","title":"Trivia","text":"<ul> <li> <p>The current message system has a bug in which replying to a message will fail. This is because the client does not have any checks to see if the other user has their messages open when replying so if you send a reply to a user who has their messages closed, the request will return the error code <code>-1</code> resulting in it failing</p> </li> <li> <p>Due to an oversight, you are able to block yourself if you send yourself a message. Cvolton explains this oversight in one of his videos</p> </li> </ul>"},{"location":"server/models/restore/","title":"Server Restore Resource","text":""},{"location":"server/models/restore/#restoregjitems","title":"RestoreGJItems","text":"<p><code>Restore</code> was a feature used in Geometry dash from versions <code>1.7 - 2.0</code> and it was used as an alternative to the Account System that is currently used as of 2.11</p> <p>A typical Gauntlet Server response is structured with a <code>key:value:key:value</code> pairing Official Levels behave a bit differently as you will find out further into his page</p> <ul> <li>Due to lack of resources about RestoreGJItems, most information has been lost to time.The only remaining archived response that we know about can be found here</li> </ul>"},{"location":"server/models/restore/#restore-items-structure","title":"Restore Items Structure","text":"Key Name/Value Type Description 1 officalLevels String Please refer to Official Level Structure 2 stars Integer This is how many stars that should be given to your account 3 demons Integer This is how many demons that should be added to your account 4 jumps Integer This is how many jumps you have made on your account of its lifetime 5 attempts Integer This is how many attempts you have spent on levels on your accounts lifetime 6 onlineLevels String These are the ID's of online levels you have beaten. seperated by <code>,</code>"},{"location":"server/models/restore/#official-level-structure","title":"Official Level Structure","text":"<p>There are three sections in regards to the <code>Official Level State</code> from the restore endpoint. The data is sent as <code>{NormalCompleted},{PracticeComepleted},{SecretCoins}</code></p> <ul> <li><code>{NormalCompleted}</code> is a <code>Bool</code> which denotes if you have completed the level in normal Mode</li> <li><code>{PracticeComepleted}</code> is a <code>Bool</code> which denotes if you have completed the level in practice Mode</li> <li><code>{SecretCoins}</code> is an <code>Integer</code> which includes the ammount of Secret Coins you collected during the completion of the official level</li> </ul> <p>This structure is then iterated for each official level in the update and is split with a <code>;</code></p>"},{"location":"server/models/songs/","title":"Server Song Resource","text":""},{"location":"server/models/songs/#song","title":"Song","text":"<p>Songs in Geometry Dash are supplied through a partnership with a website called Newgrounds. To be used in community made levels, a song must pass 3 requirements</p> <ul> <li>The Song must be scouted by another artist from newgrounds</li> <li>The Song must be whitelisted either by Robtop or an Elder Moderator</li> <li>The artist must enable external API use in their song settings</li> </ul> <p>The songs can be downloaded and used via a private API that only RobTop has access to</p> <p>A typical song server response is structured with a <code>key~|~value~|~key~|~value</code> pairing and is then split with a <code>:</code></p>"},{"location":"server/models/songs/#song-example","title":"Song Example","text":"<pre><code>1~|~803223~|~2~|~Xtrullor - Arcana~|~3~|~2159~|~4~|~Xtrullor~|~5~|~8.81~|~6~|~~|~10~|~https%3A%2F%2Faudio.ngfiles.com%2F803000%2F803223_Xtrullor---Arcana.mp3%3Ff1524940372~|~7~|~UCejLri1RVC7kj8ZVNX2a53g      \n</code></pre> <p>Each <code>key</code> is tied to a component within the client and the <code>value</code> sets data for the specific component. A list of all known keys can be found in the table below</p>"},{"location":"server/models/songs/#song-structure","title":"Song Structure","text":"Key Name/Value Type Description 1 ID Integer The ID of the song on Newgrounds 2 name String The name of the song 3 artistID Integer Newgrounds ArtistID 4 artistName String The name of the artist who made the song 5 size Integer Size of the song in MB, rounded to two decimal places 6 videoID String the Video ID for the songs YouTube Video 7 youtubeURL String The URL of the newgrounds user's youtube channel 8 isVerified Bool if the song artist is scouted on newgrounds 9 songPriority Integer priority over the song list 10 link String Link to the song's mp3"},{"location":"server/models/users/","title":"Server User Resource","text":""},{"location":"server/models/users/#users","title":"Users","text":"<p>Each player of Geometry Dash has their own profile which includes various different elements such as in-game stats, icons and even socials.</p> <p>A typical user server response is structured with a <code>key:value:key:value</code> pairing and is then split with a <code>|</code></p>"},{"location":"server/models/users/#user-example-response","title":"User Example Response","text":"<pre><code>1:TheWylieMaster:2:84696119:13:67:17:176:10:4:11:16:3:1725:46:2991:4:33:8:0:18:0:19:0:50:0:20:../watch?v=dQw4w9WgXcQ:21:31:22:10:23:30:24:1:25:35:26:23:28:1:43:11:48:1:30:0:16:9276649:31:0:44:TheWylieMaster:45::49:0:38:0:39:0:40:0:41:1:29:1\n</code></pre> <p>Each <code>key</code> is tied to a component within the client and the <code>value</code> sets data for the specific component. A list of all known keys can be found in the table below</p> Key Name/Value Type Description 1 userName String The name of player 2 userID Integer The ID of player 3 stars Integer The count of stars player have 4 demons Integer The count of demons player have 6 ranking Integer the global leaderboard position of the player 7 accountHighlight Integer The accountID of the player. Is used for highlighting the player on the leaderboards 8 creatorpoints Integer The count of creatorpoints player have 9 iconID Integer maybe... link 10 playerColor Integer First color of the player use 11 playerColor2 Integer Second color of the player use 13 secretCoins Integer The count of coins player have 14 iconType Integer The iconType of the player use 15 special Integer The special number of the player use 16 accountID Integer The accountid of this player 17 usercoins Integer The count of usercoins player have 18 messageState Integer 0: All, 1: Only friends, 2: None 19 friendsState Integer 0: All, 1: None 20 youTube String The youtubeurl of player 21 accIcon Integer The icon number of the player use 22 accShip Integer The ship number of the player use 23 accBall Integer The ball number of the player use 24 accBird Integer The bird number of the player use 25 accDart(wave) Integer The dart(wave) number of the player use 26 accRobot Integer The robot number of the player use 27 accStreak Integer The streak of the user 28 accGlow Integer The glow number of the player use 29 isRegistered Integer if an account is registered or not 30 globalRank Integer The global rank of this player 31 friendstate Integer 0: None, 1: already is friend, 3: send request to target, but target haven't accept, 4: target send request, but haven't accept 38 messages Integer How many new messages the user has (shown in-game as a notification) 39 friendRequests Integer How many new friend requests the user has (shown in-game as a notificaiton) 40 newFriends Integer How many new Friends the user has (shown in-game as a notificaiton) 41 NewFriendRequest Bool appears on userlist endpoint to show if the friend request is new 42 age String the time since you submitted a levelScore 43 accSpider Integer The spider number of the player use 44 twitter String The twitter of player 45 twitch String The twitch of player 46 diamonds Integer The count of diamonds player have 48 accExplosion Integer The explosion number of the player use 49 modlevel Integer 0: None, 1: Normal Mod(yellow), 2: Elder Mod(orange) 50 commentHistoryState Integer 0: All, 1: Only friends, 2: None"},{"location":"server/models/users/#trivia","title":"Trivia","text":"<ul> <li> <p>Setting Key <code>29</code> to <code>0</code> stops most aspects of your profile from loading</p> </li> <li> <p>Key <code>27</code> is impossible to recieve from the server as there is no way for the server to know what the player's <code>streak</code> is</p> </li> </ul>"},{"location":"server/topics/error_codes/","title":"Error Codes","text":"<p>Geometry Dash servers usually send an error code denoting an error either on the servers' or the client's side.</p>"},{"location":"server/topics/error_codes/#general-error-codes","title":"General Error Codes","text":"code name <code>-1</code> General (Generic) <code>-2</code> No Result / Taken"},{"location":"server/topics/error_codes/#specific-error-codes","title":"Specific Error Codes","text":""},{"location":"server/topics/error_codes/#register","title":"Register","text":"code name description <code>-2</code> Name Taken The name is taken. <code>-3</code> Email Used The email is already used. <code>-4</code> Invalid Name The name is invalid. <code>-5</code> Invalid Password The password is invalid. <code>-6</code> Invalid Email The email is invalid. <code>-7</code> Password Mismatch The passwords do not match. <code>-8</code> Password Too Short The password is too short (minimum 6 characters). <code>-9</code> Name Too Short The name is too short (minimum 3 characters). <code>-99</code> Email Mismatch The emails do not match."},{"location":"server/topics/error_codes/#login","title":"Login","text":"code name description <code>-8</code> Password Too Short The password is less than 6 characters long. <code>-9</code> Name Too Short The name is less than 3 characters long. <code>-10</code> Linked to Different Account Already logged into a different account. <code>-11</code> Login Failed Login credentials are incorrect. <code>-12</code> Account Disabled The account has been disabled. <code>-13</code> Linked to Different Steam One account is allowed per one steam account (unused)."},{"location":"server/topics/error_codes/#save","title":"Save","text":"code name description <code>-2</code> Login Failed Login credentials are wrong. <code>-4</code> Request Too Large Request to the server is too large. <code>-5</code> Bad Login Info Invalid login information was provided. <code>-6</code> Something Went Wrong Something went wrong on the servers' end."},{"location":"server/topics/error_codes/#suggest-level","title":"Suggest Level","text":"code name description <code>-2</code> Missing Permissions Missing permissions to suggest levels."},{"location":"server/topics/error_codes/#comment-level","title":"Comment Level","text":"code name description <code>-10</code> Permanent Comment Ban Permanently banned from commenting on levels. <code>temp_{timeout}_{reason}</code>* Temporary Comment Ban Temporarily banned from commenting on levels. <p>* <code>timeout</code> is the remaining duration of the ban in seconds, <code>reason</code> is the reason for getting banned.</p>"},{"location":"server/topics/secrets/","title":"Secrets","text":"name value description Common Secret <code>Wmfd2893gb7</code> Used in the majority of endpoints. Account Secret <code>Wmfv3899gc9</code> Used in all account-related endpoints. Level Secret <code>Wmfv2898gc9</code> Used in level deletion endpoint. Moderation Secret <code>Wmfp3879gc3</code> Used in moderator-only endpoints."},{"location":"server/topics/songs/","title":"Geometry Dash Songs","text":"<p>Song IDs are represented in server-style; for client-style, simply add one to the ID.</p> Level ID Song ID Name Artist <code>None</code> <code>-1</code> <code>Practice: Stay Inside Me</code> <code>OcularNebula</code> <code>1</code> <code>0</code> <code>Stereo Madness</code> <code>Foreverbound</code> <code>2</code> <code>1</code> <code>Back on Track</code> <code>DJVI</code> <code>3</code> <code>2</code> <code>Polargeist</code> <code>Step</code> <code>4</code> <code>3</code> <code>Dry Out</code> <code>DJVI</code> <code>5</code> <code>4</code> <code>Base after Base</code> <code>DJVI</code> <code>6</code> <code>5</code> <code>Can't Let Go</code> <code>DJVI</code> <code>7</code> <code>6</code> <code>Jumper</code> <code>Waterflame</code> <code>8</code> <code>7</code> <code>Time Machine</code> <code>Waterflame</code> <code>9</code> <code>8</code> <code>Cycles</code> <code>DJVI</code> <code>10</code> <code>9</code> <code>xStep</code> <code>DJVI</code> <code>11</code> <code>10</code> <code>Clutterfunk</code> <code>Waterflame</code> <code>12</code> <code>11</code> <code>Theory of Everything</code> <code>DJ-Nate</code> <code>13</code> <code>12</code> <code>Electroman Adventures</code> <code>Waterflame</code> <code>14</code> <code>13</code> <code>Clubstep</code> <code>DJ-Nate</code> <code>15</code> <code>14</code> <code>Electrodynamix</code> <code>DJ-Nate</code> <code>16</code> <code>15</code> <code>Hexagon Force</code> <code>Waterflame</code> <code>17</code> <code>16</code> <code>Blast Processing</code> <code>Waterflame</code> <code>18</code> <code>17</code> <code>Theory of Everything 2</code> <code>DJ-Nate</code> <code>19</code> <code>18</code> <code>Geometrical Dominator</code> <code>Waterflame</code> <code>20</code> <code>19</code> <code>Deadlocked</code> <code>F-777</code> <code>21</code> <code>20</code> <code>Fingerdash</code> <code>MDK</code> <code>1001</code> <code>21</code> <code>The Seven Seas</code> <code>F-777</code> <code>1002</code> <code>22</code> <code>Viking Arena</code> <code>F-777</code> <code>1003</code> <code>23</code> <code>Airborne Robots</code> <code>F-777</code> <code>3001</code> <code>24</code> <code>The Challenge</code> <code>RobTop</code> <code>2001</code> <code>25</code> <code>Payload</code> <code>Dex Arson</code> <code>2002</code> <code>26</code> <code>Beast Mode</code> <code>Dex Arson</code> <code>2003</code> <code>27</code> <code>Machina</code> <code>Dex Arson</code> <code>2004</code> <code>28</code> <code>Years</code> <code>Dex Arson</code> <code>2005</code> <code>29</code> <code>Frontlines</code> <code>Dex Arson</code> <code>2006</code> <code>30</code> <code>Space Pirates</code> <code>Waterflame</code> <code>2007</code> <code>31</code> <code>Striker</code> <code>Waterflame</code> <code>2008</code> <code>32</code> <code>Embers</code> <code>Dex Arson</code> <code>2009</code> <code>33</code> <code>Round 1</code> <code>Dex Arson</code> <code>2010</code> <code>34</code> <code>Monster Dance Off</code> <code>F-777</code> <code>4001</code> <code>35</code> <code>Press Start</code> <code>MDK</code> <code>4002</code> <code>36</code> <code>Nock Em</code> <code>Bossfight</code> <code>4003</code> <code>37</code> <code>Power Trip</code> <code>Boom Kitty</code>"},{"location":"server/topics/versions/","title":"Versions","text":"name current Game Version <code>21</code> Binary Version <code>35</code>"}]}